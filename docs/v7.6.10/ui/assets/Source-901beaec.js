import{j as E}from"./jsx-runtime-31019b9d.js";import{r as S}from"./index-9f32f44c.js";import{a as N,S as x}from"./index-c768ebd8.js";import{d as g}from"./index-356e4a49.js";import{S as F,a as C}from"./Source-9e9bdbea.js";import{D as B}from"./DocsContext-57fe6f9a.js";import{s as L}from"./index-177da4c8.js";import{u as U}from"./useStory-2e815b3a.js";function _(e){return L(e)}const O=S.createContext({sources:{}}),R="--unknown--",v=({children:e,channel:r})=>{const[a,s]=S.useState({});return S.useEffect(()=>{const o=(t,u=null,l=!1)=>{const{id:n,args:i=void 0,source:f,format:m}=typeof t=="string"?{id:t,source:u,format:l}:t,c=i?_(i):R;s(d=>({...d,[n]:{...d[n],[c]:{code:f,format:m}}}))};return r.on(N,o),()=>r.off(N,o)},[]),E(O.Provider,{value:{sources:a},children:e})};try{_.displayName="argsHash",_.__docgenInfo={description:"",displayName:"argsHash",props:{}}}catch{}try{v.displayName="SourceContainer",v.__docgenInfo={description:"",displayName:"SourceContainer",props:{channel:{defaultValue:null,description:"",name:"channel",required:!0,type:{name:"Channel"}}}}}catch{}const{deprecate:h}=__STORYBOOK_MODULE_CLIENT_LOGGER__;var D=(e=>(e.OPEN="open",e.CLOSED="closed",e.NONE="none",e))(D||{});const G=e=>{const r=e.map(a=>{var s,o;return(o=(s=a.parameters.docs)==null?void 0:s.source)==null?void 0:o.state}).filter(Boolean);return r.length===0?"closed":r[0]},H=(e,r,a)=>{const{sources:s}=a,o=s==null?void 0:s[e];return(o==null?void 0:o[_(r)])||(o==null?void 0:o[R])||{code:""}},w=({snippet:e,storyContext:r,typeFromProps:a,transformFromProps:s})=>{var f,m,c,d,p;const{__isArgsStory:o}=r.parameters,t=((f=r.parameters.docs)==null?void 0:f.source)||{},u=a||t.type||x.AUTO;if(t.code!==void 0)return t.code;const n=u===x.DYNAMIC||u===x.AUTO&&e&&o?e:t.originalSource||"";t.transformSource&&h(g`The \`transformSource\` parameter at \`parameters.docs.source.transformSource\` is deprecated, please use \`parameters.docs.source.transform\` instead. 
    
    Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#source-block
  `),(m=r.parameters.docs)!=null&&m.transformSource&&h(g`The \`transformSource\` parameter at \`parameters.docs.transformSource\` is deprecated, please use \`parameters.docs.source.transform\` instead. 
    
    Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#source-block
  `),(c=r.parameters.jsx)!=null&&c.transformSource&&h(g`The \`transformSource\` parameter at \`parameters.jsx.transformSource\` is deprecated, please use \`parameters.docs.source.transform\` instead. 
    
    Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#source-block
  `);const i=s??t.transform??t.transformSource??((d=r.parameters.docs)==null?void 0:d.transformSource)??((p=r.parameters.jsx)==null?void 0:p.transformSource);return(i==null?void 0:i(n,r))||n},k=(e,r,a)=>{var d,p,I;const s=e.ids||(e.id?[e.id]:[]),o=U(s,r);let t=o;const{of:u}=e;if("of"in e&&u===void 0)throw new Error("Unexpected `of={undefined}`, did you mistype a CSF file reference?");if(u)t=[r.resolveOf(u,["story"]).story];else if(t.length===0)try{t=[r.storyById()]}catch{}if(!o.every(Boolean))return{error:C.SOURCE_UNAVAILABLE,state:"none"};const l=((I=(p=(d=t[0])==null?void 0:d.parameters)==null?void 0:p.docs)==null?void 0:I.source)||{};let{code:n}=e,i=e.format??l.format;const f=e.language??l.language??"jsx",m=e.dark??l.dark??!1;n||(n=t.map((y,j)=>{var V,q;if(!y)return"";const b=r.getStoryContext(y),A=e.__forceInitialArgs?b.initialArgs:b.unmappedArgs,T=H(y.id,A,a);return j===0&&(i=T.format??((q=(V=y.parameters.docs)==null?void 0:V.source)==null?void 0:q.format)??!1),w({snippet:T.code,storyContext:{...b,args:A},typeFromProps:e.type,transformFromProps:e.transform})}).join(`

`));const c=G(t);return n?{code:n,format:i,language:f,dark:m,state:c}:{error:C.SOURCE_UNAVAILABLE,state:c}},P=e=>{e.id&&h(g`The \`id\` prop on Source is deprecated, please use the \`of\` prop instead to reference a story. 
    
    Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#source-block
  `),e.ids&&h(g`The \`ids\` prop on Source is deprecated, please use the \`of\` prop instead to reference a story. 
    
    Please refer to the migration guide: https://github.com/storybookjs/storybook/blob/next/MIGRATION.md#source-block
  `);const r=S.useContext(O),a=S.useContext(B),{state:s,...o}=k(e,a,r);return E(F,{...o})};try{k.displayName="useSourceProps",k.__docgenInfo={description:"",displayName:"useSourceProps",props:{language:{defaultValue:null,description:"The language the syntax highlighter uses for your story’s code",name:"language",required:!1,type:{name:"string"}},code:{defaultValue:null,description:"Use this to override the content of the source block.",name:"code",required:!1,type:{name:"string"}},format:{defaultValue:null,description:"The (prettier) formatter the syntax highlighter uses for your story’s code.",name:"format",required:!1,type:{name:"SyntaxHighlighterFormatTypes"}},dark:{defaultValue:null,description:"Display the source snippet in a dark mode.",name:"dark",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Where to read the source code from, see `SourceType`",name:"type",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"code"'},{value:'"dynamic"'}]}},transformSource:{defaultValue:null,description:"Transform the detected source for display\n@deprecated use `transform` prop instead",name:"transformSource",required:!1,type:{name:"((code: string, storyContext: StoryContextForLoaders<Renderer, Args>) => string)"}},transform:{defaultValue:null,description:"Transform the detected source for display",name:"transform",required:!1,type:{name:"((code: string, storyContext: StoryContextForLoaders<Renderer, Args>) => string)"}},originalSource:{defaultValue:null,description:"Internal: set by our CSF loader (`enrichCsf` in `@storybook/csf-tools`).",name:"originalSource",required:!1,type:{name:"string"}},of:{defaultValue:null,description:`Pass the export defining a story to render its source

\`\`\`jsx
import { Source } from '@storybook/blocks';
import * as ButtonStories from './Button.stories';

<Source of={ButtonStories.Primary} />
\`\`\``,name:"of",required:!1,type:{name:"any"}},id:{defaultValue:null,description:"@deprecated use of={storyExport} instead",name:"id",required:!1,type:{name:"string"}},ids:{defaultValue:null,description:"@deprecated use of={storyExport} instead",name:"ids",required:!1,type:{name:"string[]"}},__forceInitialArgs:{defaultValue:null,description:"Internal prop to control if a story re-renders on args updates",name:"__forceInitialArgs",required:!1,type:{name:"boolean"}}}}}catch{}try{P.displayName="Source",P.__docgenInfo={description:"Story source doc block renders source code if provided,\nor the source for a story if `storyId` is provided, or\nthe source for the current story if nothing is provided.",displayName:"Source",props:{language:{defaultValue:null,description:"The language the syntax highlighter uses for your story’s code",name:"language",required:!1,type:{name:"string"}},code:{defaultValue:null,description:"Use this to override the content of the source block.",name:"code",required:!1,type:{name:"string"}},format:{defaultValue:null,description:"The (prettier) formatter the syntax highlighter uses for your story’s code.",name:"format",required:!1,type:{name:"SyntaxHighlighterFormatTypes"}},dark:{defaultValue:null,description:"Display the source snippet in a dark mode.",name:"dark",required:!1,type:{name:"boolean"}},type:{defaultValue:null,description:"Where to read the source code from, see `SourceType`",name:"type",required:!1,type:{name:"enum",value:[{value:'"auto"'},{value:'"code"'},{value:'"dynamic"'}]}},transformSource:{defaultValue:null,description:"Transform the detected source for display\n@deprecated use `transform` prop instead",name:"transformSource",required:!1,type:{name:"((code: string, storyContext: StoryContextForLoaders<Renderer, Args>) => string)"}},transform:{defaultValue:null,description:"Transform the detected source for display",name:"transform",required:!1,type:{name:"((code: string, storyContext: StoryContextForLoaders<Renderer, Args>) => string)"}},originalSource:{defaultValue:null,description:"Internal: set by our CSF loader (`enrichCsf` in `@storybook/csf-tools`).",name:"originalSource",required:!1,type:{name:"string"}},of:{defaultValue:null,description:`Pass the export defining a story to render its source

\`\`\`jsx
import { Source } from '@storybook/blocks';
import * as ButtonStories from './Button.stories';

<Source of={ButtonStories.Primary} />
\`\`\``,name:"of",required:!1,type:{name:"any"}},id:{defaultValue:null,description:"@deprecated use of={storyExport} instead",name:"id",required:!1,type:{name:"string"}},ids:{defaultValue:null,description:"@deprecated use of={storyExport} instead",name:"ids",required:!1,type:{name:"string[]"}},__forceInitialArgs:{defaultValue:null,description:"Internal prop to control if a story re-renders on args updates",name:"__forceInitialArgs",required:!1,type:{name:"boolean"}}}}}catch{}export{P as S,_ as a,O as b,D as c,k as u};
//# sourceMappingURL=Source-901beaec.js.map
