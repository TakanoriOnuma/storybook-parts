{"version":3,"file":"Number-a23fefb8.js","sources":["../../ui/blocks/src/controls/Number.tsx"],"sourcesContent":["import type { FC, ChangeEvent } from 'react';\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { styled } from '@storybook/theming';\nimport { Button, Form } from '@storybook/components';\nimport { getControlId, getControlSetterButtonId } from './helpers';\n\nimport type { ControlProps, NumberValue, NumberConfig } from './types';\n\nconst Wrapper = styled.label({\n  display: 'flex',\n});\n\ntype NumberProps = ControlProps<NumberValue | null> & NumberConfig;\n\nexport const parse = (value: string) => {\n  const result = parseFloat(value);\n  return Number.isNaN(result) ? undefined : result;\n};\n\nexport const format = (value: NumberValue) => (value != null ? String(value) : '');\n\nexport const NumberControl: FC<NumberProps> = ({\n  name,\n  value,\n  onChange,\n  min,\n  max,\n  step,\n  onBlur,\n  onFocus,\n}) => {\n  const [inputValue, setInputValue] = useState(typeof value === 'number' ? value : '');\n  const [forceVisible, setForceVisible] = useState(false);\n  const [parseError, setParseError] = useState<Error>(null);\n\n  const handleChange = useCallback(\n    (event: ChangeEvent<HTMLInputElement>) => {\n      setInputValue(event.target.value);\n\n      const result = parseFloat(event.target.value);\n      if (Number.isNaN(result)) {\n        setParseError(new Error(`'${event.target.value}' is not a number`));\n      } else {\n        onChange(result);\n        setParseError(null);\n      }\n    },\n    [onChange, setParseError]\n  );\n\n  const onForceVisible = useCallback(() => {\n    setInputValue('0');\n    onChange(0);\n    setForceVisible(true);\n  }, [setForceVisible]);\n\n  const htmlElRef = useRef(null);\n  useEffect(() => {\n    if (forceVisible && htmlElRef.current) htmlElRef.current.select();\n  }, [forceVisible]);\n\n  useEffect(() => {\n    const newInputValue = typeof value === 'number' ? value : '';\n    if (inputValue !== newInputValue) {\n      setInputValue(value);\n    }\n  }, [value]);\n\n  if (!forceVisible && value === undefined) {\n    return (\n      <Button\n        variant=\"outline\"\n        size=\"medium\"\n        id={getControlSetterButtonId(name)}\n        onClick={onForceVisible}\n      >\n        Set number\n      </Button>\n    );\n  }\n\n  return (\n    <Wrapper>\n      <Form.Input\n        ref={htmlElRef}\n        id={getControlId(name)}\n        type=\"number\"\n        onChange={handleChange}\n        size=\"flex\"\n        placeholder=\"Edit number...\"\n        value={inputValue}\n        valid={parseError ? 'error' : null}\n        autoFocus={forceVisible}\n        {...{ name, min, max, step, onFocus, onBlur }}\n      />\n    </Wrapper>\n  );\n};\n"],"names":["Wrapper","styled","parse","value","result","NumberControl","name","onChange","min","max","step","onBlur","onFocus","inputValue","setInputValue","useState","forceVisible","setForceVisible","parseError","setParseError","handleChange","useCallback","event","onForceVisible","htmlElRef","useRef","useEffect","React","Button","getControlSetterButtonId","Form","getControlId"],"mappings":"uLAQA,MAAAA,EAAAC,EAAA,MAAA,CACA,QAAA,MACA,CAAA,EAIAC,EAAAC,GAAA,CACA,MAAAC,EAAA,WAAAD,CAAA,EACA,OAAA,OAAA,MAAAC,CAAA,EAAA,OAAAA,CACA,EAIAC,EAAA,CAAA,CACA,KAAAC,EACA,MAAAH,EACA,SAAAI,EACA,IAAAC,EACA,IAAAC,EACA,KAAAC,EACA,OAAAC,EACA,QAAAC,CACA,IAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAC,WAAA,OAAAZ,GAAA,SAAAA,EAAA,EAAA,EACA,CAAAa,EAAAC,CAAA,EAAAF,WAAA,EAAA,EACA,CAAAG,EAAAC,CAAA,EAAAJ,WAAA,IAAA,EAEAK,EAAAC,EAAA,YACAC,GAAA,CACAR,EAAAQ,EAAA,OAAA,KAAA,EAEA,MAAAlB,EAAA,WAAAkB,EAAA,OAAA,KAAA,EACA,OAAA,MAAAlB,CAAA,EACAe,EAAA,IAAA,MAAA,IAAAG,EAAA,OAAA,KAAA,mBAAA,CAAA,GAEAf,EAAAH,CAAA,EACAe,EAAA,IAAA,EAEA,EACA,CAAAZ,EAAAY,CAAA,CAAA,EAGAI,EAAAF,EAAAA,YAAA,IAAA,CACAP,EAAA,GAAA,EACAP,EAAA,CAAA,EACAU,EAAA,EAAA,CAAA,EACA,CAAAA,CAAA,CAAA,EAEAO,EAAAC,SAAA,IAAA,EAYA,OAXAC,EAAAA,UAAA,IAAA,CACAV,GAAAQ,EAAA,SAAAA,EAAA,QAAA,QAAA,EACA,CAAAR,CAAA,CAAA,EAEAU,EAAAA,UAAA,IAAA,CAEAb,KADA,OAAAV,GAAA,SAAAA,EAAA,KAEAW,EAAAX,CAAA,CACA,EACA,CAAAA,CAAA,CAAA,EAEA,CAAAa,GAAAb,IAAA,OAEAwB,EAAA,cAAAC,EAAA,CACA,QAAA,UACA,KAAA,SACA,GAAAC,EAAAvB,CAAA,EACA,QAAAiB,CAAA,EACA,YAAA,kBAOAvB,EACA,KAAA2B,EAAA,cAAAG,EAAA,MAAA,CACA,IAAAN,EACA,GAAAO,EAAAzB,CAAA,EACA,KAAA,SACA,SAAAc,EACA,KAAA,OACA,YAAA,iBACA,MAAAP,EACA,MAAAK,EAAA,QAAA,KACA,UAAAF,EACA,KAAAV,EAAA,IAAAE,EAAA,IAAAC,EAAA,KAAAC,EAAA,QAAAE,EAAA,OAAAD,CAAA,CAAA,CAEA,CAEA"}