{"version":3,"file":"Stories-3bc3f62f.js","sources":["../../ui/blocks/src/blocks/Heading.tsx","../../ui/blocks/src/blocks/Stories.tsx"],"sourcesContent":["import type { FC, PropsWithChildren } from 'react';\nimport React from 'react';\nimport { H2 } from '@storybook/components';\nimport { HeaderMdx } from './mdx';\n\nexport interface HeadingProps {\n  disableAnchor?: boolean;\n}\n\nexport const Heading: FC<PropsWithChildren<HeadingProps>> = ({\n  children,\n  disableAnchor,\n  ...props\n}) => {\n  if (disableAnchor || typeof children !== 'string') {\n    return <H2>{children}</H2>;\n  }\n  const tagID = children.toLowerCase().replace(/[^a-z0-9]/gi, '-');\n  return (\n    <HeaderMdx as=\"h2\" id={tagID} {...props}>\n      {children}\n    </HeaderMdx>\n  );\n};\n","import type { FC, ReactElement } from 'react';\nimport React, { useContext } from 'react';\nimport { styled } from '@storybook/theming';\nimport { DocsContext } from './DocsContext';\nimport { DocsStory } from './DocsStory';\nimport { Heading } from './Heading';\n\ninterface StoriesProps {\n  title?: ReactElement | string;\n  includePrimary?: boolean;\n}\n\nconst StyledHeading: typeof Heading = styled(Heading)(({ theme }) => ({\n  fontSize: `${theme.typography.size.s2 - 1}px`,\n  fontWeight: theme.typography.weight.bold,\n  lineHeight: '16px',\n  letterSpacing: '0.35em',\n  textTransform: 'uppercase',\n  color: theme.textMutedColor,\n  border: 0,\n  marginBottom: '12px',\n\n  '&:first-of-type': {\n    // specificity issue\n    marginTop: '56px',\n  },\n}));\n\nexport const Stories: FC<StoriesProps> = ({ title = 'Stories', includePrimary = true }) => {\n  const { componentStories, projectAnnotations, getStoryContext } = useContext(DocsContext);\n\n  let stories = componentStories();\n  const { stories: { filter } = { filter: undefined } } = projectAnnotations.parameters?.docs || {};\n  if (filter) {\n    stories = stories.filter((story) => filter(story, getStoryContext(story)));\n  }\n\n  if (!includePrimary) stories = stories.slice(1);\n\n  if (!stories || stories.length === 0) {\n    return null;\n  }\n  return (\n    <>\n      <StyledHeading>{title}</StyledHeading>\n      {stories.map(\n        (story) =>\n          story && <DocsStory key={story.id} of={story.moduleExport} expanded __forceInitialArgs />\n      )}\n    </>\n  );\n};\n"],"names":["Heading","children","disableAnchor","props","React","H2","tagID","HeaderMdx","StyledHeading","styled","theme","Stories","title","includePrimary","componentStories","projectAnnotations","getStoryContext","useContext","DocsContext","stories","filter","_a","story","DocsStory"],"mappings":"oQASA,MAAAA,EAAA,CAAA,CACA,SAAAC,EACA,cAAAC,EACA,GAAAC,CACA,IAAA,CACA,GAAAD,GAAA,OAAAD,GAAA,SACA,OAAAG,EAAA,cAAAC,OAAAJ,CAAA,EAEA,MAAAK,EAAAL,EAAA,YAAA,EAAA,QAAA,cAAA,GAAA,EAEA,OAAAG,EAAA,cAAAG,GAAA,GAAA,KAAA,GAAAD,EAAA,GAAAH,GACAF,CACA,CAEA,8ICXA,MAAAO,EAAAC,EAAAT,CAAA,EAAA,CAAA,CAAA,MAAAU,MAAA,CACA,SAAA,GAAAA,EAAA,WAAA,KAAA,GAAA,CAAA,KACA,WAAAA,EAAA,WAAA,OAAA,KACA,WAAA,OACA,cAAA,SACA,cAAA,YACA,MAAAA,EAAA,eACA,OAAA,EACA,aAAA,OAEA,kBAAA,CAEA,UAAA,MACA,CACA,EAAA,EAEAC,EAAA,CAAA,CAAA,MAAAC,EAAA,UAAA,eAAAC,EAAA,MAAA,OACA,KAAA,CAAA,iBAAAC,EAAA,mBAAAC,EAAA,gBAAAC,CAAA,EAAAC,EAAAA,WAAAC,CAAA,EAEA,IAAAC,EAAAL,IACA,KAAA,CAAA,QAAA,CAAA,OAAAM,CAAA,EAAA,CAAA,OAAA,MAAA,CAAA,IAAAC,EAAAN,EAAA,aAAA,YAAAM,EAAA,OAAA,CAAA,EAOA,OANAD,IACAD,EAAAA,EAAA,OAAAG,GAAAF,EAAAE,EAAAN,EAAAM,CAAA,CAAA,CAAA,GAGAT,IAAAM,EAAAA,EAAA,MAAA,CAAA,GAEA,CAAAA,GAAAA,EAAA,SAAA,EACA,KAIAf,EAAA,cAAAA,EAAA,SAAA,KAAAA,EAAA,cAAAI,EAAA,KAAAI,CAAA,EACAO,EAAA,IACAG,GACAA,GAAAlB,EAAA,cAAAmB,GAAA,IAAAD,EAAA,GAAA,GAAAA,EAAA,aAAA,SAAA,GAAA,mBAAA,GAAA,CAAA,CAEA,CAEA"}