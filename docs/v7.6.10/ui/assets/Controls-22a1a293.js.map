{"version":3,"file":"Controls-22a1a293.js","sources":["../../ui/blocks/src/blocks/useGlobals.ts","../../ui/blocks/src/blocks/useArgs.ts","../../ui/blocks/src/blocks/Controls.tsx"],"sourcesContent":["import type { Globals } from '@storybook/csf';\nimport type { DocsContextProps, PreparedStory } from '@storybook/types';\nimport { useEffect, useState } from 'react';\nimport { GLOBALS_UPDATED } from '@storybook/core-events';\n\nexport const useGlobals = (story: PreparedStory, context: DocsContextProps): [Globals] => {\n  const storyContext = context.getStoryContext(story);\n\n  const [globals, setGlobals] = useState(storyContext.globals);\n  useEffect(() => {\n    const onGlobalsUpdated = (changed: { globals: Globals }) => {\n      setGlobals(changed.globals);\n    };\n    context.channel.on(GLOBALS_UPDATED, onGlobalsUpdated);\n    return () => context.channel.off(GLOBALS_UPDATED, onGlobalsUpdated);\n  }, [context.channel]);\n\n  return [globals];\n};\n","import { useCallback, useEffect, useState } from 'react';\nimport type { Args, DocsContextProps, PreparedStory } from '@storybook/types';\nimport { STORY_ARGS_UPDATED, UPDATE_STORY_ARGS, RESET_STORY_ARGS } from '@storybook/core-events';\n\nexport const useArgs = (\n  story: PreparedStory,\n  context: DocsContextProps\n): [Args, (args: Args) => void, (argNames?: string[]) => void] => {\n  const result = useArgsIfDefined(story, context);\n  if (!result) throw new Error('No result when story was defined');\n  return result;\n};\n\nexport const useArgsIfDefined = (\n  story: PreparedStory | void,\n  context: DocsContextProps\n): [Args, (args: Args) => void, (argNames?: string[]) => void] | void => {\n  const storyContext = story ? context.getStoryContext(story) : { args: {} };\n  const { id: storyId } = story || { id: 'none' };\n\n  const [args, setArgs] = useState(storyContext.args);\n  useEffect(() => {\n    const onArgsUpdated = (changed: { storyId: string; args: Args }) => {\n      if (changed.storyId === storyId) {\n        setArgs(changed.args);\n      }\n    };\n    context.channel.on(STORY_ARGS_UPDATED, onArgsUpdated);\n    return () => context.channel.off(STORY_ARGS_UPDATED, onArgsUpdated);\n  }, [storyId, context.channel]);\n  const updateArgs = useCallback(\n    (updatedArgs) => context.channel.emit(UPDATE_STORY_ARGS, { storyId, updatedArgs }),\n    [storyId, context.channel]\n  );\n  const resetArgs = useCallback(\n    (argNames?: string[]) => context.channel.emit(RESET_STORY_ARGS, { storyId, argNames }),\n    [storyId, context.channel]\n  );\n  return story && [args, updateArgs, resetArgs];\n};\n","/* eslint-disable react/destructuring-assignment */\nimport type { Renderer } from '@storybook/csf';\nimport type { ModuleExports } from '@storybook/types';\nimport type { FC } from 'react';\nimport React, { useContext } from 'react';\nimport { filterArgTypes } from '@storybook/preview-api';\nimport type { PropDescriptor } from '@storybook/preview-api';\n\nimport type { SortType } from '../components';\nimport { ArgsTable as PureArgsTable } from '../components';\nimport { DocsContext } from './DocsContext';\nimport { useGlobals } from './useGlobals';\nimport { useArgs } from './useArgs';\n\ntype ControlsParameters = {\n  include?: PropDescriptor;\n  exclude?: PropDescriptor;\n  sort?: SortType;\n};\n\ntype ControlsProps = ControlsParameters & {\n  of?: Renderer['component'] | ModuleExports;\n};\n\nexport const Controls: FC<ControlsProps> = (props) => {\n  const { of } = props;\n  if ('of' in props && of === undefined) {\n    throw new Error('Unexpected `of={undefined}`, did you mistype a CSF file reference?');\n  }\n\n  const context = useContext(DocsContext);\n  const { story } = context.resolveOf(of || 'story', ['story']);\n  const { parameters, argTypes } = story;\n  const controlsParameters = parameters.docs?.controls || ({} as ControlsParameters);\n\n  const include = props.include ?? controlsParameters.include;\n  const exclude = props.exclude ?? controlsParameters.exclude;\n  const sort = props.sort ?? controlsParameters.sort;\n\n  const [args, updateArgs, resetArgs] = useArgs(story, context);\n  const [globals] = useGlobals(story, context);\n\n  const filteredArgTypes = filterArgTypes(argTypes, include, exclude);\n\n  return (\n    <PureArgsTable\n      rows={filteredArgTypes}\n      args={args}\n      globals={globals}\n      updateArgs={updateArgs}\n      resetArgs={resetArgs}\n      sort={sort}\n    />\n  );\n};\n"],"names":["GLOBALS_UPDATED","useGlobals","story","context","storyContext","globals","setGlobals","useState","useEffect","onGlobalsUpdated","changed","STORY_ARGS_UPDATED","UPDATE_STORY_ARGS","RESET_STORY_ARGS","useArgs","result","useArgsIfDefined","storyId","args","setArgs","onArgsUpdated","updateArgs","useCallback","updatedArgs","resetArgs","argNames","filterArgTypes","Controls","props","of","useContext","DocsContext","parameters","argTypes","controlsParameters","_a","include","exclude","sort","filteredArgTypes","jsx","PureArgsTable"],"mappings":"gLAGA,KAAA,CAAA,gBAAAA,CAAA,EAAA,iCAEaC,EAAa,CAACC,EAAsBC,IAAyC,CAClF,MAAAC,EAAeD,EAAQ,gBAAgBD,CAAK,EAE5C,CAACG,EAASC,CAAU,EAAIC,EAAAA,SAASH,EAAa,OAAO,EAC3DI,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAoBC,GAAkC,CAC1DJ,EAAWI,EAAQ,OAAO,CAAA,EAEpB,OAAAP,EAAA,QAAQ,GAAGH,EAAiBS,CAAgB,EAC7C,IAAMN,EAAQ,QAAQ,IAAIH,EAAiBS,CAAgB,CAAA,EACjE,CAACN,EAAQ,OAAO,CAAC,EAEb,CAACE,CAAO,CACjB,EChBA,CAAA,mBAAAM,EAAA,kBAAAC,EAAA,iBAAAC,CAAA,EAAA,iCAEaC,EAAU,CACrBZ,EACAC,IACgE,CAC1D,MAAAY,EAASC,EAAiBd,EAAOC,CAAO,EAC9C,GAAI,CAACY,EAAc,MAAA,IAAI,MAAM,kCAAkC,EACxD,OAAAA,CACT,EAEaC,EAAmB,CAC9Bd,EACAC,IACuE,CACjE,MAAAC,EAAeF,EAAQC,EAAQ,gBAAgBD,CAAK,EAAI,CAAE,KAAM,CAAA,GAChE,CAAE,GAAIe,GAAYf,GAAS,CAAE,GAAI,QAEjC,CAACgB,EAAMC,CAAO,EAAIZ,EAAAA,SAASH,EAAa,IAAI,EAClDI,EAAAA,UAAU,IAAM,CACR,MAAAY,EAAiBV,GAA6C,CAC9DA,EAAQ,UAAYO,GACtBE,EAAQT,EAAQ,IAAI,CACtB,EAEM,OAAAP,EAAA,QAAQ,GAAGQ,EAAoBS,CAAa,EAC7C,IAAMjB,EAAQ,QAAQ,IAAIQ,EAAoBS,CAAa,CACjE,EAAA,CAACH,EAASd,EAAQ,OAAO,CAAC,EAC7B,MAAMkB,EAAaC,EAAA,YAChBC,GAAgBpB,EAAQ,QAAQ,KAAKS,EAAmB,CAAE,QAAAK,EAAS,YAAAM,EAAa,EACjF,CAACN,EAASd,EAAQ,OAAO,CAAA,EAErBqB,EAAYF,EAAA,YACfG,GAAwBtB,EAAQ,QAAQ,KAAKU,EAAkB,CAAE,QAAAI,EAAS,SAAAQ,EAAU,EACrF,CAACR,EAASd,EAAQ,OAAO,CAAA,EAE3B,OAAOD,GAAS,CAACgB,EAAMG,EAAYG,CAAS,CAC9C,EClCA,CAAA,eAAAE,CAAA,EAAA,iCAmBOC,EAAAC,GAAA,OACL,KAAA,CAAA,GAAAC,CAAA,EAAAD,EACA,GAAA,OAAAA,GAAAC,IAAA,OACE,MAAA,IAAA,MAAA,oEAAA,EAGF,MAAA1B,EAAA2B,aAAAC,CAAA,EACA,CAAA,MAAA7B,CAAA,EAAAC,EAAA,UAAA0B,GAAA,QAAA,CAAA,OAAA,CAAA,EACA,CAAA,WAAAG,EAAA,SAAAC,CAAA,EAAA/B,EACAgC,IAAAC,EAAAH,EAAA,OAAA,YAAAG,EAAA,WAAA,CAAA,EAEAC,EAAAR,EAAA,SAAAM,EAAA,QACAG,EAAAT,EAAA,SAAAM,EAAA,QACAI,EAAAV,EAAA,MAAAM,EAAA,KAEA,CAAAhB,EAAAG,EAAAG,CAAA,EAAAV,EAAAZ,EAAAC,CAAA,EACA,CAAAE,CAAA,EAAAJ,EAAAC,EAAAC,CAAA,EAEAoC,EAAAb,EAAAO,EAAAG,EAAAC,CAAA,EAEA,OAAAG,EACEC,EAAC,CAAA,KAAAF,EACO,KAAArB,EACN,QAAAb,EACA,WAAAgB,EACA,UAAAG,EACA,KAAAc,CACA,CAAA,CAGN"}