{"version":3,"file":"Menu-57ad6df2.js","sources":["../../ui/manager/src/container/Menu.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Badge } from '@storybook/components';\nimport type { API, State } from '@storybook/manager-api';\nimport { shortcutToHumanString } from '@storybook/manager-api';\nimport { styled, useTheme } from '@storybook/theming';\nimport { CheckIcon, InfoIcon, ShareAltIcon, WandIcon } from '@storybook/icons';\n\nconst focusableUIElements = {\n  storySearchField: 'storybook-explorer-searchfield',\n  storyListMenu: 'storybook-explorer-menu',\n  storyPanelRoot: 'storybook-panel-root',\n};\n\nconst Key = styled.span(({ theme }) => ({\n  display: 'inline-block',\n  height: 16,\n  lineHeight: '16px',\n  textAlign: 'center',\n  fontSize: '11px',\n  background: theme.base === 'light' ? 'rgba(0,0,0,0.05)' : 'rgba(255,255,255,0.05)',\n  color: theme.base === 'light' ? theme.color.dark : theme.textMutedColor,\n  borderRadius: 2,\n  userSelect: 'none',\n  pointerEvents: 'none',\n  padding: '0 6px',\n}));\n\nconst KeyChild = styled.code(\n  ({ theme }) => `\n  padding: 0;\n  vertical-align: middle;\n\n  & + & {\n    margin-left: 6px;\n  }\n`\n);\n\nexport const Shortcut: FC<{ keys: string[] }> = ({ keys }) => (\n  <>\n    <Key>\n      {keys.map((key, index) => (\n        <KeyChild key={key}>{shortcutToHumanString([key])}</KeyChild>\n      ))}\n    </Key>\n  </>\n);\n\nexport const useMenu = (\n  state: State,\n  api: API,\n  showToolbar: boolean,\n  isFullscreen: boolean,\n  isPanelShown: boolean,\n  isNavShown: boolean,\n  enableShortcuts: boolean\n) => {\n  const theme = useTheme();\n  const shortcutKeys = api.getShortcutKeys();\n\n  const about = useMemo(\n    () => ({\n      id: 'about',\n      title: 'About your Storybook',\n      onClick: () => api.changeSettingsTab('about'),\n      icon: <InfoIcon />,\n    }),\n    [api]\n  );\n\n  const documentation = useMemo(() => {\n    const docsUrl = api.getDocsUrl({ versioned: true, renderer: true });\n\n    return {\n      id: 'documentation',\n      title: 'Documentation',\n      href: docsUrl,\n      icon: <ShareAltIcon />,\n    };\n  }, [api]);\n\n  const whatsNewNotificationsEnabled =\n    state.whatsNewData?.status === 'SUCCESS' && !state.disableWhatsNewNotifications;\n  const isWhatsNewUnread = api.isWhatsNewUnread();\n  const whatsNew = useMemo(\n    () => ({\n      id: 'whats-new',\n      title: \"What's new?\",\n      onClick: () => api.changeSettingsTab('whats-new'),\n      right: whatsNewNotificationsEnabled && isWhatsNewUnread && (\n        <Badge status=\"positive\">Check it out</Badge>\n      ),\n      icon: <WandIcon />,\n    }),\n    [api, whatsNewNotificationsEnabled, isWhatsNewUnread]\n  );\n\n  const shortcuts = useMemo(\n    () => ({\n      id: 'shortcuts',\n      title: 'Keyboard shortcuts',\n      onClick: () => api.changeSettingsTab('shortcuts'),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.shortcutsPage} /> : null,\n      style: {\n        borderBottom: `4px solid ${theme.appBorderColor}`,\n      },\n    }),\n    [api, enableShortcuts, shortcutKeys.shortcutsPage, theme.appBorderColor]\n  );\n\n  const sidebarToggle = useMemo(\n    () => ({\n      id: 'S',\n      title: 'Show sidebar',\n      onClick: () => api.toggleNav(),\n      active: isNavShown,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.toggleNav} /> : null,\n      icon: isNavShown ? <CheckIcon /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, isNavShown]\n  );\n\n  const toolbarToogle = useMemo(\n    () => ({\n      id: 'T',\n      title: 'Show toolbar',\n      onClick: () => api.toggleToolbar(),\n      active: showToolbar,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.toolbar} /> : null,\n      icon: showToolbar ? <CheckIcon /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, showToolbar]\n  );\n\n  const addonsToggle = useMemo(\n    () => ({\n      id: 'A',\n      title: 'Show addons',\n      onClick: () => api.togglePanel(),\n      active: isPanelShown,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.togglePanel} /> : null,\n      icon: isPanelShown ? <CheckIcon /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, isPanelShown]\n  );\n\n  const addonsOrientationToggle = useMemo(\n    () => ({\n      id: 'D',\n      title: 'Change addons orientation',\n      onClick: () => api.togglePanelPosition(),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.panelPosition} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const fullscreenToggle = useMemo(\n    () => ({\n      id: 'F',\n      title: 'Go full screen',\n      onClick: () => api.toggleFullscreen(),\n      active: isFullscreen,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.fullScreen} /> : null,\n      icon: isFullscreen ? <CheckIcon /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, isFullscreen]\n  );\n\n  const searchToggle = useMemo(\n    () => ({\n      id: '/',\n      title: 'Search',\n      onClick: () => api.focusOnUIElement(focusableUIElements.storySearchField),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.search} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const up = useMemo(\n    () => ({\n      id: 'up',\n      title: 'Previous component',\n      onClick: () => api.jumpToComponent(-1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.prevComponent} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const down = useMemo(\n    () => ({\n      id: 'down',\n      title: 'Next component',\n      onClick: () => api.jumpToComponent(1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.nextComponent} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const prev = useMemo(\n    () => ({\n      id: 'prev',\n      title: 'Previous story',\n      onClick: () => api.jumpToStory(-1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.prevStory} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const next = useMemo(\n    () => ({\n      id: 'next',\n      title: 'Next story',\n      onClick: () => api.jumpToStory(1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.nextStory} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const collapse = useMemo(\n    () => ({\n      id: 'collapse',\n      title: 'Collapse all',\n      onClick: () => api.collapseAll(),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.collapseAll} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const getAddonsShortcuts = useCallback(() => {\n    const addonsShortcuts = api.getAddonsShortcuts();\n    const keys = shortcutKeys as any;\n    return Object.entries(addonsShortcuts)\n      .filter(([_, { showInMenu }]) => showInMenu)\n      .map(([actionName, { label, action }]) => ({\n        id: actionName,\n        title: label,\n        onClick: () => action(),\n        right: enableShortcuts ? <Shortcut keys={keys[actionName]} /> : null,\n      }));\n  }, [api, enableShortcuts, shortcutKeys]);\n\n  return useMemo(\n    () => [\n      about,\n      ...(state.whatsNewData?.status === 'SUCCESS' ? [whatsNew] : []),\n      documentation,\n      shortcuts,\n      sidebarToggle,\n      toolbarToogle,\n      addonsToggle,\n      addonsOrientationToggle,\n      fullscreenToggle,\n      searchToggle,\n      up,\n      down,\n      prev,\n      next,\n      collapse,\n      ...getAddonsShortcuts(),\n    ],\n    [\n      about,\n      state,\n      whatsNew,\n      documentation,\n      shortcuts,\n      sidebarToggle,\n      toolbarToogle,\n      addonsToggle,\n      addonsOrientationToggle,\n      fullscreenToggle,\n      searchToggle,\n      up,\n      down,\n      prev,\n      next,\n      collapse,\n      getAddonsShortcuts,\n    ]\n  );\n};\n"],"names":["focusableUIElements","Key","styled","theme","KeyChild","Shortcut","keys","React","key","index","shortcutToHumanString","useMenu","state","api","showToolbar","isFullscreen","isPanelShown","isNavShown","enableShortcuts","useTheme","shortcutKeys","about","useMemo","InfoIcon","documentation","ShareAltIcon","whatsNewNotificationsEnabled","_a","isWhatsNewUnread","whatsNew","Badge","WandIcon","shortcuts","sidebarToggle","CheckIcon","toolbarToogle","addonsToggle","addonsOrientationToggle","fullscreenToggle","searchToggle","up","down","prev","next","collapse","getAddonsShortcuts","useCallback","addonsShortcuts","_","showInMenu","actionName","label","action"],"mappings":"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"}