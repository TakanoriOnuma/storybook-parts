{
  "version": 3,
  "sources": ["../../../addons/outline/dist/chunk-HZFM3BEO.mjs", "global-externals:react", "global-externals:@storybook/manager-api", "global-externals:@storybook/components", "../../../addons/outline/dist/manager.mjs"],
  "sourcesContent": ["// src/constants.ts\nvar ADDON_ID = \"storybook/outline\";\nvar PARAM_KEY = \"outline\";\n\nexport { ADDON_ID, PARAM_KEY };\n", "export default __REACT__;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } = __REACT__;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version };", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "export default __STORYBOOKCOMPONENTS__;\nconst { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset } = __STORYBOOKCOMPONENTS__;\nexport { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset };", "import { PARAM_KEY, ADDON_ID } from './chunk-HZFM3BEO.mjs';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { useGlobals, useStorybookApi, addons, types } from '@storybook/manager-api';\nimport { IconButton, Icons } from '@storybook/components';\n\nvar OutlineSelector = memo(function OutlineSelector2() {\n  const [globals, updateGlobals] = useGlobals();\n  const api = useStorybookApi();\n  const isActive = [true, \"true\"].includes(globals[PARAM_KEY]);\n  const toggleOutline = useCallback(\n    () => updateGlobals({\n      [PARAM_KEY]: !isActive\n    }),\n    [isActive]\n  );\n  useEffect(() => {\n    api.setAddonShortcut(ADDON_ID, {\n      label: \"Toggle Outline [O]\",\n      defaultShortcut: [\"O\"],\n      actionName: \"outline\",\n      showInMenu: false,\n      action: toggleOutline\n    });\n  }, [toggleOutline, api]);\n  return /* @__PURE__ */ React.createElement(\n    IconButton,\n    {\n      key: \"outline\",\n      active: isActive,\n      title: \"Apply outlines to the preview\",\n      onClick: toggleOutline\n    },\n    /* @__PURE__ */ React.createElement(Icons, { icon: \"outline\" })\n  );\n});\n\n// src/manager.tsx\naddons.register(ADDON_ID, () => {\n  addons.add(ADDON_ID, {\n    title: \"Outline\",\n    id: \"outline\",\n    type: types.TOOL,\n    match: ({ viewMode }) => !!(viewMode && viewMode.match(/^(story|docs)$/)),\n    render: () => /* @__PURE__ */ React.createElement(OutlineSelector, null)\n  });\n});\n"],
  "mappings": "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",
  "names": ["ADDON_ID", "PARAM_KEY", "react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "useCallback", "useContext", "useDebugValue", "useEffect", "useImperativeHandle", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "version", "manager_api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "components_default", "A", "ActionBar", "AddonPanel", "Badge", "Bar", "Blockquote", "Button", "Code", "DL", "Div", "DocumentWrapper", "ErrorFormatter", "FlexBar", "Form", "H1", "H2", "H3", "H4", "H5", "H6", "HR", "IconButton", "IconButtonSkeleton", "Icons", "Img", "LI", "Link", "ListItem", "Loader", "OL", "P", "Placeholder", "Pre", "ResetWrapper", "ScrollArea", "Separator", "Spaced", "Span", "StorybookIcon", "StorybookLogo", "Symbols", "SyntaxHighlighter", "TT", "TabBar", "TabButton", "TabWrapper", "Table", "Tabs", "TabsState", "TooltipLinkList", "TooltipMessage", "TooltipNote", "UL", "WithTooltip", "WithTooltipPure", "Zoom", "codeCommon", "components", "createCopyToClipboardFunction", "getStoryHref", "icons", "interleaveSeparators", "nameSpaceClassNames", "resetComponents", "withReset", "OutlineSelector", "memo", "globals", "updateGlobals", "useGlobals", "api", "useStorybookApi", "isActive", "PARAM_KEY", "toggleOutline", "useCallback", "useEffect", "ADDON_ID", "react_default", "IconButton", "Icons", "addons", "types", "viewMode"]
}
