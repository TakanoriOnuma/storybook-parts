{"version":3,"file":"Boolean-a63c3b4a.js","sources":["../../ui/blocks/src/controls/Boolean.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport React, { useCallback } from 'react';\n\nimport { opacify, transparentize } from 'polished';\nimport { styled } from '@storybook/theming';\n\nimport { Button } from '@storybook/components';\nimport { getControlId, getControlSetterButtonId } from './helpers';\n\nimport type { ControlProps, BooleanValue, BooleanConfig } from './types';\n\nconst Label = styled.label(({ theme }) => ({\n  lineHeight: '18px',\n  alignItems: 'center',\n  marginBottom: 8,\n  display: 'inline-block',\n  position: 'relative',\n  whiteSpace: 'nowrap',\n  background: theme.boolean.background,\n  borderRadius: '3em',\n  padding: 1,\n\n  input: {\n    appearance: 'none',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    margin: 0,\n    padding: 0,\n    border: 'none',\n    background: 'transparent',\n    cursor: 'pointer',\n    borderRadius: '3em',\n\n    '&:focus': {\n      outline: 'none',\n      boxShadow: `${theme.color.secondary} 0 0 0 1px inset !important`,\n    },\n  },\n\n  span: {\n    textAlign: 'center',\n    fontSize: theme.typography.size.s1,\n    fontWeight: theme.typography.weight.bold,\n    lineHeight: '1',\n    cursor: 'pointer',\n    display: 'inline-block',\n    padding: '7px 15px',\n    transition: 'all 100ms ease-out',\n    userSelect: 'none',\n    borderRadius: '3em',\n\n    color: transparentize(0.5, theme.color.defaultText),\n    background: 'transparent',\n\n    '&:hover': {\n      boxShadow: `${opacify(0.3, theme.appBorderColor)} 0 0 0 1px inset`,\n    },\n\n    '&:active': {\n      boxShadow: `${opacify(0.05, theme.appBorderColor)} 0 0 0 2px inset`,\n      color: opacify(1, theme.appBorderColor),\n    },\n\n    '&:first-of-type': {\n      paddingRight: 8,\n    },\n    '&:last-of-type': {\n      paddingLeft: 8,\n    },\n  },\n\n  'input:checked ~ span:last-of-type, input:not(:checked) ~ span:first-of-type': {\n    background: theme.boolean.selectedBackground,\n    boxShadow:\n      theme.base === 'light'\n        ? `${opacify(0.1, theme.appBorderColor)} 0 0 2px`\n        : `${theme.appBorderColor} 0 0 0 1px`,\n    color: theme.color.defaultText,\n    padding: '7px 15px',\n  },\n}));\n\nconst parse = (value: string | null): boolean => value === 'true';\n\nexport type BooleanProps = ControlProps<BooleanValue> & BooleanConfig;\n/**\n * # Boolean Control\n * Renders a switch toggle with \"True\" or \"False\".\n * or if the value is `undefined`, renders a button to set the boolean.\n *\n * ## Example usage\n *\n * ```\n *\n * <BooleanControl name=\"isTrue\" value={value} onChange={handleValueChange}/>\n * ```\n */\nexport const BooleanControl: FC<BooleanProps> = ({ name, value, onChange, onBlur, onFocus }) => {\n  const onSetFalse = useCallback(() => onChange(false), [onChange]);\n  if (value === undefined) {\n    return (\n      <Button\n        variant=\"outline\"\n        size=\"medium\"\n        id={getControlSetterButtonId(name)}\n        onClick={onSetFalse}\n      >\n        Set boolean\n      </Button>\n    );\n  }\n  const controlId = getControlId(name);\n\n  const parsedValue = typeof value === 'string' ? parse(value) : value;\n\n  return (\n    <Label htmlFor={controlId} aria-label={name}>\n      <input\n        id={controlId}\n        type=\"checkbox\"\n        onChange={(e) => onChange(e.target.checked)}\n        checked={parsedValue}\n        role=\"switch\"\n        {...{ name, onBlur, onFocus }}\n      />\n      <span aria-hidden=\"true\">False</span>\n      <span aria-hidden=\"true\">True</span>\n    </Label>\n  );\n};\n"],"names":["Label","styled","theme","transparentize","opacify","parse","value","BooleanControl","name","onChange","onBlur","onFocus","onSetFalse","useCallback","React","Button","getControlSetterButtonId","controlId","getControlId","parsedValue","e"],"mappings":"iOAWA,MAAAA,EAAAC,EAAA,MAAA,CAAA,CAAA,MAAAC,MAAA,CACA,WAAA,OACA,WAAA,SACA,aAAA,EACA,QAAA,eACA,SAAA,WACA,WAAA,SACA,WAAAA,EAAA,QAAA,WACA,aAAA,MACA,QAAA,EAEA,MAAA,CACA,WAAA,OACA,MAAA,OACA,OAAA,OACA,SAAA,WACA,KAAA,EACA,IAAA,EACA,OAAA,EACA,QAAA,EACA,OAAA,OACA,WAAA,cACA,OAAA,UACA,aAAA,MAEA,UAAA,CACA,QAAA,OACA,UAAA,GAAAA,EAAA,MAAA,SAAA,6BACA,CACA,EAEA,KAAA,CACA,UAAA,SACA,SAAAA,EAAA,WAAA,KAAA,GACA,WAAAA,EAAA,WAAA,OAAA,KACA,WAAA,IACA,OAAA,UACA,QAAA,eACA,QAAA,WACA,WAAA,qBACA,WAAA,OACA,aAAA,MAEA,MAAAC,EAAA,GAAAD,EAAA,MAAA,WAAA,EACA,WAAA,cAEA,UAAA,CACA,UAAA,GAAAE,EAAA,GAAAF,EAAA,cAAA,CAAA,kBACA,EAEA,WAAA,CACA,UAAA,GAAAE,EAAA,IAAAF,EAAA,cAAA,CAAA,mBACA,MAAAE,EAAA,EAAAF,EAAA,cAAA,CACA,EAEA,kBAAA,CACA,aAAA,CACA,EACA,iBAAA,CACA,YAAA,CACA,CACA,EAEA,8EAAA,CACA,WAAAA,EAAA,QAAA,mBACA,UACAA,EAAA,OAAA,QACA,GAAAE,EAAA,GAAAF,EAAA,cAAA,CAAA,WACA,GAAAA,EAAA,cAAA,aACA,MAAAA,EAAA,MAAA,YACA,QAAA,UACA,CACA,EAAA,EAEAG,EAAAC,GAAAA,IAAA,OAeAC,EAAA,CAAA,CAAA,KAAAC,EAAA,MAAAF,EAAA,SAAAG,EAAA,OAAAC,EAAA,QAAAC,KAAA,CACA,MAAAC,EAAAC,EAAAA,YAAA,IAAAJ,EAAA,EAAA,EAAA,CAAAA,CAAA,CAAA,EACA,GAAAH,IAAA,OAEA,OAAAQ,EAAA,cAAAC,EAAA,CACA,QAAA,UACA,KAAA,SACA,GAAAC,EAAAR,CAAA,EACA,QAAAI,CAAA,EACA,aAAA,EAKA,MAAAK,EAAAC,EAAAV,CAAA,EAEAW,EAAA,OAAAb,GAAA,SAAAD,EAAAC,CAAA,EAAAA,EAEA,OACAQ,EAAA,cAAAd,EAAA,CAAA,QAAAiB,EAAA,aAAAT,GACAM,EAAA,cAAA,QAAA,CACA,GAAAG,EACA,KAAA,WACA,SAAAG,GAAAX,EAAAW,EAAA,OAAA,OAAA,EACA,QAAAD,EACA,KAAA,SACA,KAAAX,EAAA,OAAAE,EAAA,QAAAC,CAAA,CAAA,EAEAG,EAAA,cAAA,OAAA,CAAA,cAAA,MAAA,EAAA,OAAA,EACAA,EAAA,cAAA,OAAA,CAAA,cAAA,MAAA,EAAA,MAAA,CACA,CAEA;;;;;;;;;"}