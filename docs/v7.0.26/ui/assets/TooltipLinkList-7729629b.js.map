{"version":3,"file":"TooltipLinkList-7729629b.js","sources":["../../ui/components/src/tooltip/TooltipLinkList.tsx"],"sourcesContent":["import type { FC, SyntheticEvent } from 'react';\nimport React, { useCallback } from 'react';\nimport { styled } from '@storybook/theming';\n\nimport type { LinkWrapperType, ListItemProps } from './ListItem';\nimport ListItem from './ListItem';\n\nconst List = styled.div(\n  {\n    minWidth: 180,\n    overflow: 'hidden',\n    overflowY: 'auto',\n    maxHeight: 15.5 * 32, // 11.5 items\n  },\n  ({ theme }) => ({\n    borderRadius: theme.appBorderRadius,\n  })\n);\n\nexport interface Link extends Omit<ListItemProps, 'onClick'> {\n  id: string;\n  isGatsby?: boolean;\n  onClick?: (event: SyntheticEvent, item: ListItemProps) => void;\n}\n\nexport interface TooltipLinkListProps {\n  links: Link[];\n  LinkWrapper?: LinkWrapperType;\n}\n\nconst Item: FC<Link & { isIndented?: boolean }> = (props) => {\n  const { LinkWrapper, onClick: onClickFromProps, id, isIndented, ...rest } = props;\n  const { title, href, active } = rest;\n  const onClick = useCallback(\n    (event: SyntheticEvent) => {\n      onClickFromProps(event, rest);\n    },\n    [onClickFromProps]\n  );\n\n  const hasOnClick = !!onClickFromProps;\n\n  return (\n    <ListItem\n      title={title}\n      active={active}\n      href={href}\n      id={`list-item-${id}`}\n      LinkWrapper={LinkWrapper}\n      isIndented={isIndented}\n      {...rest}\n      {...(hasOnClick ? { onClick } : {})}\n    />\n  );\n};\n\nexport const TooltipLinkList: FC<TooltipLinkListProps> = ({ links, LinkWrapper }) => {\n  const hasOneLeftElement = links.some((link) => link.left || link.icon);\n  return (\n    <List>\n      {links.map(({ isGatsby, ...p }) => (\n        <Item\n          key={p.id}\n          LinkWrapper={isGatsby ? LinkWrapper : null}\n          isIndented={hasOneLeftElement}\n          {...p}\n        />\n      ))}\n    </List>\n  );\n};\n\nTooltipLinkList.defaultProps = {\n  LinkWrapper: ListItem.defaultProps.LinkWrapper,\n};\n"],"names":["List","styled","theme","Item","props","LinkWrapper","onClickFromProps","id","isIndented","rest","title","href","active","onClick","useCallback","event","hasOnClick","jsx","ListItem","TooltipLinkList","links","hasOneLeftElement","link","isGatsby","p"],"mappings":"yKAOA,MAAAA,EAAAC,EAAA,IAAoB,CAClB,SAAA,IACY,SAAA,SACA,UAAA,OACC,UAAA,KAAA,EACO,EACpB,CAAA,CAAA,MAAAC,CAAA,KAAA,CACgB,aAAAA,EAAA,eACM,EAExB,EAaAC,EAAAC,GAAA,CACE,KAAA,CAAA,YAAAC,EAAA,QAAAC,EAAA,GAAAC,EAAA,WAAAC,EAAA,GAAAC,CAAA,EAAAL,EACA,CAAA,MAAAM,EAAA,KAAAC,EAAA,OAAAC,CAAA,EAAAH,EACAI,EAAAC,EAAA,YAAgBC,GAAA,CAEZT,EAAAS,EAAAN,CAAA,CAA4B,EAC9B,CAAAH,CAAA,CACiB,EAGnBU,EAAA,CAAA,CAAAV,EAEA,OAAAW,EACEC,EAAC,CAAA,MAAAR,EACC,OAAAE,EACA,KAAAD,EACA,GAAA,aAAAJ,IACiB,YAAAF,EACjB,WAAAG,EACA,GAAAC,EACI,GAAAO,EAAA,CAAA,QAAAH,CAAA,EAAA,CAAA,CAC6B,CAAA,CAGvC,EAEOM,EAAA,CAAA,CAAA,MAAAC,EAAA,YAAAf,KAAA,CACL,MAAAgB,EAAAD,EAAA,KAAAE,GAAAA,EAAA,MAAAA,EAAA,IAAA,EACA,OAAAL,EAAAjB,EAAA,CAAA,SAAAoB,EAAA,IAAA,CAAA,CAAA,SAAAG,EAAA,GAAAC,CAAA,IAAAP,EAGMd,EAAC,CAAA,YAAAoB,EAAAlB,EAAA,KAEuC,WAAAgB,EAC1B,GAAAG,CACR,EAAAA,EAAA,EAHG,CAAA,CAAA,CAAA,CAQjB,EAEAL,EAAA,aAAA,CAA+B,YAAAD,EAAA,aAAA,WAE/B"}