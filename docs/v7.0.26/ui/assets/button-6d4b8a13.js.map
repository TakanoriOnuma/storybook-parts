{"version":3,"file":"button-6d4b8a13.js","sources":["../../ui/components/src/bar/button.tsx"],"sourcesContent":["import type { AnchorHTMLAttributes, ButtonHTMLAttributes, DetailedHTMLProps } from 'react';\nimport React from 'react';\nimport { styled, isPropValid } from '@storybook/theming';\nimport { transparentize } from 'polished';\nimport { auto } from '@popperjs/core';\n\ninterface BarButtonProps\n  extends DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  href?: void;\n  target?: void;\n}\ninterface BarLinkProps\n  extends DetailedHTMLProps<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement> {\n  disabled?: void;\n  href: string;\n}\n\nconst ButtonOrLink = React.forwardRef<\n  HTMLAnchorElement | HTMLButtonElement,\n  BarLinkProps | BarButtonProps\n>(({ children, ...restProps }, ref) => {\n  return restProps.href != null ? (\n    <a ref={ref as React.ForwardedRef<HTMLAnchorElement>} {...(restProps as BarLinkProps)}>\n      {children}\n    </a>\n  ) : (\n    <button\n      ref={ref as React.ForwardedRef<HTMLButtonElement>}\n      type=\"button\"\n      {...(restProps as BarButtonProps)}\n    >\n      {children}\n    </button>\n  );\n});\n\nButtonOrLink.displayName = 'ButtonOrLink';\n\nexport interface TabButtonProps {\n  active?: boolean;\n  textColor?: string;\n}\n\nexport const TabButton = styled(ButtonOrLink, { shouldForwardProp: isPropValid })<TabButtonProps>(\n  {\n    whiteSpace: 'normal',\n    display: 'inline-flex',\n    overflow: 'hidden',\n    verticalAlign: 'top',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    textDecoration: 'none',\n\n    '&:empty': {\n      display: 'none',\n    },\n  },\n  ({ theme }) => ({\n    padding: '0 15px',\n    transition: 'color 0.2s linear, border-bottom-color 0.2s linear',\n    height: 40,\n    lineHeight: '12px',\n    cursor: 'pointer',\n    background: 'transparent',\n    border: '0 solid transparent',\n    borderTop: '3px solid transparent',\n    borderBottom: '3px solid transparent',\n    fontWeight: 'bold',\n    fontSize: 13,\n\n    '&:focus': {\n      outline: '0 none',\n      borderBottomColor: theme.color.secondary,\n    },\n  }),\n  ({ active, textColor, theme }) =>\n    active\n      ? {\n          color: textColor || theme.barSelectedColor,\n          borderBottomColor: theme.barSelectedColor,\n        }\n      : {\n          color: textColor || theme.barTextColor,\n          borderBottomColor: 'transparent',\n        }\n);\nTabButton.displayName = 'TabButton';\n\nexport interface IconButtonProps {\n  active?: boolean;\n  disabled?: boolean;\n}\n\nexport const IconButton = styled(ButtonOrLink, { shouldForwardProp: isPropValid })<IconButtonProps>(\n  () => ({\n    alignItems: 'center',\n    background: 'transparent',\n    border: 'none',\n    borderRadius: 4,\n    color: 'inherit',\n    cursor: 'pointer',\n    display: 'inline-flex',\n    fontSize: 13,\n    fontWeight: 'bold',\n    height: 28,\n    justifyContent: 'center',\n    marginTop: 6,\n    padding: '8px 7px',\n\n    '& > svg': {\n      width: 14,\n    },\n  }),\n  ({ active, theme }) =>\n    active\n      ? {\n          backgroundColor: theme.background.hoverable,\n          color: theme.color.secondary,\n        }\n      : {},\n  ({ disabled, theme }) =>\n    disabled\n      ? {\n          opacity: 0.5,\n          cursor: 'not-allowed',\n        }\n      : {\n          '&:hover, &:focus-visible': {\n            background: transparentize(0.88, theme.color.secondary),\n            color: theme.color.secondary,\n          },\n          '&:focus-visible': {\n            outline: auto, // Ensures links have the same focus style\n          },\n          '&:focus:not(:focus-visible)': {\n            outline: 'none',\n          },\n        }\n);\nIconButton.displayName = 'IconButton';\n\nconst IconPlaceholder = styled.div(({ theme }) => ({\n  width: 14,\n  height: 14,\n  backgroundColor: theme.appBorderColor,\n  animation: `${theme.animation.glow} 1.5s ease-in-out infinite`,\n}));\n\nconst IconButtonSkeletonWrapper = styled.div(() => ({\n  marginTop: 6,\n  padding: 7,\n  height: 28,\n}));\n\nexport const IconButtonSkeleton = () => (\n  <IconButtonSkeletonWrapper>\n    <IconPlaceholder />\n  </IconButtonSkeletonWrapper>\n);\n"],"names":["ButtonOrLink","React","children","restProps","ref","jsx","TabButton","styled","isPropValid","theme","active","textColor","IconButton","disabled","transparentize","auto","IconPlaceholder","IconButtonSkeletonWrapper","IconButtonSkeleton"],"mappings":"4NAiBA,MAAAA,EAAAC,EAAA,WAAA,CAAA,CAAA,SAAAC,EAAA,GAAAC,CAAA,EAAAC,IAIED,EAAA,MAAA,KAAAE,EAAA,IAAA,CAAA,IAAAD,EAAA,GAAAD,EAAA,SAAAD,CAAA,CAAA,EAAAG,EAKE,SAAC,CAAA,IAAAD,EACC,KAAA,SACK,GAAAD,EACA,SAAAD,CAEJ,CAAA,CAGP,EAEAF,EAAA,YAAA,eAOO,MAAAM,EAAAC,EAAAP,EAAA,CAAA,kBAAAQ,CAAA,CAAA,EAAyE,CAC9E,WAAA,SACc,QAAA,cACH,SAAA,SACC,cAAA,MACK,eAAA,SACC,WAAA,SACJ,UAAA,SACD,eAAA,OACK,UAAA,CAEL,QAAA,MACA,CACX,EACF,CAAA,CAAA,MAAAC,CAAA,KAAA,CACgB,QAAA,SACL,WAAA,qDACG,OAAA,GACJ,WAAA,OACI,OAAA,UACJ,WAAA,cACI,OAAA,sBACJ,UAAA,wBACG,aAAA,wBACG,WAAA,OACF,SAAA,GACF,UAAA,CAEC,QAAA,SACA,kBAAAA,EAAA,MAAA,SACsB,CACjC,GACF,CAAA,CAAA,OAAAC,EAAA,UAAAC,EAAA,MAAAF,CAAA,IAAAC,EAAA,CAGM,MAAAC,GAAAF,EAAA,iBAC4B,kBAAAA,EAAA,gBACD,EAAA,CAE3B,MAAAE,GAAAF,EAAA,aAC4B,kBAAA,aACP,CAE7B,EACAH,EAAA,YAAA,YAOO,MAAAM,EAAAL,EAAAP,EAAA,CAAA,kBAAAQ,CAAA,CAAA,EAA0E,KAAA,CACxE,WAAA,SACO,WAAA,cACA,OAAA,OACJ,aAAA,EACM,MAAA,UACP,OAAA,UACC,QAAA,cACC,SAAA,GACC,WAAA,OACE,OAAA,GACJ,eAAA,SACQ,UAAA,EACL,QAAA,UACF,UAAA,CAEE,MAAA,EACF,CACT,GACF,CAAA,CAAA,OAAAE,EAAA,MAAAD,CAAA,IAAAC,EAAA,CAGM,gBAAAD,EAAA,WAAA,UACoC,MAAAA,EAAA,MAAA,SACf,EAAA,CAAA,EAEpB,CAAA,CAAA,SAAAI,EAAA,MAAAJ,CAAA,IAAAI,EAAA,CAGD,QAAA,GACW,OAAA,aACD,EAAA,CAEV,2BAAA,CAC8B,WAAAC,EAAA,IAAAL,EAAA,MAAA,SAAA,EAC4B,MAAAA,EAAA,MAAA,SACnC,EACrB,kBAAA,CACmB,QAAAM,CACR,EACX,8BAAA,CAC+B,QAAA,MACpB,CACX,CAEV,EACAH,EAAA,YAAA,aAEA,MAAAI,EAAAT,EAAA,IAAA,CAAA,CAAA,MAAAE,CAAA,KAAA,CAAmD,MAAA,GAC1C,OAAA,GACC,gBAAAA,EAAA,eACe,UAAA,GAAAA,EAAA,UAAA,gCAEzB,EAAA,EAEAQ,EAAAV,EAAA,IAAA,KAAA,CAAoD,UAAA,EACvC,QAAA,EACF,OAAA,EAEX,EAAA,EAEOW,EAAA,IAAAb,EAAAY,EAAA,CAAA,SAAAZ,EAAAW,EAAA,CAAA,CAAA,EAAA"}