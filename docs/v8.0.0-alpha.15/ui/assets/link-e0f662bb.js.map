{"version":3,"file":"link-e0f662bb.js","sources":["../../ui/components/src/components/typography/link/link.tsx"],"sourcesContent":["import type { AnchorHTMLAttributes, MouseEvent } from 'react';\nimport React from 'react';\nimport { styled } from '@storybook/theming';\nimport { darken } from 'polished';\nimport { ChevronRightIcon } from '@storybook/icons';\n\n// Cmd/Ctrl/Shift/Alt + Click should trigger default browser behavior. Same applies to non-left clicks\nconst LEFT_BUTTON = 0;\n\nconst isPlainLeftClick = (e: MouseEvent) =>\n  e.button === LEFT_BUTTON && !e.altKey && !e.ctrlKey && !e.metaKey && !e.shiftKey;\n\nconst cancelled = (e: MouseEvent, cb: (_e: MouseEvent) => void) => {\n  if (isPlainLeftClick(e)) {\n    e.preventDefault();\n    cb(e);\n  }\n};\n\nexport interface LinkStylesProps {\n  secondary?: boolean;\n  tertiary?: boolean;\n  nochrome?: boolean;\n  inverse?: boolean;\n  isButton?: boolean;\n}\n\nexport interface LinkInnerProps {\n  withArrow?: boolean;\n  containsIcon?: boolean;\n}\n\nconst LinkInner = styled.span<LinkInnerProps>(\n  ({ withArrow }) =>\n    withArrow\n      ? {\n          '> svg:last-of-type': {\n            height: '0.7em',\n            width: '0.7em',\n            marginRight: 0,\n            marginLeft: '0.25em',\n            bottom: 'auto',\n            verticalAlign: 'inherit',\n          },\n        }\n      : {},\n  ({ containsIcon }) =>\n    containsIcon\n      ? {\n          svg: {\n            height: '1em',\n            width: '1em',\n            verticalAlign: 'middle',\n            position: 'relative',\n            bottom: 0,\n            marginRight: 0,\n          },\n        }\n      : {}\n);\n\ntype AProps = AnchorHTMLAttributes<HTMLAnchorElement>;\n\nconst A = styled.a<LinkStylesProps>(\n  ({ theme }) => ({\n    display: 'inline-block',\n    transition: 'all 150ms ease-out',\n    textDecoration: 'none',\n\n    color: theme.color.secondary,\n\n    '&:hover, &:focus': {\n      cursor: 'pointer',\n      color: darken(0.07, theme.color.secondary),\n      'svg path:not([fill])': {\n        fill: darken(0.07, theme.color.secondary),\n      },\n    },\n    '&:active': {\n      color: darken(0.1, theme.color.secondary),\n      'svg path:not([fill])': {\n        fill: darken(0.1, theme.color.secondary),\n      },\n    },\n\n    svg: {\n      display: 'inline-block',\n      height: '1em',\n      width: '1em',\n      verticalAlign: 'text-top',\n      position: 'relative',\n      bottom: '-0.125em',\n      marginRight: '0.4em',\n\n      '& path': {\n        fill: theme.color.secondary,\n      },\n    },\n  }),\n  ({ theme, secondary, tertiary }) => {\n    let colors;\n    if (secondary) {\n      colors = [theme.textMutedColor, theme.color.dark, theme.color.darker];\n    }\n    if (tertiary) {\n      colors = [theme.color.dark, theme.color.darkest, theme.textMutedColor];\n    }\n\n    return colors\n      ? {\n          color: colors[0],\n          'svg path:not([fill])': {\n            fill: colors[0],\n          },\n\n          '&:hover': {\n            color: colors[1],\n            'svg path:not([fill])': {\n              fill: colors[1],\n            },\n          },\n\n          '&:active': {\n            color: colors[2],\n            'svg path:not([fill])': {\n              fill: colors[2],\n            },\n          },\n        }\n      : {};\n  },\n  ({ nochrome }) =>\n    nochrome\n      ? {\n          color: 'inherit',\n\n          '&:hover, &:active': {\n            color: 'inherit',\n            textDecoration: 'underline',\n          },\n        }\n      : {},\n  ({ theme, inverse }) =>\n    inverse\n      ? {\n          color: theme.color.lightest,\n          ':not([fill])': {\n            fill: theme.color.lightest,\n          },\n\n          '&:hover': {\n            color: theme.color.lighter,\n            'svg path:not([fill])': {\n              fill: theme.color.lighter,\n            },\n          },\n\n          '&:active': {\n            color: theme.color.light,\n            'svg path:not([fill])': {\n              fill: theme.color.light,\n            },\n          },\n        }\n      : {},\n  ({ isButton }) =>\n    isButton\n      ? {\n          border: 0,\n          borderRadius: 0,\n          background: 'none',\n          padding: 0,\n          fontSize: 'inherit',\n        }\n      : {}\n);\n\nexport interface LinkProps extends LinkInnerProps, LinkStylesProps, AProps {\n  cancel?: boolean;\n  className?: string;\n  style?: object;\n  onClick?: (e: MouseEvent) => void;\n  href?: string;\n}\n\nexport const Link = ({\n  cancel = true,\n  children,\n  onClick = undefined,\n  withArrow = false,\n  containsIcon = false,\n  className = undefined,\n  style = undefined,\n  ...rest\n}: LinkProps) => (\n  <A\n    {...rest}\n    onClick={onClick && cancel ? (e) => cancelled(e, onClick) : onClick}\n    className={className}\n  >\n    <LinkInner withArrow={withArrow} containsIcon={containsIcon}>\n      {children}\n      {withArrow && <ChevronRightIcon />}\n    </LinkInner>\n  </A>\n);\n"],"names":["LEFT_BUTTON","isPlainLeftClick","cancelled","cb","LinkInner","styled","withArrow","containsIcon","A","theme","darken","secondary","tertiary","colors","nochrome","inverse","isButton","Link","cancel","children","onClick","className","style","rest","React","e","ChevronRightIcon"],"mappings":"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"}