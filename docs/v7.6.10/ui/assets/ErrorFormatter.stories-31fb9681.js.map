{"version":3,"file":"ErrorFormatter.stories-31fb9681.js","sources":["../../ui/components/src/components/ErrorFormatter/ErrorFormatter.tsx"],"sourcesContent":["import { global } from '@storybook/global';\nimport type { FC } from 'react';\nimport React, { Fragment } from 'react';\nimport { styled } from '@storybook/theming';\n\nconst { document } = global;\n\nconst ErrorName = styled.strong(({ theme }) => ({\n  color: theme.color.orange,\n}));\nconst ErrorImportant = styled.strong(({ theme }) => ({\n  color: theme.color.ancillary,\n  textDecoration: 'underline',\n}));\nconst ErrorDetail = styled.em(({ theme }) => ({\n  color: theme.textMutedColor,\n}));\n\nconst firstLineRegex = /(Error): (.*)\\n/;\nconst linesRegexChromium = /at (?:(.*) )?\\(?(.+)\\)?/;\nconst linesRegexFirefox = /([^@]+)?(?:\\/<)?@(.+)?/;\nconst linesRegexSafari = /([^@]+)?@(.+)?/;\nexport const ErrorFormatter: FC<{ error: Error }> = ({ error }) => {\n  if (!error) {\n    return <Fragment>This error has no stack or message</Fragment>;\n  }\n  if (!error.stack) {\n    return <Fragment>{error.message || 'This error has no stack or message'}</Fragment>;\n  }\n\n  let input = error.stack.toString();\n\n  if (input && error.message && !input.includes(error.message)) {\n    input = `Error: ${error.message}\\n\\n${input}`;\n  }\n\n  const match = input.match(firstLineRegex);\n\n  if (!match) {\n    return <Fragment>{input}</Fragment>;\n  }\n\n  const [, type, name] = match;\n\n  const rawLines = input.split(/\\n/).slice(1);\n  const [, ...lines] = rawLines\n    .map((line) => {\n      const result =\n        line.match(linesRegexChromium) ||\n        line.match(linesRegexFirefox) ||\n        line.match(linesRegexSafari);\n      if (result) {\n        return {\n          name: (result[1] || '').replace('/<', ''),\n          location: result[2].replace(document.location.origin, ''),\n        };\n      }\n\n      return null;\n    })\n    .filter(Boolean);\n\n  return (\n    <Fragment>\n      <span>{type}</span>: <ErrorName>{name}</ErrorName>\n      <br />\n      {lines.map((l, i) =>\n        l.name ? (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            {'  '}at <ErrorImportant>{l.name}</ErrorImportant> (\n            <ErrorDetail>{l.location}</ErrorDetail>)\n            <br />\n          </Fragment>\n        ) : (\n          // eslint-disable-next-line react/no-array-index-key\n          <Fragment key={i}>\n            {'  '}at <ErrorDetail>{l.location}</ErrorDetail>\n            <br />\n          </Fragment>\n        )\n      )}\n    </Fragment>\n  );\n};\n"],"names":["global","document","ErrorName","styled","theme","ErrorImportant","ErrorDetail","firstLineRegex","linesRegexChromium","linesRegexFirefox","linesRegexSafari","ErrorFormatter","error","jsx","Fragment","input","match","type","name","rawLines","lines","line","result","jsxs","l","i"],"mappings":"oNAAA,KAAA,CAAA,OAAAA,CAAA,EAAA,4BAKA,CAAA,SAAAC,CAAA,EAAAD,EAEAE,EAAAC,EAAA,OAAA,CAAA,CAAA,MAAAC,CAAA,KAAA,CAAgD,MAAAA,EAAA,MAAA,MAEhD,EAAA,EACAC,EAAAF,EAAA,OAAA,CAAA,CAAA,MAAAC,CAAA,KAAA,CAAqD,MAAAA,EAAA,MAAA,UAChC,eAAA,WAErB,EAAA,EACAE,EAAAH,EAAA,GAAA,CAAA,CAAA,MAAAC,CAAA,KAAA,CAA8C,MAAAA,EAAA,cAE9C,EAAA,EAEAG,EAAA,kBACAC,EAAA,0BACAC,EAAA,yBACAC,EAAA,iBACOC,EAAA,CAAA,CAAA,MAAAC,KAAA,CACL,GAAA,CAAAA,EACE,OAAAC,EAAAC,EAAA,SAAA,CAAA,SAAA,oCAAA,CAAA,EAEF,GAAA,CAAAF,EAAA,MACE,OAAAC,EAAAC,EAAAA,SAAA,CAAA,SAAAF,EAAA,SAAA,oCAAA,CAAA,EAGF,IAAAG,EAAAH,EAAA,MAAA,SAAA,EAEAG,GAAAH,EAAA,SAAA,CAAAG,EAAA,SAAAH,EAAA,OAAA,IACEG,EAAA,UAAAH,EAAA,OAAA;AAAA;AAAA,EAA+BG,CAAA,IAGjC,MAAAC,EAAAD,EAAA,MAAAR,CAAA,EAEA,GAAA,CAAAS,EACE,OAAAH,EAAAC,EAAA,SAAA,CAAA,SAAAC,CAAA,CAAA,EAGF,KAAA,EAAAE,EAAAC,CAAA,EAAAF,EAEAG,EAAAJ,EAAA,MAAA,IAAA,EAAA,MAAA,CAAA,EACA,CAAA,CAAA,GAAAK,CAAA,EAAAD,EAAA,IAAAE,GAAA,CAEI,MAAAC,EAAAD,EAAA,MAAAb,CAAA,GAAAa,EAAA,MAAAZ,CAAA,GAAAY,EAAA,MAAAX,CAAA,EAIA,OAAAY,EACE,CAAO,MAAAA,EAAA,CAAA,GAAA,IAAA,QAAA,KAAA,EAAA,EACmC,SAAAA,EAAA,CAAA,EAAA,QAAArB,EAAA,SAAA,OAAA,EAAA,CACgB,EAI5D,IAAO,CAAA,EAAA,OAAA,OAAA,EAIX,OAAAsB,EAAAT,WAAA,CAAA,SAAA,CAEID,EAAA,OAAA,CAAA,SAAAI,CAAA,CAAA,EAAY,KAAOJ,EAAAX,EAAA,CAAA,SAAAgB,CAAA,CAAA,EAAmBL,EAAA,KAAA,EAAA,EAClCO,EAAA,IACG,CAAAI,EAAAC,IAAAD,EAAA,KACHD,EAAAT,EAAAA,SAAA,CAAA,SAAA,CAGG,KAAA,MAAKD,EAAAR,EAAA,CAAA,SAAAmB,EAAA,IAAA,CAAA,EAA2B,KAAiBX,EAAAP,EAAA,CAAA,SAAAkB,EAAA,QAAA,CAAA,EACzB,IAAcX,EAAA,KAAA,EAAA,CACnC,CAAA,EAAAY,CAAA,EACNF,EAAAT,EAAAA,SAAA,CAAA,SAAA,CAIG,KAAA,MAAKD,EAAAP,EAAA,CAAA,SAAAkB,EAAA,QAAA,CAAA,EAA4BX,EAAA,KAAA,EAAA,CAC9B,CAAA,EAAAY,CAAA,CACN,CAEJ,CAAA,CAAA,CAGN;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}