{"version":3,"file":"useOf-b3266417.js","sources":["../../ui/blocks/src/blocks/useOf.ts"],"sourcesContent":["import type {\n  DocsContextProps,\n  ResolvedModuleExportType,\n  ResolvedModuleExportFromType,\n} from '@storybook/types';\nimport { useContext } from 'react';\nimport { DocsContext } from './DocsContext';\n\nexport type Of = Parameters<DocsContextProps['resolveOf']>[0];\n\n/**\n * A hook to resolve the `of` prop passed to a block.\n * will return the resolved module\n * if the resolved module is a meta it will include a preparedMeta property similar to a preparedStory\n * if the resolved module is a component it will include the project annotations\n */\nexport const useOf = <TType extends ResolvedModuleExportType>(\n  moduleExportOrType: Of,\n  validTypes?: TType[]\n): ResolvedModuleExportFromType<TType> => {\n  const context = useContext(DocsContext);\n  return context.resolveOf(moduleExportOrType, validTypes);\n};\n"],"names":["useOf","moduleExportOrType","validTypes","useContext","DocsContext"],"mappings":"sFAgBa,MAAAA,EAAQ,CACnBC,EACAC,IAEgBC,aAAWC,CAAW,EACvB,UAAUH,EAAoBC,CAAU"}