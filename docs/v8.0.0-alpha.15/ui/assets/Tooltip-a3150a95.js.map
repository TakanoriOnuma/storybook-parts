{"version":3,"file":"Tooltip-a3150a95.js","sources":["../../ui/components/src/components/tooltip/Tooltip.tsx"],"sourcesContent":["import React from 'react';\nimport memoize from 'memoizerific';\n\nimport { styled, type Color, lighten } from '@storybook/theming';\n\nconst match = memoize(1000)((requests, actual, value, fallback = 0) =>\n  actual.split('-')[0] === requests ? value : fallback\n);\n\nconst ArrowSpacing = 8;\n\nexport interface ArrowProps {\n  color: keyof Color;\n  placement: string;\n}\n\nconst Arrow = styled.div<ArrowProps>(\n  {\n    position: 'absolute',\n    borderStyle: 'solid',\n  },\n  ({ placement }) => {\n    let x = 0;\n    let y = 0;\n\n    switch (true) {\n      case placement.startsWith('left') || placement.startsWith('right'): {\n        y = 8;\n        break;\n      }\n      case placement.startsWith('top') || placement.startsWith('bottom'): {\n        x = 8;\n        break;\n      }\n      default: {\n        //\n      }\n    }\n\n    const transform = `translate3d(${x}px, ${y}px, 0px)`;\n    return { transform };\n  },\n  ({ theme, color, placement }) => ({\n    bottom: `${match('top', placement, `${ArrowSpacing * -1}px`, 'auto')}`,\n    top: `${match('bottom', placement, `${ArrowSpacing * -1}px`, 'auto')}`,\n    right: `${match('left', placement, `${ArrowSpacing * -1}px`, 'auto')}`,\n    left: `${match('right', placement, `${ArrowSpacing * -1}px`, 'auto')}`,\n\n    borderBottomWidth: `${match('top', placement, '0', ArrowSpacing)}px`,\n    borderTopWidth: `${match('bottom', placement, '0', ArrowSpacing)}px`,\n    borderRightWidth: `${match('left', placement, '0', ArrowSpacing)}px`,\n    borderLeftWidth: `${match('right', placement, '0', ArrowSpacing)}px`,\n\n    borderTopColor: match(\n      'top',\n      placement,\n      theme.color[color] || color || theme.base === 'light'\n        ? lighten(theme.background.app)\n        : theme.background.app,\n      'transparent'\n    ),\n    borderBottomColor: match(\n      'bottom',\n      placement,\n      theme.color[color] || color || theme.base === 'light'\n        ? lighten(theme.background.app)\n        : theme.background.app,\n      'transparent'\n    ),\n    borderLeftColor: match(\n      'left',\n      placement,\n      theme.color[color] || color || theme.base === 'light'\n        ? lighten(theme.background.app)\n        : theme.background.app,\n      'transparent'\n    ),\n    borderRightColor: match(\n      'right',\n      placement,\n      theme.color[color] || color || theme.base === 'light'\n        ? lighten(theme.background.app)\n        : theme.background.app,\n      'transparent'\n    ),\n  })\n);\n\nexport interface WrapperProps {\n  color: keyof Color;\n  hidden?: boolean;\n  hasChrome: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>(\n  ({ hidden }) => ({\n    display: hidden ? 'none' : 'inline-block',\n    zIndex: 2147483647,\n  }),\n  ({ theme, color, hasChrome }) =>\n    hasChrome\n      ? {\n          background:\n            theme.color[color] || color || theme.base === 'light'\n              ? lighten(theme.background.app)\n              : theme.background.app,\n          filter: `\n            drop-shadow(0px 5px 5px rgba(0,0,0,0.05))\n            drop-shadow(0 1px 3px rgba(0,0,0,0.1))\n          `,\n          borderRadius: theme.appBorderRadius,\n          fontSize: theme.typography.size.s1,\n        }\n      : {}\n);\n\nexport interface TooltipProps {\n  children?: React.ReactNode;\n  tooltipRef?: any;\n  hasChrome?: boolean;\n  arrowProps?: any;\n  placement?: string;\n  color?: keyof Color;\n  withArrows?: boolean;\n}\n\nexport const Tooltip = React.forwardRef<HTMLDivElement, TooltipProps>(\n  (\n    { placement, hasChrome, children, arrowProps, tooltipRef, color, withArrows, ...props },\n    ref\n  ) => {\n    return (\n      <Wrapper data-testid=\"tooltip\" hasChrome={hasChrome} ref={ref} {...props} color={color}>\n        {hasChrome && withArrows && <Arrow placement={placement} {...arrowProps} color={color} />}\n        {children}\n      </Wrapper>\n    );\n  }\n);\n\nTooltip.displayName = 'Tooltip';\nTooltip.defaultProps = {\n  color: undefined,\n  tooltipRef: undefined,\n  hasChrome: true,\n  placement: 'top',\n  arrowProps: {},\n};\n"],"names":["match","memoize","requests","actual","value","fallback","ArrowSpacing","Arrow","styled","placement","x","y","theme","color","lighten","Wrapper","hidden","hasChrome","Tooltip","React","children","arrowProps","tooltipRef","withArrows","props","ref"],"mappings":"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"}