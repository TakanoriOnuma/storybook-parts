{"version":3,"file":"menu-2019c8e3.js","sources":["../../ui/manager/src/containers/menu.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport React, { useCallback, useMemo } from 'react';\n\nimport { Badge, Icons } from '@storybook/components';\nimport type { API } from '@storybook/manager-api';\nimport { styled, useTheme } from '@storybook/theming';\n\nimport { shortcutToHumanString } from '@storybook/manager-api';\n\nconst focusableUIElements = {\n  storySearchField: 'storybook-explorer-searchfield',\n  storyListMenu: 'storybook-explorer-menu',\n  storyPanelRoot: 'storybook-panel-root',\n};\n\nconst Key = styled.span(({ theme }) => ({\n  display: 'inline-block',\n  height: 16,\n  lineHeight: '16px',\n  textAlign: 'center',\n  fontSize: '11px',\n  background: theme.base === 'light' ? 'rgba(0,0,0,0.05)' : 'rgba(255,255,255,0.05)',\n  color: theme.base === 'light' ? theme.color.dark : theme.textMutedColor,\n  borderRadius: 2,\n  userSelect: 'none',\n  pointerEvents: 'none',\n  padding: '0 6px',\n}));\n\nconst KeyChild = styled.code(\n  ({ theme }) => `\n  padding: 0;\n  vertical-align: middle;\n\n  & + & {\n    margin-left: 6px;\n  }\n`\n);\n\nexport const Shortcut: FC<{ keys: string[] }> = ({ keys }) => (\n  <>\n    <Key>\n      {keys.map((key, index) => (\n        <KeyChild key={key}>{shortcutToHumanString([key])}</KeyChild>\n      ))}\n    </Key>\n  </>\n);\n\nexport const useMenu = (\n  api: API,\n  showToolbar: boolean,\n  isFullscreen: boolean,\n  showPanel: boolean,\n  showNav: boolean,\n  enableShortcuts: boolean\n) => {\n  const theme = useTheme();\n  const shortcutKeys = api.getShortcutKeys();\n\n  const about = useMemo(\n    () => ({\n      id: 'about',\n      title: 'About your Storybook',\n      onClick: () => api.navigateToSettingsPage('/settings/about'),\n      right: api.versionUpdateAvailable() && <Badge status=\"positive\">Update</Badge>,\n    }),\n    [api]\n  );\n\n  const releaseNotes = useMemo(\n    () => ({\n      id: 'release-notes',\n      title: 'Release notes',\n      onClick: () => api.navigateToSettingsPage('/settings/release-notes'),\n    }),\n    [api]\n  );\n\n  const shortcuts = useMemo(\n    () => ({\n      id: 'shortcuts',\n      title: 'Keyboard shortcuts',\n      onClick: () => api.navigateToSettingsPage('/settings/shortcuts'),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.shortcutsPage} /> : null,\n      style: {\n        borderBottom: `4px solid ${theme.appBorderColor}`,\n      },\n    }),\n    [api, enableShortcuts, shortcutKeys.shortcutsPage, theme.appBorderColor]\n  );\n\n  const sidebarToggle = useMemo(\n    () => ({\n      id: 'S',\n      title: 'Show sidebar',\n      onClick: () => api.toggleNav(),\n      active: showNav,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.toggleNav} /> : null,\n      left: showNav ? <Icons icon=\"check\" /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, showNav]\n  );\n\n  const toolbarToogle = useMemo(\n    () => ({\n      id: 'T',\n      title: 'Show toolbar',\n      onClick: () => api.toggleToolbar(),\n      active: showToolbar,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.toolbar} /> : null,\n      left: showToolbar ? <Icons icon=\"check\" /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, showToolbar]\n  );\n\n  const addonsToggle = useMemo(\n    () => ({\n      id: 'A',\n      title: 'Show addons',\n      onClick: () => api.togglePanel(),\n      active: showPanel,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.togglePanel} /> : null,\n      left: showPanel ? <Icons icon=\"check\" /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, showPanel]\n  );\n\n  const addonsOrientationToggle = useMemo(\n    () => ({\n      id: 'D',\n      title: 'Change addons orientation',\n      onClick: () => api.togglePanelPosition(),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.panelPosition} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const fullscreenToggle = useMemo(\n    () => ({\n      id: 'F',\n      title: 'Go full screen',\n      onClick: () => api.toggleFullscreen(),\n      active: isFullscreen,\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.fullScreen} /> : null,\n      left: isFullscreen ? <Icons icon=\"check\" /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys, isFullscreen]\n  );\n\n  const searchToggle = useMemo(\n    () => ({\n      id: '/',\n      title: 'Search',\n      onClick: () => api.focusOnUIElement(focusableUIElements.storySearchField),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.search} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const up = useMemo(\n    () => ({\n      id: 'up',\n      title: 'Previous component',\n      onClick: () => api.jumpToComponent(-1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.prevComponent} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const down = useMemo(\n    () => ({\n      id: 'down',\n      title: 'Next component',\n      onClick: () => api.jumpToComponent(1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.nextComponent} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const prev = useMemo(\n    () => ({\n      id: 'prev',\n      title: 'Previous story',\n      onClick: () => api.jumpToStory(-1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.prevStory} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const next = useMemo(\n    () => ({\n      id: 'next',\n      title: 'Next story',\n      onClick: () => api.jumpToStory(1),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.nextStory} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const collapse = useMemo(\n    () => ({\n      id: 'collapse',\n      title: 'Collapse all',\n      onClick: () => api.collapseAll(),\n      right: enableShortcuts ? <Shortcut keys={shortcutKeys.collapseAll} /> : null,\n    }),\n    [api, enableShortcuts, shortcutKeys]\n  );\n\n  const getAddonsShortcuts = useCallback(() => {\n    const addonsShortcuts = api.getAddonsShortcuts();\n    const keys = shortcutKeys as any;\n    return Object.entries(addonsShortcuts)\n      .filter(([_, { showInMenu }]) => showInMenu)\n      .map(([actionName, { label, action }]) => ({\n        id: actionName,\n        title: label,\n        onClick: () => action(),\n        right: enableShortcuts ? <Shortcut keys={keys[actionName]} /> : null,\n      }));\n  }, [api, enableShortcuts, shortcutKeys]);\n\n  return useMemo(\n    () => [\n      about,\n      ...(api.releaseNotesVersion() ? [releaseNotes] : []),\n      shortcuts,\n      sidebarToggle,\n      toolbarToogle,\n      addonsToggle,\n      addonsOrientationToggle,\n      fullscreenToggle,\n      searchToggle,\n      up,\n      down,\n      prev,\n      next,\n      collapse,\n      ...getAddonsShortcuts(),\n    ],\n    [\n      about,\n      api,\n      releaseNotes,\n      shortcuts,\n      sidebarToggle,\n      toolbarToogle,\n      addonsToggle,\n      addonsOrientationToggle,\n      fullscreenToggle,\n      searchToggle,\n      up,\n      down,\n      prev,\n      next,\n      collapse,\n      getAddonsShortcuts,\n    ]\n  );\n};\n"],"names":["focusableUIElements","Key","styled","theme","KeyChild","Shortcut","keys","jsx","Fragment","key","index","shortcutToHumanString","useMenu","api","showToolbar","isFullscreen","showPanel","showNav","enableShortcuts","useTheme","shortcutKeys","about","useMemo","Badge","releaseNotes","shortcuts","sidebarToggle","Icons","toolbarToogle","addonsToggle","addonsOrientationToggle","fullscreenToggle","searchToggle","up","down","prev","next","collapse","getAddonsShortcuts","useCallback","addonsShortcuts","_","showInMenu","actionName","label","action"],"mappings":"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"}