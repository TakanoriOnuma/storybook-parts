{"version":3,"file":"ErrorFormatter.stories-ee10de6f.js","sources":["../../ui/components/src/components/ErrorFormatter/ErrorFormatter.tsx"],"sourcesContent":["import { global } from '@storybook/global';\n\nimport React, { Fragment } from 'react';\nimport { styled } from '@storybook/theming';\n\nconst { document } = global;\n\nconst ErrorName = styled.strong(({ theme }) => ({\n  color: theme.color.orange,\n}));\nconst ErrorImportant = styled.strong(({ theme }) => ({\n  color: theme.color.ancillary,\n  textDecoration: 'underline',\n}));\nconst ErrorDetail = styled.em(({ theme }) => ({\n  color: theme.textMutedColor,\n}));\n\nconst firstLineRegex = /(Error): (.*)\\n/;\nconst linesRegexChromium = /at (?:(.*) )?\\(?(.+)\\)?/;\nconst linesRegexFirefox = /([^@]+)?(?:\\/<)?@(.+)?/;\nconst linesRegexSafari = /([^@]+)?@(.+)?/;\n\nexport interface ErrorFormatterProps {\n  error: Error;\n}\n\nexport const ErrorFormatter = ({ error }: ErrorFormatterProps) => {\n  if (!error) {\n    return <Fragment>This error has no stack or message</Fragment>;\n  }\n  if (!error.stack) {\n    return <Fragment>{error.message || 'This error has no stack or message'}</Fragment>;\n  }\n\n  let input = error.stack.toString();\n\n  if (input && error.message && !input.includes(error.message)) {\n    input = `Error: ${error.message}\\n\\n${input}`;\n  }\n\n  const match = input.match(firstLineRegex);\n\n  if (!match) {\n    return <Fragment>{input}</Fragment>;\n  }\n\n  const [, type, name] = match;\n\n  const rawLines = input.split(/\\n/).slice(1);\n  const [, ...lines] = rawLines\n    .map((line) => {\n      const result =\n        line.match(linesRegexChromium) ||\n        line.match(linesRegexFirefox) ||\n        line.match(linesRegexSafari);\n      if (result) {\n        return {\n          name: (result[1] || '').replace('/<', ''),\n          location: result[2].replace(document.location.origin, ''),\n        };\n      }\n\n      return null;\n    })\n    .filter(Boolean);\n\n  return (\n    <Fragment>\n      <span>{type}</span>: <ErrorName>{name}</ErrorName>\n      <br />\n      {lines.map((l, i) =>\n        l.name ? (\n          <Fragment key={i}>\n            {'  '}at <ErrorImportant>{l.name}</ErrorImportant> (\n            <ErrorDetail>{l.location}</ErrorDetail>)\n            <br />\n          </Fragment>\n        ) : (\n          <Fragment key={i}>\n            {'  '}at <ErrorDetail>{l.location}</ErrorDetail>\n            <br />\n          </Fragment>\n        )\n      )}\n    </Fragment>\n  );\n};\n"],"names":["global","document","ErrorName","styled","theme","ErrorImportant","ErrorDetail","firstLineRegex","linesRegexChromium","linesRegexFirefox","linesRegexSafari","ErrorFormatter","error","React","Fragment","input","match","type","name","rawLines","lines","line","result","l","i"],"mappings":"+HAAA,KAAA,CAAA,OAAAA,CAAA,EAAA,4BAKA,CAAA,SAAAC,CAAA,EAAAD,EAEAE,EAAAC,EAAA,OAAA,CAAA,CAAA,MAAAC,MAAA,CACA,MAAAA,EAAA,MAAA,MACA,EAAA,EACAC,EAAAF,EAAA,OAAA,CAAA,CAAA,MAAAC,MAAA,CACA,MAAAA,EAAA,MAAA,UACA,eAAA,WACA,EAAA,EACAE,EAAAH,EAAA,GAAA,CAAA,CAAA,MAAAC,MAAA,CACA,MAAAA,EAAA,cACA,EAAA,EAEAG,EAAA,kBACAC,EAAA,0BACAC,EAAA,yBACAC,EAAA,iBAMAC,EAAA,CAAA,CAAA,MAAAC,KAAA,CACA,GAAA,CAAAA,EACA,OAAAC,EAAA,cAAAC,gBAAA,oCAAA,EAEA,GAAA,CAAAF,EAAA,MACA,OAAAC,EAAA,cAAAC,EAAA,SAAA,KAAAF,EAAA,SAAA,oCAAA,EAGA,IAAAG,EAAAH,EAAA,MAAA,SAAA,EAEAG,GAAAH,EAAA,SAAA,CAAAG,EAAA,SAAAH,EAAA,OAAA,IACAG,EAAA,UAAAH,EAAA,OAAA;AAAA;AAAA,EAAAG,CAAA,IAGA,MAAAC,EAAAD,EAAA,MAAAR,CAAA,EAEA,GAAA,CAAAS,EACA,OAAAH,EAAA,cAAAC,gBAAAC,CAAA,EAGA,KAAA,EAAAE,EAAAC,CAAA,EAAAF,EAEAG,EAAAJ,EAAA,MAAA,IAAA,EAAA,MAAA,CAAA,EACA,CAAA,CAAA,GAAAK,CAAA,EAAAD,EACA,IAAAE,GAAA,CACA,MAAAC,EACAD,EAAA,MAAAb,CAAA,GACAa,EAAA,MAAAZ,CAAA,GACAY,EAAA,MAAAX,CAAA,EACA,OAAAY,EACA,CACA,MAAAA,EAAA,CAAA,GAAA,IAAA,QAAA,KAAA,EAAA,EACA,SAAAA,EAAA,CAAA,EAAA,QAAArB,EAAA,SAAA,OAAA,EAAA,CAAA,EAIA,IAAA,CACA,EACA,OAAA,OAAA,EAEA,OACAY,EAAA,cAAAC,EAAA,SAAA,KACAD,EAAA,cAAA,OAAA,KAAAI,CAAA,EAAA,KAAAJ,EAAA,cAAAX,EAAA,KAAAgB,CAAA,EACAL,EAAA,cAAA,KAAA,IAAA,EACAO,EAAA,IAAA,CAAAG,EAAAC,IACAD,EAAA,KACAV,EAAA,cAAAC,EAAAA,UAAA,IAAAU,CAAA,EACA,KAAA,sBAAAnB,EAAA,KAAAkB,EAAA,IAAA,EAAA,qBACAjB,EAAA,KAAAiB,EAAA,QAAA,EAAA,IACAV,EAAA,cAAA,KAAA,IAAA,CACA,EAEAA,EAAA,cAAAC,EAAAA,UAAA,IAAAU,CAAA,EACA,KAAA,sBAAAlB,EAAA,KAAAiB,EAAA,QAAA,EACAV,EAAA,cAAA,SAAA,CACA,CAAA,CAGA,CAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}