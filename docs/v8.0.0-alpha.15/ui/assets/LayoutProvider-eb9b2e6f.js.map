{"version":3,"file":"LayoutProvider-eb9b2e6f.js","sources":["../../ui/manager/src/components/hooks/useMedia.tsx","../../ui/manager/src/components/layout/LayoutProvider.tsx"],"sourcesContent":["import { useEffect, useState } from 'react';\n\n// The hook is taken from this library:\n// https://usehooks-ts.com/react-hook/use-media-query\n// The good thing about it is that is uses window.matchMedia\n\nexport function useMediaQuery(query: string): boolean {\n  const getMatches = (queryMatch: string): boolean => {\n    // Prevents SSR issues\n    if (typeof window !== 'undefined') {\n      return window.matchMedia(queryMatch).matches;\n    }\n    return false;\n  };\n\n  const [matches, setMatches] = useState<boolean>(getMatches(query));\n\n  function handleChange() {\n    setMatches(getMatches(query));\n  }\n\n  useEffect(() => {\n    const matchMedia = window.matchMedia(query);\n\n    // Triggered at the first client-side load and if query changes\n    handleChange();\n\n    // Listen matchMedia\n    matchMedia.addEventListener('change', handleChange);\n\n    return () => {\n      matchMedia.removeEventListener('change', handleChange);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [query]);\n\n  return matches;\n}\n","import type { FC, PropsWithChildren } from 'react';\nimport React, { createContext, useContext, useState } from 'react';\nimport { useMediaQuery } from '../hooks/useMedia';\nimport { BREAKPOINT } from '../../constants';\n\ntype LayoutContextType = {\n  isMobileMenuOpen: boolean;\n  setMobileMenuOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  isMobileAboutOpen: boolean;\n  setMobileAboutOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  isMobilePanelOpen: boolean;\n  setMobilePanelOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  isDesktop: boolean;\n  isMobile: boolean;\n};\n\nconst LayoutContext = createContext<LayoutContextType>({\n  isMobileMenuOpen: false,\n  setMobileMenuOpen: () => {},\n  isMobileAboutOpen: false,\n  setMobileAboutOpen: () => {},\n  isMobilePanelOpen: false,\n  setMobilePanelOpen: () => {},\n  isDesktop: false,\n  isMobile: false,\n});\n\nexport const LayoutProvider: FC<PropsWithChildren> = ({ children }) => {\n  const [isMobileMenuOpen, setMobileMenuOpen] = useState(false);\n  const [isMobileAboutOpen, setMobileAboutOpen] = useState(false);\n  const [isMobilePanelOpen, setMobilePanelOpen] = useState(false);\n  const isDesktop = useMediaQuery(`(min-width: ${BREAKPOINT}px)`);\n  const isMobile = !isDesktop;\n\n  return (\n    <LayoutContext.Provider\n      value={{\n        isMobileMenuOpen,\n        setMobileMenuOpen,\n        isMobileAboutOpen,\n        setMobileAboutOpen,\n        isMobilePanelOpen,\n        setMobilePanelOpen,\n        isDesktop,\n        isMobile,\n      }}\n    >\n      {children}\n    </LayoutContext.Provider>\n  );\n};\n\nexport const useLayout = () => useContext(LayoutContext);\n"],"names":["useMediaQuery","query","getMatches","queryMatch","matches","setMatches","useState","handleChange","useEffect","matchMedia","LayoutContext","createContext","LayoutProvider","children","isMobileMenuOpen","setMobileMenuOpen","isMobileAboutOpen","setMobileAboutOpen","isMobilePanelOpen","setMobilePanelOpen","isDesktop","BREAKPOINT","isMobile","React","useLayout","useContext"],"mappings":"2FAMO,SAASA,EAAcC,EAAwB,CAC9C,MAAAC,EAAcC,GAEd,OAAO,OAAW,IACb,OAAO,WAAWA,CAAU,EAAE,QAEhC,GAGH,CAACC,EAASC,CAAU,EAAIC,EAAkB,SAAAJ,EAAWD,CAAK,CAAC,EAEjE,SAASM,GAAe,CACXF,EAAAH,EAAWD,CAAK,CAAC,CAC9B,CAEAO,OAAAA,EAAAA,UAAU,IAAM,CACR,MAAAC,EAAa,OAAO,WAAWR,CAAK,EAG7B,OAAAM,IAGFE,EAAA,iBAAiB,SAAUF,CAAY,EAE3C,IAAM,CACAE,EAAA,oBAAoB,SAAUF,CAAY,CAAA,CACvD,EAEC,CAACN,CAAK,CAAC,EAEHG,CACT,CCrBA,MAAAM,EAAAC,EAAAA,cAAA,CACA,iBAAA,GACA,kBAAA,IAAA,CAAA,EACA,kBAAA,GACA,mBAAA,IAAA,CAAA,EACA,kBAAA,GACA,mBAAA,IAAA,CAAA,EACA,UAAA,GACA,SAAA,EACA,CAAA,EAEAC,EAAA,CAAA,CAAA,SAAAC,KAAA,CACA,KAAA,CAAAC,EAAAC,CAAA,EAAAT,WAAA,EAAA,EACA,CAAAU,EAAAC,CAAA,EAAAX,WAAA,EAAA,EACA,CAAAY,EAAAC,CAAA,EAAAb,WAAA,EAAA,EACAc,EAAApB,EAAA,eAAAqB,CAAA,KAAA,EACAC,EAAA,CAAAF,EAGA,OAAAG,EAAA,cAAAb,EAAA,SAAA,CACA,MAAA,CACA,iBAAAI,EACA,kBAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,kBAAAC,EACA,mBAAAC,EACA,UAAAC,EACA,SAAAE,CACA,CAAA,EAEAT,CAAA,CAGA,EAEAW,EAAA,IAAAC,EAAA,WAAAf,CAAA"}