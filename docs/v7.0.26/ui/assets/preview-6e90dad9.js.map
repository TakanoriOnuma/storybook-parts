{"version":3,"file":"preview-6e90dad9.js","sources":["../../node_modules/@storybook/addon-interactions/dist/preview.mjs"],"sourcesContent":["import './chunk-XALKSG2U.mjs';\nimport { addons } from '@storybook/preview-api';\nimport { global } from '@storybook/global';\nimport { FORCE_REMOUNT, STORY_RENDER_PHASE_CHANGED } from '@storybook/core-events';\nimport { instrument } from '@storybook/instrumenter';\nimport { ModuleMocker } from 'jest-mock';\n\nvar JestMock = new ModuleMocker(global);\nvar fn = JestMock.fn.bind(JestMock);\nvar { action } = instrument({ action: fn }, { retain: true });\nvar channel = addons.getChannel();\nvar seen = /* @__PURE__ */ new Set();\nvar spies = [];\nchannel.on(FORCE_REMOUNT, () => spies.forEach((mock) => mock?.mockClear?.()));\nchannel.on(STORY_RENDER_PHASE_CHANGED, ({ newPhase }) => {\n  if (newPhase === \"loading\")\n    spies.forEach((mock) => mock?.mockClear?.());\n});\nvar addSpies = (id, val, key) => {\n  if (seen.has(val))\n    return val;\n  seen.add(val);\n  try {\n    if (Object.prototype.toString.call(val) === \"[object Object]\") {\n      for (const [k, v] of Object.entries(val))\n        val[k] = addSpies(id, v, k);\n      return val;\n    }\n    if (Array.isArray(val)) {\n      return val.map((item, index) => addSpies(id, item, `${key}[${index}]`));\n    }\n    if (typeof val === \"function\" && val.isAction) {\n      Object.defineProperty(val, \"name\", { value: key, writable: false });\n      Object.defineProperty(val, \"__storyId__\", { value: id, writable: false });\n      const spy = action(val);\n      spies.push(spy);\n      return spy;\n    }\n  } catch (e) {\n  }\n  return val;\n};\nvar addActionsFromArgTypes = ({ id, initialArgs }) => addSpies(id, initialArgs);\nvar argsEnhancers = [addActionsFromArgTypes];\nvar { step: runStep } = instrument(\n  {\n    step: (label, play, context) => play(context)\n  },\n  { intercept: true }\n);\nvar parameters = {\n  throwPlayFunctionExceptions: false\n};\n\nexport { argsEnhancers, parameters, runStep };\n"],"names":["addons","FORCE_REMOUNT","STORY_RENDER_PHASE_CHANGED","JestMock","ModuleMocker","global","fn","action","instrument","channel","seen","spies","mock","_a","newPhase","addSpies","id","val","key","k","v","item","index","spy","addActionsFromArgTypes","initialArgs","argsEnhancers","runStep","label","play","context","parameters"],"mappings":"+JACA,KAAA,CAAA,OAAAA,CAAA,EAAA,iCAEA,CAAA,cAAAC,EAAA,2BAAAC,CAAA,EAAA,iCAIA,IAAIC,EAAW,IAAIC,EAAaC,CAAM,EAClCC,EAAKH,EAAS,GAAG,KAAKA,CAAQ,EAC9B,CAAE,OAAAI,CAAM,EAAKC,EAAW,CAAE,OAAQF,CAAE,EAAI,CAAE,OAAQ,EAAI,CAAE,EACxDG,EAAUT,EAAO,aACjBU,EAAuB,IAAI,IAC3BC,EAAQ,CAAA,EACZF,EAAQ,GAAGR,EAAe,IAAMU,EAAM,QAASC,UAAS,OAAAC,EAAAD,GAAA,YAAAA,EAAM,YAAN,YAAAC,EAAA,KAAAD,GAAmB,CAAC,EAC5EH,EAAQ,GAAGP,EAA4B,CAAC,CAAE,SAAAY,CAAQ,IAAO,CACnDA,IAAa,WACfH,EAAM,QAASC,GAAS,OAAA,OAAAC,EAAAD,GAAA,YAAAA,EAAM,YAAN,YAAAC,EAAA,KAAAD,GAAmB,CAC/C,CAAC,EACD,IAAIG,EAAW,CAACC,EAAIC,EAAKC,IAAQ,CAC/B,GAAIR,EAAK,IAAIO,CAAG,EACd,OAAOA,EACTP,EAAK,IAAIO,CAAG,EACZ,GAAI,CACF,GAAI,OAAO,UAAU,SAAS,KAAKA,CAAG,IAAM,kBAAmB,CAC7D,SAAW,CAACE,EAAGC,CAAC,IAAK,OAAO,QAAQH,CAAG,EACrCA,EAAIE,CAAC,EAAIJ,EAASC,EAAII,EAAGD,CAAC,EAC5B,OAAOF,EAET,GAAI,MAAM,QAAQA,CAAG,EACnB,OAAOA,EAAI,IAAI,CAACI,EAAMC,IAAUP,EAASC,EAAIK,EAAM,GAAGH,KAAOI,IAAQ,CAAC,EAExE,GAAI,OAAOL,GAAQ,YAAcA,EAAI,SAAU,CAC7C,OAAO,eAAeA,EAAK,OAAQ,CAAE,MAAOC,EAAK,SAAU,EAAK,CAAE,EAClE,OAAO,eAAeD,EAAK,cAAe,CAAE,MAAOD,EAAI,SAAU,EAAK,CAAE,EACxE,MAAMO,EAAMhB,EAAOU,CAAG,EACtB,OAAAN,EAAM,KAAKY,CAAG,EACPA,EAEV,MAAC,CACD,CACD,OAAON,CACT,EACIO,EAAyB,CAAC,CAAE,GAAAR,EAAI,YAAAS,CAAa,IAAKV,EAASC,EAAIS,CAAW,EAC1EC,EAAgB,CAACF,CAAsB,EACvC,CAAE,KAAMG,CAAO,EAAKnB,EACtB,CACE,KAAM,CAACoB,EAAOC,EAAMC,IAAYD,EAAKC,CAAO,CAC7C,EACD,CAAE,UAAW,EAAM,CACrB,EACIC,EAAa,CACf,4BAA6B,EAC/B","x_google_ignoreList":[0]}