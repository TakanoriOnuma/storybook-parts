{"version":3,"file":"Badge.stories-0d61a079.js","sources":["../../ui/components/src/components/Badge/Badge.tsx"],"sourcesContent":["import React from 'react';\nimport { styled } from '@storybook/theming';\nimport { transparentize } from 'polished';\n\nconst BadgeWrapper = styled.div<BadgeProps>(\n  ({ theme }) => ({\n    display: 'inline-block',\n    fontSize: 11,\n    lineHeight: '12px',\n    alignSelf: 'center',\n    padding: '4px 12px',\n    borderRadius: '3em',\n    fontWeight: theme.typography.weight.bold,\n  }),\n  {\n    svg: {\n      height: 12,\n      width: 12,\n      marginRight: 4,\n      marginTop: -2,\n\n      path: {\n        fill: 'currentColor',\n      },\n    },\n  },\n  ({ theme, status }) => {\n    switch (status) {\n      case 'critical': {\n        return {\n          color: theme.color.critical,\n          background: theme.background.critical,\n        };\n      }\n      case 'negative': {\n        return {\n          color: theme.color.negativeText,\n          background: theme.background.negative,\n          boxShadow:\n            theme.base === 'light'\n              ? `inset 0 0 0 1px ${transparentize(0.9, theme.color.negativeText)}`\n              : 'none',\n        };\n      }\n      case 'warning': {\n        return {\n          color: theme.color.warningText,\n          background: theme.background.warning,\n          boxShadow:\n            theme.base === 'light'\n              ? `inset 0 0 0 1px ${transparentize(0.9, theme.color.warningText)}`\n              : 'none',\n        };\n      }\n      case 'neutral': {\n        return {\n          color: theme.color.dark,\n          background: theme.color.mediumlight,\n          boxShadow:\n            theme.base === 'light'\n              ? `inset 0 0 0 1px ${transparentize(0.9, theme.color.dark)}`\n              : 'none',\n        };\n      }\n      case 'positive': {\n        return {\n          color: theme.color.positiveText,\n          background: theme.background.positive,\n          boxShadow:\n            theme.base === 'light'\n              ? `inset 0 0 0 1px ${transparentize(0.9, theme.color.positiveText)}`\n              : 'none',\n        };\n      }\n      default: {\n        return {};\n      }\n    }\n  }\n);\n\nexport interface BadgeProps {\n  status: 'positive' | 'negative' | 'neutral' | 'warning' | 'critical';\n  children?: React.ReactNode;\n}\n\nexport const Badge = ({ ...props }: BadgeProps) => {\n  return <BadgeWrapper {...props} />;\n};\n"],"names":["BadgeWrapper","styled","theme","status","transparentize","Badge","props","React"],"mappings":"iMAIA,MAAAA,EAAAC,EAAA,IACA,CAAA,CAAA,MAAAC,CAAA,KAAA,CACA,QAAA,eACA,SAAA,GACA,WAAA,OACA,UAAA,SACA,QAAA,WACA,aAAA,MACA,WAAAA,EAAA,WAAA,OAAA,IAAA,GAEA,CACA,IAAA,CACA,OAAA,GACA,MAAA,GACA,YAAA,EACA,UAAA,GAEA,KAAA,CACA,KAAA,cACA,CACA,CACA,EACA,CAAA,CAAA,MAAAA,EAAA,OAAAC,KAAA,CACA,OAAAA,EAAA,CACA,IAAA,WACA,MAAA,CACA,MAAAD,EAAA,MAAA,SACA,WAAAA,EAAA,WAAA,QAAA,EAGA,IAAA,WACA,MAAA,CACA,MAAAA,EAAA,MAAA,aACA,WAAAA,EAAA,WAAA,SACA,UACAA,EAAA,OAAA,QACA,mBAAAE,EAAA,GAAAF,EAAA,MAAA,YAAA,CAAA,GACA,MAAA,EAGA,IAAA,UACA,MAAA,CACA,MAAAA,EAAA,MAAA,YACA,WAAAA,EAAA,WAAA,QACA,UACAA,EAAA,OAAA,QACA,mBAAAE,EAAA,GAAAF,EAAA,MAAA,WAAA,CAAA,GACA,MAAA,EAGA,IAAA,UACA,MAAA,CACA,MAAAA,EAAA,MAAA,KACA,WAAAA,EAAA,MAAA,YACA,UACAA,EAAA,OAAA,QACA,mBAAAE,EAAA,GAAAF,EAAA,MAAA,IAAA,CAAA,GACA,MAAA,EAGA,IAAA,WACA,MAAA,CACA,MAAAA,EAAA,MAAA,aACA,WAAAA,EAAA,WAAA,SACA,UACAA,EAAA,OAAA,QACA,mBAAAE,EAAA,GAAAF,EAAA,MAAA,YAAA,CAAA,GACA,MAAA,EAGA,QACA,MAAA,EAEA,CACA,CACA,EAOAG,EAAA,CAAA,CAAA,GAAAC,KACAC,EAAA,cAAAP,EAAA,CAAA,GAAAM,CAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}