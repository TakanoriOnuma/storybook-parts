{"version":3,"file":"Boolean-978b032e.js","sources":["../../ui/blocks/src/controls/Boolean.tsx"],"sourcesContent":["import type { FC } from 'react';\nimport React, { useCallback } from 'react';\n\nimport { opacify, transparentize } from 'polished';\nimport { styled } from '@storybook/theming';\n\nimport { Form } from '@storybook/components';\nimport { getControlId, getControlSetterButtonId } from './helpers';\n\nimport type { ControlProps, BooleanValue, BooleanConfig } from './types';\n\nconst Label = styled.label(({ theme }) => ({\n  lineHeight: '18px',\n  alignItems: 'center',\n  marginBottom: 8,\n  display: 'inline-block',\n  position: 'relative',\n  whiteSpace: 'nowrap',\n  background: theme.boolean.background,\n  borderRadius: '3em',\n  padding: 1,\n\n  input: {\n    appearance: 'none',\n    width: '100%',\n    height: '100%',\n    position: 'absolute',\n    left: 0,\n    top: 0,\n    margin: 0,\n    padding: 0,\n    border: 'none',\n    background: 'transparent',\n    cursor: 'pointer',\n    borderRadius: '3em',\n\n    '&:focus': {\n      outline: 'none',\n      boxShadow: `${theme.color.secondary} 0 0 0 1px inset !important`,\n    },\n  },\n\n  span: {\n    textAlign: 'center',\n    fontSize: theme.typography.size.s1,\n    fontWeight: theme.typography.weight.bold,\n    lineHeight: '1',\n    cursor: 'pointer',\n    display: 'inline-block',\n    padding: '7px 15px',\n    transition: 'all 100ms ease-out',\n    userSelect: 'none',\n    borderRadius: '3em',\n\n    color: transparentize(0.5, theme.color.defaultText),\n    background: 'transparent',\n\n    '&:hover': {\n      boxShadow: `${opacify(0.3, theme.appBorderColor)} 0 0 0 1px inset`,\n    },\n\n    '&:active': {\n      boxShadow: `${opacify(0.05, theme.appBorderColor)} 0 0 0 2px inset`,\n      color: opacify(1, theme.appBorderColor),\n    },\n\n    '&:first-of-type': {\n      paddingRight: 8,\n    },\n    '&:last-of-type': {\n      paddingLeft: 8,\n    },\n  },\n\n  'input:checked ~ span:last-of-type, input:not(:checked) ~ span:first-of-type': {\n    background: theme.boolean.selectedBackground,\n    boxShadow:\n      theme.base === 'light'\n        ? `${opacify(0.1, theme.appBorderColor)} 0 0 2px`\n        : `${theme.appBorderColor} 0 0 0 1px`,\n    color: theme.color.defaultText,\n    padding: '7px 15px',\n  },\n}));\n\nconst parse = (value: string | null): boolean => value === 'true';\n\nexport type BooleanProps = ControlProps<BooleanValue> & BooleanConfig;\n/**\n * # Boolean Control\n * Renders a switch toggle with \"True\" or \"False\".\n * or if the value is `undefined`, renders a button to set the boolean.\n *\n * ## Example usage\n *\n * ```\n *\n * <BooleanControl name=\"isTrue\" value={value} onChange={handleValueChange}/>\n * ```\n */\nexport const BooleanControl: FC<BooleanProps> = ({ name, value, onChange, onBlur, onFocus }) => {\n  const onSetFalse = useCallback(() => onChange(false), [onChange]);\n  if (value === undefined) {\n    return (\n      <Form.Button id={getControlSetterButtonId(name)} onClick={onSetFalse}>\n        Set boolean\n      </Form.Button>\n    );\n  }\n  const controlId = getControlId(name);\n\n  const parsedValue = typeof value === 'string' ? parse(value) : value;\n\n  return (\n    <Label htmlFor={controlId} aria-label={name}>\n      <input\n        id={controlId}\n        type=\"checkbox\"\n        onChange={(e) => onChange(e.target.checked)}\n        checked={parsedValue}\n        role=\"switch\"\n        {...{ name, onBlur, onFocus }}\n      />\n      <span aria-hidden=\"true\">False</span>\n      <span aria-hidden=\"true\">True</span>\n    </Label>\n  );\n};\n"],"names":["Label","styled","theme","transparentize","opacify","parse","value","BooleanControl","name","onChange","onBlur","onFocus","onSetFalse","useCallback","jsx","Form","getControlSetterButtonId","controlId","getControlId","parsedValue","jsxs","e"],"mappings":"oRAWA,MAAAA,EAAAC,EAAA,MAAA,CAAA,CAAA,MAAAC,CAAA,KAAA,CAA2C,WAAA,OAC7B,WAAA,SACA,aAAA,EACE,QAAA,eACL,SAAA,WACC,WAAA,SACE,WAAAA,EAAA,QAAA,WACc,aAAA,MACZ,QAAA,EACL,MAAA,CAEF,WAAA,OACO,MAAA,OACL,OAAA,OACC,SAAA,WACE,KAAA,EACJ,IAAA,EACD,OAAA,EACG,QAAA,EACC,OAAA,OACD,WAAA,cACI,OAAA,UACJ,aAAA,MACM,UAAA,CAEH,QAAA,OACA,UAAA,GAAAA,EAAA,MAAA,SAAA,6BAC0B,CACrC,EACF,KAAA,CAEM,UAAA,SACO,SAAAA,EAAA,WAAA,KAAA,GACqB,WAAAA,EAAA,WAAA,OAAA,KACI,WAAA,IACxB,OAAA,UACJ,QAAA,eACC,QAAA,WACA,WAAA,qBACG,WAAA,OACA,aAAA,MACE,MAAAC,EAAA,GAAAD,EAAA,MAAA,WAAA,EAEoC,WAAA,cACtC,UAAA,CAED,UAAA,GAAAE,EAAA,GAAAF,EAAA,cAAA,CAAA,kBACuC,EAClD,WAAA,CAEY,UAAA,GAAAE,EAAA,IAAAF,EAAA,cAAA,CAAA,mBACuC,MAAAE,EAAA,EAAAF,EAAA,cAAA,CACX,EACxC,kBAAA,CAEmB,aAAA,CACH,EAChB,iBAAA,CACkB,YAAA,CACH,CACf,EACF,8EAAA,CAE+E,WAAAA,EAAA,QAAA,mBACnD,UAAAA,EAAA,OAAA,QAAA,GAAAE,EAAA,GAAAF,EAAA,cAAA,CAAA,WAAA,GAAAA,EAAA,cAAA,aAIG,MAAAA,EAAA,MAAA,YACV,QAAA,UACV,CAEb,EAAA,EAEAG,EAAAC,GAAAA,IAAA,OAeOC,EAAA,CAAA,CAAA,KAAAC,EAAA,MAAAF,EAAA,SAAAG,EAAA,OAAAC,EAAA,QAAAC,KAAA,CACL,MAAAC,EAAAC,EAAAA,YAAA,IAAAJ,EAAA,EAAA,EAAA,CAAAA,CAAA,CAAA,EACA,GAAAH,IAAA,OACE,OAAAQ,EAAAC,EAAA,OAAA,CAAA,GAAAC,EAAAR,CAAA,EAAA,QAAAI,EAAA,SAAA,aAAA,CAAA,EAMF,MAAAK,EAAAC,EAAAV,CAAA,EAEAW,EAAA,OAAAb,GAAA,SAAAD,EAAAC,CAAA,EAAAA,EAEA,OAAAc,EAAApB,EAAA,CAAA,QAAAiB,EAAA,aAAAT,EAAA,SAAA,CAEIM,EAAA,QAAC,CAAA,GAAAG,EACK,KAAA,WACC,SAAAI,GAAAZ,EAAAY,EAAA,OAAA,OAAA,EACqC,QAAAF,EACjC,KAAA,SACJ,KAAAX,EAAA,OAAAE,EAAA,QAAAC,CACuB,CAAA,EAC9BG,EAAA,OAAA,CAAA,cAAA,OAAA,SAAA,QAAA,EAC8BA,EAAA,OAAA,CAAA,cAAA,OAAA,SAAA,OAAA,CACD,CAAA,CAAA,CAGnC;;;;;;;;;"}