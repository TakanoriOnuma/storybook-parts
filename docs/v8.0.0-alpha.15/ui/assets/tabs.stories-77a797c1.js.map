{"version":3,"file":"tabs.stories-77a797c1.js","sources":["../../ui/components/src/components/bar/button.tsx","../../ui/components/src/components/bar/bar.tsx","../../ui/components/src/components/tabs/tabs.helpers.tsx","../../ui/components/src/components/tabs/tabs.hooks.tsx","../../ui/components/src/components/tabs/tabs.tsx"],"sourcesContent":["import type {\n  AnchorHTMLAttributes,\n  ButtonHTMLAttributes,\n  DetailedHTMLProps,\n  ForwardedRef,\n  ForwardRefExoticComponent,\n  ReactElement,\n  RefAttributes,\n} from 'react';\nimport React, { forwardRef } from 'react';\nimport { styled, isPropValid } from '@storybook/theming';\n\ninterface ButtonProps\n  extends DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement> {\n  href?: never;\n  target?: never;\n}\ninterface LinkProps\n  extends DetailedHTMLProps<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement> {\n  disabled?: void;\n  href: string;\n}\n\nconst isLink = (obj: {\n  props: ButtonProps | LinkProps;\n  ref: ForwardedRef<HTMLButtonElement> | ForwardedRef<HTMLAnchorElement>;\n}): obj is { props: LinkProps; ref: ForwardedRef<HTMLAnchorElement> } => {\n  return typeof obj.props.href === 'string';\n};\n\nconst isButton = (obj: {\n  props: ButtonProps | LinkProps;\n  ref: ForwardedRef<HTMLButtonElement> | ForwardedRef<HTMLAnchorElement>;\n}): obj is { props: ButtonProps; ref: ForwardedRef<HTMLButtonElement> } => {\n  return typeof obj.props.href !== 'string';\n};\n\nfunction ForwardRefFunction(p: LinkProps, r: ForwardedRef<HTMLAnchorElement>): ReactElement;\nfunction ForwardRefFunction(p: ButtonProps, r: ForwardedRef<HTMLButtonElement>): ReactElement;\nfunction ForwardRefFunction(\n  { children, ...rest }: ButtonProps | LinkProps,\n  ref: ForwardedRef<HTMLButtonElement> | ForwardedRef<HTMLAnchorElement>\n) {\n  const o = { props: rest, ref };\n  if (isLink(o)) {\n    return (\n      <a ref={o.ref} {...o.props}>\n        {children}\n      </a>\n    );\n  }\n  if (isButton(o)) {\n    return (\n      <button ref={o.ref} type=\"button\" {...o.props}>\n        {children}\n      </button>\n    );\n  }\n  throw new Error('invalid props');\n}\ntype ButtonLike<P = {}> = ForwardRefExoticComponent<\n  Omit<ButtonProps, 'ref'> & RefAttributes<HTMLButtonElement> & P\n>;\n\ntype LinkLike<P = {}> = ForwardRefExoticComponent<\n  Omit<LinkProps, 'ref'> & RefAttributes<HTMLAnchorElement> & P\n>;\n\nconst ButtonOrLink: ButtonLike | LinkLike = forwardRef(ForwardRefFunction) as ButtonLike | LinkLike;\n\nButtonOrLink.displayName = 'ButtonOrLink';\n\nexport interface TabButtonProps {\n  active?: boolean;\n  textColor?: string;\n}\n\nexport const TabButton = styled(ButtonOrLink, { shouldForwardProp: isPropValid })<TabButtonProps>(\n  {\n    whiteSpace: 'normal',\n    display: 'inline-flex',\n    overflow: 'hidden',\n    verticalAlign: 'top',\n    justifyContent: 'center',\n    alignItems: 'center',\n    textAlign: 'center',\n    textDecoration: 'none',\n\n    '&:empty': {\n      display: 'none',\n    },\n    '&[hidden]': {\n      display: 'none',\n    },\n  },\n  ({ theme }) => ({\n    padding: '0 15px',\n    transition: 'color 0.2s linear, border-bottom-color 0.2s linear',\n    height: 40,\n    lineHeight: '12px',\n    cursor: 'pointer',\n    background: 'transparent',\n    border: '0 solid transparent',\n    borderTop: '3px solid transparent',\n    borderBottom: '3px solid transparent',\n    fontWeight: 'bold',\n    fontSize: 13,\n\n    '&:focus': {\n      outline: '0 none',\n      borderBottomColor: theme.color.secondary,\n    },\n  }),\n  ({ active, textColor, theme }) =>\n    active\n      ? {\n          color: textColor || theme.barSelectedColor,\n          borderBottomColor: theme.barSelectedColor,\n        }\n      : {\n          color: textColor || theme.barTextColor,\n          borderBottomColor: 'transparent',\n        }\n);\nTabButton.displayName = 'TabButton';\n\nexport interface IconButtonProps {\n  active?: boolean;\n  disabled?: boolean;\n}\n\nconst IconPlaceholder = styled.div(({ theme }) => ({\n  width: 14,\n  height: 14,\n  backgroundColor: theme.appBorderColor,\n  animation: `${theme.animation.glow} 1.5s ease-in-out infinite`,\n}));\n\nconst IconButtonSkeletonWrapper = styled.div(() => ({\n  marginTop: 6,\n  padding: 7,\n  height: 28,\n}));\n\n/**\n * @deprecated\n * This component will be removed in Storybook 9.0\n * */\nexport const IconButtonSkeleton = () => (\n  <IconButtonSkeletonWrapper>\n    <IconPlaceholder />\n  </IconButtonSkeletonWrapper>\n);\n","import type { ComponentProps } from 'react';\nimport React, { Children } from 'react';\nimport { styled } from '@storybook/theming';\n\nimport type { ScrollAreaProps } from '../ScrollArea/ScrollArea';\nimport { ScrollArea } from '../ScrollArea/ScrollArea';\n\nexport interface SideProps {\n  left?: boolean;\n  right?: boolean;\n  scrollable?: boolean;\n}\n\nexport const Side = styled.div<SideProps>(\n  {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    flexBasis: 'auto',\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  ({ scrollable }) => (scrollable ? { flexShrink: 0 } : {}),\n  ({ left }) =>\n    left\n      ? {\n          '& > *': {\n            marginLeft: 4,\n          },\n        }\n      : {},\n  ({ right }) =>\n    right\n      ? {\n          marginLeft: 30,\n          '& > *': {\n            marginRight: 4,\n          },\n        }\n      : {}\n);\nSide.displayName = 'Side';\n\ninterface UnstyledBarProps extends ScrollAreaProps {\n  scrollable?: boolean;\n}\n\nconst UnstyledBar = ({ children, className, scrollable }: UnstyledBarProps) =>\n  scrollable ? (\n    <ScrollArea vertical={false} className={className}>\n      {children}\n    </ScrollArea>\n  ) : (\n    <div className={className}>{children}</div>\n  );\n\nexport interface BarProps extends UnstyledBarProps {\n  border?: boolean;\n}\nexport const Bar = styled(UnstyledBar)<BarProps>(\n  ({ theme, scrollable = true }) => ({\n    color: theme.barTextColor,\n    width: '100%',\n    height: 40,\n    flexShrink: 0,\n    overflow: scrollable ? 'auto' : 'hidden',\n    overflowY: 'hidden',\n  }),\n  ({ theme, border = false }) =>\n    border\n      ? {\n          boxShadow: `${theme.appBorderColor}  0 -1px 0 0 inset`,\n          background: theme.barBg,\n        }\n      : {}\n);\nBar.displayName = 'Bar';\n\ninterface BarInnerProps {\n  bgColor?: string;\n}\nconst BarInner = styled.div<BarInnerProps>(({ bgColor }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  position: 'relative',\n  flexWrap: 'nowrap',\n  flexShrink: 0,\n  height: 40,\n  backgroundColor: bgColor || '',\n}));\n\nexport interface FlexBarProps extends ComponentProps<typeof Bar> {\n  border?: boolean;\n  backgroundColor?: string;\n}\n\nexport const FlexBar = ({ children, backgroundColor, ...rest }: FlexBarProps) => {\n  const [left, right] = Children.toArray(children);\n  return (\n    <Bar {...rest}>\n      <BarInner bgColor={backgroundColor}>\n        <Side scrollable={rest.scrollable} left>\n          {left}\n        </Side>\n        {right ? <Side right>{right}</Side> : null}\n      </BarInner>\n    </Bar>\n  );\n};\nFlexBar.displayName = 'FlexBar';\n","import { styled } from '@storybook/theming';\nimport type { FC, PropsWithChildren, ReactChild, ReactElement, ReactNode } from 'react';\nimport React, { Children } from 'react';\nimport type { Addon_RenderOptions } from '@storybook/types';\nimport type { TabsProps } from './tabs';\n\nexport interface VisuallyHiddenProps {\n  active?: boolean;\n}\n\nexport const VisuallyHidden = styled.div<VisuallyHiddenProps>(({ active }) =>\n  active ? { display: 'block' } : { display: 'none' }\n);\n\nexport const childrenToList = (children: TabsProps['children']) =>\n  Children.toArray(children).map(\n    ({\n      props: { title, id, color, children: childrenOfChild },\n    }: ReactElement<{\n      children: FC<Addon_RenderOptions & PropsWithChildren> | ReactChild | null;\n      title: ReactChild | null | FC;\n      id: string;\n      color?: string;\n    }>) => {\n      const content: FC<Addon_RenderOptions & PropsWithChildren> | ReactNode = Array.isArray(\n        childrenOfChild\n      )\n        ? childrenOfChild[0]\n        : childrenOfChild;\n\n      const render: FC<Addon_RenderOptions & PropsWithChildren> = (\n        typeof content === 'function'\n          ? content\n          : ({ active }) => (\n              <VisuallyHidden active={active} role=\"tabpanel\">\n                {content}\n              </VisuallyHidden>\n            )\n      ) as FC<Addon_RenderOptions & PropsWithChildren>;\n      return {\n        title,\n        id,\n        ...(color ? { color } : {}),\n        render,\n      };\n    }\n  );\n\nexport type ChildrenList = ReturnType<typeof childrenToList>;\nexport type ChildrenListComplete = Array<\n  ReturnType<typeof childrenToList>[0] & {\n    active: boolean;\n  }\n>;\n","import React, { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { sanitize } from '@storybook/csf';\nimport { styled } from '@storybook/theming';\nimport useResizeObserver from 'use-resize-observer';\nimport { TabButton } from '../bar/button';\nimport { TooltipLinkList } from '../tooltip/TooltipLinkList';\nimport { WithTooltip } from '../tooltip/WithTooltip';\nimport type { ChildrenListComplete } from './tabs.helpers';\nimport type { Link } from '../tooltip/TooltipLinkList';\n\nconst CollapseIcon = styled.span<{ isActive: boolean }>(({ theme, isActive }) => ({\n  display: 'inline-block',\n  width: 0,\n  height: 0,\n  marginLeft: 8,\n  color: isActive ? theme.color.secondary : theme.color.mediumdark,\n  borderRight: '3px solid transparent',\n  borderLeft: `3px solid transparent`,\n  borderTop: '3px solid',\n  transition: 'transform .1s ease-out',\n}));\n\nconst AddonButton = styled(TabButton)<{ preActive: boolean }>(({ active, theme, preActive }) => {\n  return `\n    color: ${preActive || active ? theme.color.secondary : theme.color.mediumdark};\n    &:hover {\n      color: ${theme.color.secondary};\n      .addon-collapsible-icon {\n        color: ${theme.color.secondary};\n      }\n    }\n  `;\n});\n\nexport function useList(list: ChildrenListComplete) {\n  const tabBarRef = useRef<HTMLDivElement>();\n  const addonsRef = useRef<HTMLButtonElement>();\n  const tabRefs = useRef(new Map<string, HTMLButtonElement>());\n  const { width: tabBarWidth = 1 } = useResizeObserver<HTMLDivElement>({\n    ref: tabBarRef,\n  });\n\n  const [visibleList, setVisibleList] = useState(list);\n  const [invisibleList, setInvisibleList] = useState<ChildrenListComplete>([]);\n  const previousList = useRef<ChildrenListComplete>(list);\n\n  const AddonTab = useCallback(\n    ({\n      menuName,\n      actions,\n    }: {\n      menuName: string;\n      actions?: {\n        onSelect: (id: string) => void;\n      } & Record<string, any>;\n    }) => {\n      const isAddonsActive = invisibleList.some(({ active }) => active);\n      const [isTooltipVisible, setTooltipVisible] = useState(false);\n      return (\n        <>\n          <WithTooltip\n            interactive\n            visible={isTooltipVisible}\n            onVisibleChange={setTooltipVisible}\n            placement=\"bottom\"\n            delayHide={100}\n            tooltip={\n              <TooltipLinkList\n                links={invisibleList.map(({ title, id, color, active }) => {\n                  return {\n                    id,\n                    title,\n                    color,\n                    active,\n                    onClick: (e) => {\n                      e.preventDefault();\n                      actions.onSelect(id);\n                    },\n                  } as Link;\n                })}\n              />\n            }\n          >\n            <AddonButton\n              ref={addonsRef}\n              active={isAddonsActive}\n              preActive={isTooltipVisible}\n              style={{ visibility: invisibleList.length ? 'visible' : 'hidden' }}\n              aria-hidden={!invisibleList.length}\n              className=\"tabbutton\"\n              type=\"button\"\n              role=\"tab\"\n            >\n              {menuName}\n              <CollapseIcon\n                className=\"addon-collapsible-icon\"\n                isActive={isAddonsActive || isTooltipVisible}\n              />\n            </AddonButton>\n          </WithTooltip>\n          {invisibleList.map(({ title, id, color }, index) => {\n            const indexId = `index-${index}`;\n            return (\n              <TabButton\n                id={`tabbutton-${sanitize(id) ?? indexId}`}\n                style={{ visibility: 'hidden' }}\n                aria-hidden\n                tabIndex={-1}\n                ref={(ref: HTMLButtonElement) => {\n                  tabRefs.current.set(id, ref);\n                }}\n                className=\"tabbutton\"\n                type=\"button\"\n                key={id}\n                textColor={color}\n                role=\"tab\"\n              >\n                {/* @ts-expect-error (we know this is broken) */}\n                {title}\n              </TabButton>\n            );\n          })}\n        </>\n      );\n    },\n    [invisibleList]\n  );\n\n  const setTabLists = useCallback(() => {\n    // get x and width from tabBarRef div\n    if (!tabBarRef.current || !addonsRef.current) {\n      return;\n    }\n    const { x, width } = tabBarRef.current.getBoundingClientRect();\n    const { width: widthAddonsTab } = addonsRef.current.getBoundingClientRect();\n    const rightBorder = invisibleList.length ? x + width - widthAddonsTab : x + width;\n\n    const newVisibleList: ChildrenListComplete = [];\n\n    let widthSum = 0;\n\n    const newInvisibleList = list.filter((item) => {\n      const { id } = item;\n      const tabButton = tabRefs.current.get(id);\n      const { width: tabWidth = 0 } = tabButton?.getBoundingClientRect() || {};\n\n      const crossBorder = x + widthSum + tabWidth > rightBorder;\n\n      //  `!tabButton` happens when new tab has just been added\n      if (!crossBorder || !tabButton) {\n        newVisibleList.push(item);\n      }\n\n      widthSum += tabWidth;\n\n      return crossBorder;\n    });\n\n    if (newVisibleList.length !== visibleList.length || previousList.current !== list) {\n      setVisibleList(newVisibleList);\n      setInvisibleList(newInvisibleList);\n      previousList.current = list;\n    }\n  }, [invisibleList.length, list, visibleList]);\n\n  useLayoutEffect(setTabLists, [setTabLists, tabBarWidth]);\n\n  return {\n    tabRefs,\n    addonsRef,\n    tabBarRef,\n    visibleList,\n    invisibleList,\n    AddonTab,\n  };\n}\n","import type { FC, PropsWithChildren, ReactElement, ReactNode, SyntheticEvent } from 'react';\nimport React, { useMemo, Component, Fragment, memo } from 'react';\nimport { styled } from '@storybook/theming';\nimport { sanitize } from '@storybook/csf';\n\nimport type { Addon_RenderOptions } from '@storybook/types';\nimport { Placeholder } from '../placeholder/placeholder';\nimport { TabButton } from '../bar/button';\nimport { FlexBar } from '../bar/bar';\nimport { childrenToList, VisuallyHidden } from './tabs.helpers';\nimport { useList } from './tabs.hooks';\n\nconst ignoreSsrWarning =\n  '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\n\nexport interface WrapperProps {\n  bordered?: boolean;\n  absolute?: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>(\n  ({ theme, bordered }) =>\n    bordered\n      ? {\n          backgroundClip: 'padding-box',\n          border: `1px solid ${theme.appBorderColor}`,\n          borderRadius: theme.appBorderRadius,\n          overflow: 'hidden',\n          boxSizing: 'border-box',\n        }\n      : {},\n  ({ absolute }) =>\n    absolute\n      ? {\n          width: '100%',\n          height: '100%',\n          boxSizing: 'border-box',\n          display: 'flex',\n          flexDirection: 'column',\n        }\n      : {\n          display: 'block',\n        }\n);\n\nexport const TabBar = styled.div({\n  overflow: 'hidden',\n\n  '&:first-of-type': {\n    marginLeft: -3,\n  },\n\n  whiteSpace: 'nowrap',\n  flexGrow: 1,\n});\n\nTabBar.displayName = 'TabBar';\n\nexport interface ContentProps {\n  absolute?: boolean;\n  bordered?: boolean;\n}\n\nconst Content = styled.div<ContentProps>(\n  {\n    display: 'block',\n    position: 'relative',\n  },\n  ({ theme }) => ({\n    fontSize: theme.typography.size.s2 - 1,\n    background: theme.background.content,\n  }),\n  ({ bordered, theme }) =>\n    bordered\n      ? {\n          borderRadius: `0 0 ${theme.appBorderRadius - 1}px ${theme.appBorderRadius - 1}px`,\n        }\n      : {},\n  ({ absolute, bordered }) =>\n    absolute\n      ? {\n          height: `calc(100% - ${bordered ? 42 : 40}px)`,\n\n          position: 'absolute',\n          left: 0 + (bordered ? 1 : 0),\n          right: 0 + (bordered ? 1 : 0),\n          bottom: 0 + (bordered ? 1 : 0),\n          top: 40 + (bordered ? 1 : 0),\n          overflow: 'auto',\n          [`& > *:first-child${ignoreSsrWarning}`]: {\n            position: 'absolute',\n            left: 0 + (bordered ? 1 : 0),\n            right: 0 + (bordered ? 1 : 0),\n            bottom: 0 + (bordered ? 1 : 0),\n            top: 0 + (bordered ? 1 : 0),\n            height: `calc(100% - ${bordered ? 2 : 0}px)`,\n            overflow: 'auto',\n          },\n        }\n      : {}\n);\n\nexport interface TabWrapperProps {\n  active: boolean;\n  render?: () => ReactElement;\n  children?: ReactNode;\n}\n\nexport const TabWrapper: FC<TabWrapperProps> = ({ active, render, children }) => (\n  <VisuallyHidden active={active}>{render ? render() : children}</VisuallyHidden>\n);\n\nexport const panelProps = {};\n\nexport interface TabsProps {\n  children?: ReactElement<{\n    children: FC<Addon_RenderOptions & PropsWithChildren>;\n    title: ReactNode | FC<PropsWithChildren>;\n  }>[];\n  id?: string;\n  tools?: ReactNode;\n  selected?: string;\n  actions?: {\n    onSelect: (id: string) => void;\n  } & Record<string, any>;\n  backgroundColor?: string;\n  absolute?: boolean;\n  bordered?: boolean;\n  menuName?: string;\n}\n\nexport const Tabs: FC<TabsProps> = memo(\n  ({\n    children,\n    selected,\n    actions,\n    absolute,\n    bordered,\n    tools,\n    backgroundColor,\n    id: htmlId,\n    menuName,\n  }) => {\n    const idList = childrenToList(children)\n      .map((i) => i.id)\n      .join(',');\n\n    const list = useMemo(\n      () =>\n        childrenToList(children).map((i, index) => ({\n          ...i,\n          active: selected ? i.id === selected : index === 0,\n        })),\n      // eslint-disable-next-line react-hooks/exhaustive-deps -- we're using idList as a replacement for children\n      [selected, idList]\n    );\n\n    const { visibleList, tabBarRef, tabRefs, AddonTab } = useList(list);\n\n    return list.length ? (\n      <Wrapper absolute={absolute} bordered={bordered} id={htmlId}>\n        <FlexBar scrollable={false} border backgroundColor={backgroundColor}>\n          <TabBar style={{ whiteSpace: 'normal' }} ref={tabBarRef} role=\"tablist\">\n            {visibleList.map(({ title, id, active, color }, index) => {\n              const indexId = `index-${index}`;\n\n              return (\n                <TabButton\n                  id={`tabbutton-${sanitize(id) ?? indexId}`}\n                  ref={(ref: HTMLButtonElement) => {\n                    tabRefs.current.set(id, ref);\n                  }}\n                  className={`tabbutton ${active ? 'tabbutton-active' : ''}`}\n                  type=\"button\"\n                  key={id}\n                  active={active}\n                  textColor={color}\n                  onClick={(e: SyntheticEvent) => {\n                    e.preventDefault();\n                    actions.onSelect(id);\n                  }}\n                  role=\"tab\"\n                >\n                  {typeof title === 'function' ? <title /> : title}\n                </TabButton>\n              );\n            })}\n            <AddonTab menuName={menuName} actions={actions} />\n          </TabBar>\n          {tools}\n        </FlexBar>\n        <Content id=\"panel-tab-content\" bordered={bordered} absolute={absolute}>\n          {list.map(({ id, active, render }) => {\n            return React.createElement(render, { key: id, active }, null);\n          })}\n        </Content>\n      </Wrapper>\n    ) : (\n      <Placeholder>\n        <Fragment key=\"title\">Nothing found</Fragment>\n      </Placeholder>\n    );\n  }\n);\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  id: null,\n  children: null,\n  tools: null,\n  selected: null,\n  absolute: false,\n  bordered: false,\n  menuName: 'Tabs',\n};\n\nexport interface TabsStateProps {\n  children: TabsProps['children'];\n  initial: string;\n  absolute: boolean;\n  bordered: boolean;\n  backgroundColor: string;\n  menuName: string;\n}\n\nexport interface TabsStateState {\n  selected: string;\n}\n\nexport class TabsState extends Component<TabsStateProps, TabsStateState> {\n  static defaultProps: TabsStateProps = {\n    children: [],\n    initial: null,\n    absolute: false,\n    bordered: false,\n    backgroundColor: '',\n    menuName: undefined,\n  };\n\n  constructor(props: TabsStateProps) {\n    super(props);\n\n    this.state = {\n      selected: props.initial,\n    };\n  }\n\n  handlers = {\n    onSelect: (id: string) => this.setState({ selected: id }),\n  };\n\n  render() {\n    const { bordered = false, absolute = false, children, backgroundColor, menuName } = this.props;\n    const { selected } = this.state;\n    return (\n      <Tabs\n        bordered={bordered}\n        absolute={absolute}\n        selected={selected}\n        backgroundColor={backgroundColor}\n        menuName={menuName}\n        actions={this.handlers}\n      >\n        {children}\n      </Tabs>\n    );\n  }\n}\n"],"names":["isLink","obj","isButton","ForwardRefFunction","children","rest","ref","o","React","ButtonOrLink","forwardRef","TabButton","styled","isPropValid","theme","active","textColor","Side","scrollable","left","right","UnstyledBar","className","ScrollArea","Bar","border","BarInner","bgColor","FlexBar","backgroundColor","Children","VisuallyHidden","childrenToList","title","id","color","childrenOfChild","content","CollapseIcon","isActive","AddonButton","preActive","useList","list","tabBarRef","useRef","addonsRef","tabRefs","tabBarWidth","useResizeObserver","visibleList","setVisibleList","useState","invisibleList","setInvisibleList","previousList","AddonTab","useCallback","menuName","actions","isAddonsActive","isTooltipVisible","setTooltipVisible","WithTooltip","TooltipLinkList","e","index","indexId","sanitize","setTabLists","x","width","widthAddonsTab","rightBorder","newVisibleList","widthSum","newInvisibleList","item","tabButton","tabWidth","crossBorder","useLayoutEffect","ignoreSsrWarning","Wrapper","bordered","absolute","TabBar","Content","TabWrapper","render","Tabs","memo","selected","tools","htmlId","idList","useMemo","Placeholder","Fragment","TabsState","Component","props"],"mappings":"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"}