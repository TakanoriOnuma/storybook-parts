{"version":3,"file":"ListItem-23858300.js","sources":["../../ui/components/src/components/tooltip/ListItem.tsx"],"sourcesContent":["import type { ReactNode, ComponentProps } from 'react';\nimport React from 'react';\nimport { styled } from '@storybook/theming';\nimport memoize from 'memoizerific';\nimport { transparentize } from 'polished';\n\nexport interface TitleProps {\n  children?: ReactNode;\n  active?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n}\nconst Title = styled(({ active, loading, disabled, ...rest }: TitleProps) => <span {...rest} />)<{\n  active: boolean;\n  loading: boolean;\n  disabled: boolean;\n}>(\n  ({ theme }) => ({\n    color: theme.color.defaultText,\n    // Previously was theme.typography.weight.normal but this weight does not exists in Theme\n    fontWeight: theme.typography.weight.regular,\n  }),\n  ({ active, theme }) =>\n    active\n      ? {\n          color: theme.color.secondary,\n          fontWeight: theme.typography.weight.bold,\n        }\n      : {},\n  ({ loading, theme }) =>\n    loading\n      ? {\n          display: 'inline-block',\n          flex: 'none',\n          ...theme.animation.inlineGlow,\n        }\n      : {},\n  ({ disabled, theme }) =>\n    disabled\n      ? {\n          color: transparentize(0.7, theme.color.defaultText),\n        }\n      : {}\n);\n\nexport interface RightProps {\n  active?: boolean;\n}\n\nconst Right = styled.span<RightProps>({\n  display: 'flex',\n  '& svg': {\n    height: 12,\n    width: 12,\n    margin: '3px 0',\n    verticalAlign: 'top',\n  },\n  '& path': {\n    fill: 'inherit',\n  },\n});\n\nconst Center = styled.span<{ isIndented: boolean }>(\n  {\n    flex: 1,\n    textAlign: 'left',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  ({ isIndented }) => (isIndented ? { marginLeft: 24 } : {})\n);\n\nexport interface CenterTextProps {\n  active?: boolean;\n  disabled?: boolean;\n}\n\nconst CenterText = styled.span<CenterTextProps>(\n  ({ theme }) => ({\n    fontSize: '11px',\n    lineHeight: '14px',\n  }),\n  ({ active, theme }) =>\n    active\n      ? {\n          color: theme.color.secondary,\n        }\n      : {},\n  ({ theme, disabled }) =>\n    disabled\n      ? {\n          color: theme.textMutedColor,\n        }\n      : {}\n);\n\nexport interface LeftProps {\n  active?: boolean;\n}\n\nconst Left = styled.span<LeftProps>(\n  ({ active, theme }) =>\n    active\n      ? {\n          color: theme.color.secondary,\n        }\n      : {},\n  () => ({\n    display: 'flex',\n    maxWidth: 14,\n  })\n);\n\nexport interface ItemProps {\n  disabled?: boolean;\n}\n\nconst Item = styled.a<ItemProps>(\n  ({ theme }) => ({\n    fontSize: theme.typography.size.s1,\n    transition: 'all 150ms ease-out',\n    color: theme.color.dark,\n    textDecoration: 'none',\n    cursor: 'pointer',\n    justifyContent: 'space-between',\n\n    lineHeight: '18px',\n    padding: '7px 10px',\n    display: 'flex',\n    alignItems: 'center',\n\n    '& > * + *': {\n      paddingLeft: 10,\n    },\n\n    '&:hover': {\n      background: theme.background.hoverable,\n    },\n    '&:hover svg': {\n      opacity: 1,\n    },\n  }),\n  ({ disabled }) =>\n    disabled\n      ? {\n          cursor: 'not-allowed',\n        }\n      : {}\n);\n\nconst getItemProps = memoize(100)((onClick, href, LinkWrapper) => {\n  const result = {};\n\n  if (onClick) {\n    Object.assign(result, {\n      onClick,\n    });\n  }\n  if (href) {\n    Object.assign(result, {\n      href,\n    });\n  }\n  if (LinkWrapper && href) {\n    Object.assign(result, {\n      to: href,\n      as: LinkWrapper,\n    });\n  }\n  return result;\n});\n\nexport type LinkWrapperType = (props: any) => ReactNode;\n\nexport interface ListItemProps extends Omit<ComponentProps<typeof Item>, 'href' | 'title'> {\n  loading?: boolean;\n  title?: ReactNode;\n  center?: ReactNode;\n  right?: ReactNode;\n  icon?: ReactNode;\n  active?: boolean;\n  disabled?: boolean;\n  href?: string;\n  LinkWrapper?: LinkWrapperType;\n  isIndented?: boolean;\n}\n\nconst ListItem = ({\n  loading,\n  title,\n  center,\n  right,\n  icon,\n  active,\n  disabled,\n  isIndented,\n  href,\n  onClick,\n  LinkWrapper,\n  ...rest\n}: ListItemProps) => {\n  const itemProps = getItemProps(onClick, href, LinkWrapper);\n  const commonProps = { active, disabled };\n\n  return (\n    <Item {...commonProps} {...rest} {...itemProps}>\n      {icon && <Left {...commonProps}>{icon}</Left>}\n      {title || center ? (\n        <Center isIndented={!icon && isIndented}>\n          {title && (\n            <Title {...commonProps} loading={loading}>\n              {title}\n            </Title>\n          )}\n          {center && <CenterText {...commonProps}>{center}</CenterText>}\n        </Center>\n      ) : null}\n      {right && <Right {...commonProps}>{right}</Right>}\n    </Item>\n  );\n};\n\nListItem.defaultProps = {\n  loading: false,\n  title: <span>Loading state</span>,\n  center: null,\n  right: null,\n  active: false,\n  disabled: false,\n  href: null,\n  LinkWrapper: null,\n  onClick: null,\n};\n\nexport default ListItem;\n"],"names":["Title","styled","active","loading","disabled","rest","React","theme","transparentize","Right","Center","isIndented","CenterText","Left","Item","getItemProps","memoize","onClick","href","LinkWrapper","result","ListItem","title","center","right","icon","itemProps","commonProps","ListItem$1"],"mappings":"sIAYA,MAAAA,EAAAC,EAAA,CAAA,CAAA,OAAAC,EAAA,QAAAC,EAAA,SAAAC,EAAA,GAAAC,CAAA,IAAAC,EAAA,cAAA,OAAA,CAAA,GAAAD,CAAA,CAAA,CAAA,EAKA,CAAA,CAAA,MAAAE,CAAA,KAAA,CACA,MAAAA,EAAA,MAAA,YAEA,WAAAA,EAAA,WAAA,OAAA,OAAA,GAEA,CAAA,CAAA,OAAAL,EAAA,MAAAK,KACAL,EACA,CACA,MAAAK,EAAA,MAAA,UACA,WAAAA,EAAA,WAAA,OAAA,IAAA,EAEA,CAAA,EACA,CAAA,CAAA,QAAAJ,EAAA,MAAAI,KACAJ,EACA,CACA,QAAA,eACA,KAAA,OACA,GAAAI,EAAA,UAAA,UAAA,EAEA,CAAA,EACA,CAAA,CAAA,SAAAH,EAAA,MAAAG,KACAH,EACA,CACA,MAAAI,EAAA,GAAAD,EAAA,MAAA,WAAA,CAAA,EAEA,CAAA,CACA,EAMAE,EAAAR,EAAA,KAAA,CACA,QAAA,OACA,QAAA,CACA,OAAA,GACA,MAAA,GACA,OAAA,QACA,cAAA,KACA,EACA,SAAA,CACA,KAAA,SACA,CACA,CAAA,EAEAS,EAAAT,EAAA,KACA,CACA,KAAA,EACA,UAAA,OACA,QAAA,OACA,cAAA,QACA,EACA,CAAA,CAAA,WAAAU,CAAA,IAAAA,EAAA,CAAA,WAAA,EAAA,EAAA,CAAA,CACA,EAOAC,EAAAX,EAAA,KACA,CAAA,CAAA,MAAAM,CAAA,KAAA,CACA,SAAA,OACA,WAAA,MAAA,GAEA,CAAA,CAAA,OAAAL,EAAA,MAAAK,KACAL,EACA,CACA,MAAAK,EAAA,MAAA,SAAA,EAEA,CAAA,EACA,CAAA,CAAA,MAAAA,EAAA,SAAAH,KACAA,EACA,CACA,MAAAG,EAAA,cAAA,EAEA,CAAA,CACA,EAMAM,EAAAZ,EAAA,KACA,CAAA,CAAA,OAAAC,EAAA,MAAAK,KACAL,EACA,CACA,MAAAK,EAAA,MAAA,SAAA,EAEA,CAAA,EACA,KAAA,CACA,QAAA,OACA,SAAA,EAAA,EAEA,EAMAO,EAAAb,EAAA,EACA,CAAA,CAAA,MAAAM,CAAA,KAAA,CACA,SAAAA,EAAA,WAAA,KAAA,GACA,WAAA,qBACA,MAAAA,EAAA,MAAA,KACA,eAAA,OACA,OAAA,UACA,eAAA,gBAEA,WAAA,OACA,QAAA,WACA,QAAA,OACA,WAAA,SAEA,YAAA,CACA,YAAA,EACA,EAEA,UAAA,CACA,WAAAA,EAAA,WAAA,SACA,EACA,cAAA,CACA,QAAA,CACA,CAAA,GAEA,CAAA,CAAA,SAAAH,CAAA,IACAA,EACA,CACA,OAAA,aAAA,EAEA,CAAA,CACA,EAEAW,EAAAC,EAAA,GAAA,EAAA,CAAAC,EAAAC,EAAAC,IAAA,CACA,MAAAC,EAAA,CAAA,EAEA,OAAAH,GACA,OAAA,OAAAG,EAAA,CACA,QAAAH,CAAA,CACA,EAEAC,GACA,OAAA,OAAAE,EAAA,CACA,KAAAF,CAAA,CACA,EAEAC,GAAAD,GACA,OAAA,OAAAE,EAAA,CACA,GAAAF,EACA,GAAAC,CAAA,CACA,EAEAC,CACA,CAAA,EAiBAC,EAAA,CAAA,CACA,QAAAlB,EACA,MAAAmB,EACA,OAAAC,EACA,MAAAC,EACA,KAAAC,EACA,OAAAvB,EACA,SAAAE,EACA,WAAAO,EACA,KAAAO,EACA,QAAAD,EACA,YAAAE,EACA,GAAAd,CACA,IAAA,CACA,MAAAqB,EAAAX,EAAAE,EAAAC,EAAAC,CAAA,EACAQ,EAAA,CAAA,OAAAzB,EAAA,SAAAE,GAGA,OAAAE,EAAA,cAAAQ,GAAA,GAAAa,EAAA,GAAAtB,EAAA,GAAAqB,GACAD,GAAAnB,EAAA,cAAAO,GAAA,GAAAc,CAAA,EAAAF,CAAA,EACAH,GAAAC,EACAjB,EAAA,cAAAI,EAAA,CAAA,WAAA,CAAAe,GAAAd,CAAA,EACAW,GACAhB,EAAA,cAAAN,EAAA,CAAA,GAAA2B,EAAA,QAAAxB,GACAmB,CACA,EAEAC,mBAAAX,EAAA,CAAA,GAAAe,GAAAJ,CAAA,CACA,EACA,KACAC,mBAAAf,EAAA,CAAA,GAAAkB,GAAAH,CAAA,CACA,CAEA,EAEAH,EAAA,aAAA,CACA,QAAA,GACA,MAAAf,EAAA,cAAA,OAAA,KAAA,eAAA,EACA,OAAA,KACA,MAAA,KACA,OAAA,GACA,SAAA,GACA,KAAA,KACA,YAAA,KACA,QAAA,IACA,EAEA,MAAAsB,EAAAP"}