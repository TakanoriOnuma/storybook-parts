{"version":3,"file":"app.mockdata-f972930d.js","sources":["../../ui/manager/src/components/layout/app.mockdata.tsx"],"sourcesContent":["import { global } from '@storybook/global';\nimport type { FC } from 'react';\nimport React, { Component } from 'react';\nimport { styled } from '@storybook/theming';\nimport type { Addon_BaseType, Addon_Collection } from '@storybook/types';\nimport { Addon_TypesEnum } from '@storybook/types';\nimport type { State } from '@storybook/manager-api';\nimport type { SidebarProps } from '../sidebar/Sidebar';\nimport { Sidebar } from '../sidebar/Sidebar';\nimport Panel from '../panel/panel';\nimport { Preview } from '../preview/preview';\n\nimport { previewProps } from '../preview/preview.mockdata';\nimport { mockDataset } from '../sidebar/mockdata';\nimport type { DesktopProps } from './desktop';\n\nconst { setInterval } = global;\n\nexport const shortcuts: State['shortcuts'] = {\n  fullScreen: ['F'],\n  togglePanel: ['A'],\n  panelPosition: ['D'],\n  toggleNav: ['S'],\n  toolbar: ['T'],\n  search: ['/'],\n  focusNav: ['1'],\n  focusIframe: ['2'],\n  focusPanel: ['3'],\n  prevComponent: ['alt', 'ArrowUp'],\n  nextComponent: ['alt', 'ArrowDown'],\n  prevStory: ['alt', 'ArrowLeft'],\n  nextStory: ['alt', 'ArrowRight'],\n  shortcutsPage: ['ctrl', 'shift', ','],\n  aboutPage: [','],\n  escape: ['escape'],\n  collapseAll: ['ctrl', 'shift', 'ArrowUp'],\n  expandAll: ['ctrl', 'shift', 'ArrowDown'],\n  remount: ['alt', 'R'],\n};\n\nexport const panels: Addon_Collection<Addon_BaseType> = {\n  test1: {\n    title: 'Test 1',\n    type: Addon_TypesEnum.PANEL,\n    render: ({ active }) => (active ? <div id=\"test1\">TEST 1</div> : null),\n  },\n  test2: {\n    title: 'Test 2',\n    type: Addon_TypesEnum.PANEL,\n    render: ({ active }) => (active ? <div id=\"test2\">TEST 2</div> : null),\n  },\n};\n\nconst realSidebarProps: SidebarProps = {\n  index: mockDataset.withRoot as SidebarProps['index'],\n  menu: [],\n  refs: {},\n  status: {},\n  previewInitialized: true,\n  extra: [],\n};\n\nconst PlaceholderBlock = styled.div(({ color }) => ({\n  background: color || 'hotpink',\n  position: 'absolute',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  alignItems: 'center',\n  overflow: 'hidden',\n}));\n\nclass PlaceholderClock extends Component<{ color: string }, { count: number }> {\n  state = {\n    count: 1,\n  };\n\n  interval: ReturnType<typeof setTimeout>;\n\n  componentDidMount() {\n    this.interval = setInterval(() => {\n      const { count } = this.state;\n      this.setState({ count: count + 1 });\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    const { interval } = this;\n    clearInterval(interval);\n  }\n\n  render() {\n    const { children, color } = this.props;\n    const { count } = this.state;\n    return (\n      <PlaceholderBlock color={color}>\n        <h2\n          data-chromatic=\"ignore\"\n          style={{\n            position: 'absolute',\n            bottom: 0,\n            right: 0,\n            color: 'rgba(0,0,0,0.2)',\n            fontSize: '150px',\n            lineHeight: '150px',\n            margin: '-20px',\n          }}\n        >\n          {count}\n        </h2>\n        {children}\n      </PlaceholderBlock>\n    );\n  }\n}\n\nconst MockSidebar: FC<any> = (props) => (\n  <PlaceholderClock color=\"hotpink\">\n    <pre>{JSON.stringify(props, null, 2)}</pre>\n  </PlaceholderClock>\n);\nconst MockPreview: FC<any> = (props) => (\n  <PlaceholderClock color=\"deepskyblue\">\n    <pre>{JSON.stringify(props, null, 2)}</pre>\n  </PlaceholderClock>\n);\nconst MockPanel: FC<any> = (props) => (\n  <PlaceholderClock color=\"orangered\">\n    <pre>{JSON.stringify(props, null, 2)}</pre>\n  </PlaceholderClock>\n);\nexport const MockPage: FC<any> = (props) => (\n  <PlaceholderClock color=\"cyan\">\n    <pre>{JSON.stringify(props, null, 2)}</pre>\n  </PlaceholderClock>\n);\n\nexport const mockProps: DesktopProps = {\n  Sidebar: MockSidebar,\n  Preview: MockPreview,\n  Panel: MockPanel,\n  Notifications: () => null,\n  pages: [],\n  options: {\n    isFullscreen: false,\n    showNav: true,\n    showPanel: true,\n    panelPosition: 'right',\n    showToolbar: true,\n    initialActive: 'canvas',\n    showTabs: true,\n  },\n  viewMode: 'story',\n  panelCount: 2,\n  width: 1112,\n  height: 834,\n};\n\nexport const realProps: DesktopProps = {\n  Sidebar: () => <Sidebar {...realSidebarProps} />,\n  Preview: () => <Preview {...previewProps} />,\n  Notifications: () => null,\n  Panel: () => (\n    <Panel\n      panels={panels}\n      actions={{ onSelect: () => {}, toggleVisibility: () => {}, togglePosition: () => {} }}\n      selectedPanel=\"test2\"\n      panelPosition=\"bottom\"\n      shortcuts={shortcuts}\n      absolute={false}\n    />\n  ),\n  pages: [],\n  options: {\n    isFullscreen: false,\n    showNav: true,\n    showPanel: true,\n    panelPosition: 'right',\n    showToolbar: true,\n    initialActive: 'canvas',\n    showTabs: true,\n  },\n  viewMode: 'story',\n  panelCount: 2,\n  width: 900,\n  height: 600,\n};\n"],"names":["global","Addon_TypesEnum","setInterval","shortcuts","panels","active","jsx","PlaceholderBlock","styled","color","PlaceholderClock","Component","count","interval","children","jsxs","MockSidebar","props","MockPreview","MockPanel","MockPage","mockProps"],"mappings":"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"}