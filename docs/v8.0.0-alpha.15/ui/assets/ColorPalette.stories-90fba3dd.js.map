{"version":3,"file":"ColorPalette.stories-90fba3dd.js","sources":["../../ui/blocks/src/components/ColorPalette.tsx"],"sourcesContent":["import type { FunctionComponent } from 'react';\nimport React from 'react';\nimport { transparentize } from 'polished';\nimport { styled } from '@storybook/theming';\nimport { ResetWrapper } from '@storybook/components';\n\nimport { getBlockBackgroundStyle } from './BlockBackgroundStyles';\n\nconst ItemTitle = styled.div(({ theme }) => ({\n  fontWeight: theme.typography.weight.bold,\n  color: theme.color.defaultText,\n}));\n\nconst ItemSubtitle = styled.div(({ theme }) => ({\n  color:\n    theme.base === 'light'\n      ? transparentize(0.2, theme.color.defaultText)\n      : transparentize(0.6, theme.color.defaultText),\n}));\n\nconst ItemDescription = styled.div({\n  flex: '0 0 30%',\n  lineHeight: '20px',\n  marginTop: 5,\n});\n\nconst SwatchLabel = styled.div(({ theme }) => ({\n  flex: 1,\n  textAlign: 'center',\n  fontFamily: theme.typography.fonts.mono,\n  fontSize: theme.typography.size.s1,\n  lineHeight: 1,\n  overflow: 'hidden',\n  color:\n    theme.base === 'light'\n      ? transparentize(0.4, theme.color.defaultText)\n      : transparentize(0.6, theme.color.defaultText),\n\n  '> div': {\n    display: 'inline-block',\n    overflow: 'hidden',\n    maxWidth: '100%',\n    textOverflow: 'ellipsis',\n  },\n\n  span: {\n    display: 'block',\n    marginTop: 2,\n  },\n}));\n\nconst SwatchLabels = styled.div({\n  display: 'flex',\n  flexDirection: 'row',\n});\n\ninterface SwatchProps {\n  background: string;\n}\n\nconst Swatch = styled.div<SwatchProps>(({ background }) => ({\n  position: 'relative',\n  flex: 1,\n\n  '&::before': {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    width: '100%',\n    height: '100%',\n    background,\n    content: '\"\"',\n  },\n}));\n\nconst SwatchColors = styled.div(({ theme }) => ({\n  ...getBlockBackgroundStyle(theme),\n  display: 'flex',\n  flexDirection: 'row',\n  height: 50,\n  marginBottom: 5,\n  overflow: 'hidden',\n  backgroundColor: 'white',\n  backgroundImage: `repeating-linear-gradient(-45deg, #ccc, #ccc 1px, #fff 1px, #fff 16px)`,\n  backgroundClip: 'padding-box',\n}));\n\nconst SwatchSpecimen = styled.div({\n  display: 'flex',\n  flexDirection: 'column',\n  flex: 1,\n  position: 'relative',\n  marginBottom: 30,\n});\n\nconst Swatches = styled.div({\n  flex: 1,\n  display: 'flex',\n  flexDirection: 'row',\n});\n\nconst Item = styled.div({\n  display: 'flex',\n  alignItems: 'flex-start',\n});\n\nconst ListName = styled.div({\n  flex: '0 0 30%',\n});\n\nconst ListSwatches = styled.div({\n  flex: 1,\n});\n\nconst ListHeading = styled.div(({ theme }) => ({\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  paddingBottom: 20,\n  fontWeight: theme.typography.weight.bold,\n  color:\n    theme.base === 'light'\n      ? transparentize(0.4, theme.color.defaultText)\n      : transparentize(0.6, theme.color.defaultText),\n}));\n\nconst List = styled.div(({ theme }) => ({\n  fontSize: theme.typography.size.s2,\n  lineHeight: `20px`,\n\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\ntype Colors = string[] | { [key: string]: string };\n\ninterface ColorItemProps {\n  title: string;\n  subtitle: string;\n  colors: Colors;\n}\n\nfunction renderSwatch(color: string, index: number) {\n  return <Swatch key={`${color}-${index}`} title={color} background={color} />;\n}\n\nfunction renderSwatchLabel(color: string, index: number, colorDescription?: string) {\n  return (\n    <SwatchLabel key={`${color}-${index}`} title={color}>\n      <div>\n        {color}\n        {colorDescription && <span>{colorDescription}</span>}\n      </div>\n    </SwatchLabel>\n  );\n}\n\nfunction renderSwatchSpecimen(colors: Colors) {\n  if (Array.isArray(colors)) {\n    return (\n      <SwatchSpecimen>\n        <SwatchColors>{colors.map((color, index) => renderSwatch(color, index))}</SwatchColors>\n        <SwatchLabels>{colors.map((color, index) => renderSwatchLabel(color, index))}</SwatchLabels>\n      </SwatchSpecimen>\n    );\n  }\n\n  const swatchElements = [];\n  const labelElements = [];\n\n  for (const colorKey in colors) {\n    const colorValue = colors[colorKey];\n    swatchElements.push(renderSwatch(colorValue, swatchElements.length));\n    labelElements.push(renderSwatchLabel(colorKey, labelElements.length, colorValue));\n  }\n\n  return (\n    <SwatchSpecimen>\n      <SwatchColors>{swatchElements}</SwatchColors>\n      <SwatchLabels>{labelElements}</SwatchLabels>\n    </SwatchSpecimen>\n  );\n}\n\n/**\n * A single color row your styleguide showing title, subtitle and one or more colors, used\n * as a child of `ColorPalette`.\n */\nexport const ColorItem: FunctionComponent<ColorItemProps> = ({ title, subtitle, colors }) => {\n  return (\n    <Item>\n      <ItemDescription>\n        <ItemTitle>{title}</ItemTitle>\n        <ItemSubtitle>{subtitle}</ItemSubtitle>\n      </ItemDescription>\n      <Swatches>{renderSwatchSpecimen(colors)}</Swatches>\n    </Item>\n  );\n};\n\ninterface ColorPaletteProps {\n  children?: React.ReactNode;\n}\n\n/**\n * Styleguide documentation for colors, including names, captions, and color swatches,\n * all specified as `ColorItem` children of this wrapper component.\n */\nexport const ColorPalette: FunctionComponent<ColorPaletteProps> = ({ children, ...props }) => (\n  <ResetWrapper>\n    <List {...props} className=\"docblock-colorpalette sb-unstyled\">\n      <ListHeading>\n        <ListName>Name</ListName>\n        <ListSwatches>Swatches</ListSwatches>\n      </ListHeading>\n      {children}\n    </List>\n  </ResetWrapper>\n);\n"],"names":["ItemTitle","styled","theme","ItemSubtitle","transparentize","ItemDescription","SwatchLabel","SwatchLabels","Swatch","background","SwatchColors","getBlockBackgroundStyle","SwatchSpecimen","Swatches","Item","ListName","ListSwatches","ListHeading","List","renderSwatch","color","index","React","renderSwatchLabel","colorDescription","renderSwatchSpecimen","colors","swatchElements","labelElements","colorKey","colorValue","ColorItem","title","subtitle","ColorPalette","children","props","ResetWrapper"],"mappings":"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"}