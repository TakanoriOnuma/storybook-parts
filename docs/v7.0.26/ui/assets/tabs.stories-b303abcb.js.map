{"version":3,"file":"tabs.stories-b303abcb.js","sources":["../../ui/components/src/bar/bar.tsx","../../ui/components/src/tabs/tabs.helpers.tsx","../../ui/components/src/tabs/tabs.hooks.tsx","../../ui/components/src/tabs/tabs.tsx"],"sourcesContent":["import type { ComponentProps, FC } from 'react';\nimport React, { Children } from 'react';\nimport { styled } from '@storybook/theming';\n\nimport { ScrollArea } from '../ScrollArea/ScrollArea';\n\nexport interface SideProps {\n  left?: boolean;\n  right?: boolean;\n  scrollable?: boolean;\n}\n\nexport const Side = styled.div<SideProps>(\n  {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    flexBasis: 'auto',\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  ({ scrollable }) => (scrollable ? { flexShrink: 0 } : {}),\n  ({ left }) =>\n    left\n      ? {\n          '& > *': {\n            marginLeft: 4,\n          },\n        }\n      : {},\n  ({ right }) =>\n    right\n      ? {\n          marginLeft: 30,\n          '& > *': {\n            marginRight: 4,\n          },\n        }\n      : {}\n);\nSide.displayName = 'Side';\n\nconst UnstyledBar: FC<ComponentProps<typeof ScrollArea> & { scrollable?: boolean }> = ({\n  children,\n  className,\n  scrollable,\n}) =>\n  scrollable ? (\n    <ScrollArea vertical={false} className={className}>\n      {children}\n    </ScrollArea>\n  ) : (\n    <div className={className}>{children}</div>\n  );\nexport const Bar = styled(UnstyledBar)<{ border?: boolean; scrollable?: boolean }>(\n  ({ theme, scrollable = true }) => ({\n    color: theme.barTextColor,\n    width: '100%',\n    height: 40,\n    flexShrink: 0,\n    overflow: scrollable ? 'auto' : 'hidden',\n    overflowY: 'hidden',\n  }),\n  ({ theme, border = false }) =>\n    border\n      ? {\n          boxShadow: `${theme.appBorderColor}  0 -1px 0 0 inset`,\n          background: theme.barBg,\n        }\n      : {}\n);\nBar.displayName = 'Bar';\n\nconst BarInner = styled.div<{ bgColor: string }>(({ bgColor }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  position: 'relative',\n  flexWrap: 'nowrap',\n  flexShrink: 0,\n  height: 40,\n  backgroundColor: bgColor || '',\n}));\n\nexport interface FlexBarProps extends ComponentProps<typeof Bar> {\n  border?: boolean;\n  backgroundColor?: string;\n}\n\nexport const FlexBar: FC<FlexBarProps> = ({ children, backgroundColor, ...rest }) => {\n  const [left, right] = Children.toArray(children);\n  return (\n    <Bar {...rest}>\n      <BarInner bgColor={backgroundColor}>\n        <Side scrollable={rest.scrollable} left>\n          {left}\n        </Side>\n        {right ? <Side right>{right}</Side> : null}\n      </BarInner>\n    </Bar>\n  );\n};\nFlexBar.displayName = 'FlexBar';\n","import { styled } from '@storybook/theming';\nimport type { ReactElement } from 'react';\nimport React, { Children } from 'react';\n\nexport interface VisuallyHiddenProps {\n  active?: boolean;\n}\n\nexport const VisuallyHidden = styled.div<VisuallyHiddenProps>(({ active }) =>\n  active ? { display: 'block' } : { display: 'none' }\n);\n\nexport const childrenToList = (children: any, selected: string) =>\n  Children.toArray(children).map(\n    ({ props: { title, id, color, children: childrenOfChild } }: ReactElement, index) => {\n      const content = Array.isArray(childrenOfChild) ? childrenOfChild[0] : childrenOfChild;\n      return {\n        active: selected ? id === selected : index === 0,\n        title,\n        id,\n        color,\n        render:\n          typeof content === 'function'\n            ? content\n            : ({ active, key }: any) => (\n                <VisuallyHidden key={key} active={active} role=\"tabpanel\">\n                  {content}\n                </VisuallyHidden>\n              ),\n      };\n    }\n  );\n\nexport type ChildrenList = ReturnType<typeof childrenToList>;\n","import React, { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { sanitize } from '@storybook/csf';\nimport { styled } from '@storybook/theming';\nimport useResizeObserver from 'use-resize-observer';\nimport { TabButton } from '../bar/button';\nimport { TooltipLinkList } from '../tooltip/TooltipLinkList';\nimport { WithTooltip } from '../tooltip/WithTooltip';\nimport type { ChildrenList } from './tabs.helpers';\nimport type { Link } from '../tooltip/TooltipLinkList';\n\nconst CollapseIcon = styled.span<{ isActive: boolean }>(({ theme, isActive }) => ({\n  display: 'inline-block',\n  width: 0,\n  height: 0,\n  marginLeft: 8,\n  color: isActive ? theme.color.secondary : theme.color.mediumdark,\n  borderRight: '3px solid transparent',\n  borderLeft: `3px solid transparent`,\n  borderTop: '3px solid',\n  transition: 'transform .1s ease-out',\n}));\n\nconst AddonButton = styled(TabButton)<{ preActive: boolean }>(({ active, theme, preActive }) => {\n  return `\n    color: ${preActive || active ? theme.color.secondary : theme.color.mediumdark};\n    &:hover {\n      color: ${theme.color.secondary};\n      .addon-collapsible-icon {\n        color: ${theme.color.secondary};\n      }\n    }\n  `;\n});\n\nexport function useList(list: ChildrenList) {\n  const tabBarRef = useRef<HTMLDivElement>();\n  const addonsRef = useRef<HTMLButtonElement>();\n  const tabRefs = useRef(new Map<string, HTMLButtonElement>());\n  const { width: tabBarWidth = 1 } = useResizeObserver<HTMLDivElement>({\n    ref: tabBarRef,\n  });\n\n  const [visibleList, setVisibleList] = useState(list);\n  const [invisibleList, setInvisibleList] = useState<ChildrenList>([]);\n  const previousList = useRef<ChildrenList>(list);\n\n  const AddonTab = useCallback(\n    ({\n      menuName,\n      actions,\n    }: {\n      menuName: string;\n      actions?: {\n        onSelect: (id: string) => void;\n      } & Record<string, any>;\n    }) => {\n      const isAddonsActive = invisibleList.some(({ active }) => active);\n      const [isTooltipVisible, setTooltipVisible] = useState(false);\n      return (\n        <>\n          <WithTooltip\n            interactive\n            visible={isTooltipVisible}\n            onVisibleChange={setTooltipVisible}\n            placement=\"bottom\"\n            delayHide={100}\n            tooltip={\n              <TooltipLinkList\n                links={invisibleList.map(({ title, id, color, active }) => {\n                  return {\n                    id,\n                    title,\n                    color,\n                    active,\n                    onClick: (e) => {\n                      e.preventDefault();\n                      actions.onSelect(id);\n                    },\n                  } as Link;\n                })}\n              />\n            }\n          >\n            <AddonButton\n              ref={addonsRef}\n              active={isAddonsActive}\n              preActive={isTooltipVisible}\n              style={{ visibility: invisibleList.length ? 'visible' : 'hidden' }}\n              aria-hidden={!invisibleList.length}\n              className=\"tabbutton\"\n              type=\"button\"\n              role=\"tab\"\n            >\n              {menuName}\n              <CollapseIcon\n                className=\"addon-collapsible-icon\"\n                isActive={isAddonsActive || isTooltipVisible}\n              />\n            </AddonButton>\n          </WithTooltip>\n          {invisibleList.map(({ title, id, color }, index) => {\n            const indexId = `index-${index}`;\n            return (\n              <TabButton\n                id={`tabbutton-${sanitize(id) ?? indexId}`}\n                style={{ visibility: 'hidden' }}\n                aria-hidden\n                tabIndex={-1}\n                ref={(ref: HTMLButtonElement) => {\n                  tabRefs.current.set(id, ref);\n                }}\n                className=\"tabbutton\"\n                type=\"button\"\n                key={id}\n                textColor={color}\n                role=\"tab\"\n              >\n                {title}\n              </TabButton>\n            );\n          })}\n        </>\n      );\n    },\n    [invisibleList]\n  );\n\n  const setTabLists = useCallback(() => {\n    // get x and width from tabBarRef div\n    if (!tabBarRef.current || !addonsRef.current) {\n      return;\n    }\n    const { x, width } = tabBarRef.current.getBoundingClientRect();\n    const { width: widthAddonsTab } = addonsRef.current.getBoundingClientRect();\n    const rightBorder = invisibleList.length ? x + width - widthAddonsTab : x + width;\n\n    const newVisibleList: ChildrenList = [];\n\n    let widthSum = 0;\n\n    const newInvisibleList = list.filter((item) => {\n      const { id } = item;\n      const tabButton = tabRefs.current.get(id);\n      const { width: tabWidth = 0 } = tabButton?.getBoundingClientRect() || {};\n\n      const crossBorder = x + widthSum + tabWidth > rightBorder;\n\n      //  `!tabButton` happens when new tab has just been added\n      if (!crossBorder || !tabButton) {\n        newVisibleList.push(item);\n      }\n\n      widthSum += tabWidth;\n\n      return crossBorder;\n    });\n\n    if (newVisibleList.length !== visibleList.length || previousList.current !== list) {\n      setVisibleList(newVisibleList);\n      setInvisibleList(newInvisibleList);\n      previousList.current = list;\n    }\n  }, [invisibleList.length, list, visibleList]);\n\n  useLayoutEffect(setTabLists, [setTabLists, tabBarWidth]);\n\n  return {\n    tabRefs,\n    addonsRef,\n    tabBarRef,\n    visibleList,\n    invisibleList,\n    AddonTab,\n  };\n}\n","import type { FC, MouseEvent, ReactNode } from 'react';\nimport React, { useMemo, Component, Fragment, memo } from 'react';\nimport { styled } from '@storybook/theming';\nimport { sanitize } from '@storybook/csf';\n\nimport { Placeholder } from '../placeholder/placeholder';\nimport { TabButton } from '../bar/button';\nimport { FlexBar } from '../bar/bar';\nimport type { ChildrenList } from './tabs.helpers';\nimport { childrenToList, VisuallyHidden } from './tabs.helpers';\nimport { useList } from './tabs.hooks';\n\nconst ignoreSsrWarning =\n  '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\n\nexport interface WrapperProps {\n  bordered?: boolean;\n  absolute?: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>(\n  ({ theme, bordered }) =>\n    bordered\n      ? {\n          backgroundClip: 'padding-box',\n          border: `1px solid ${theme.appBorderColor}`,\n          borderRadius: theme.appBorderRadius,\n          overflow: 'hidden',\n          boxSizing: 'border-box',\n        }\n      : {},\n  ({ absolute }) =>\n    absolute\n      ? {\n          width: '100%',\n          height: '100%',\n          boxSizing: 'border-box',\n          display: 'flex',\n          flexDirection: 'column',\n        }\n      : {\n          display: 'block',\n        }\n);\n\nexport const TabBar = styled.div({\n  overflow: 'hidden',\n\n  '&:first-of-type': {\n    marginLeft: -3,\n  },\n\n  whiteSpace: 'nowrap',\n  flexGrow: 1,\n});\n\nTabBar.displayName = 'TabBar';\n\nexport interface ContentProps {\n  absolute?: boolean;\n  bordered?: boolean;\n}\n\nconst Content = styled.div<ContentProps>(\n  {\n    display: 'block',\n    position: 'relative',\n  },\n  ({ theme }) => ({\n    fontSize: theme.typography.size.s2 - 1,\n    background: theme.background.content,\n  }),\n  ({ bordered, theme }) =>\n    bordered\n      ? {\n          borderRadius: `0 0 ${theme.appBorderRadius - 1}px ${theme.appBorderRadius - 1}px`,\n        }\n      : {},\n  ({ absolute, bordered }) =>\n    absolute\n      ? {\n          height: `calc(100% - ${bordered ? 42 : 40}px)`,\n\n          position: 'absolute',\n          left: 0 + (bordered ? 1 : 0),\n          right: 0 + (bordered ? 1 : 0),\n          bottom: 0 + (bordered ? 1 : 0),\n          top: 40 + (bordered ? 1 : 0),\n          overflow: 'auto',\n          [`& > *:first-child${ignoreSsrWarning}`]: {\n            position: 'absolute',\n            left: 0 + (bordered ? 1 : 0),\n            right: 0 + (bordered ? 1 : 0),\n            bottom: 0 + (bordered ? 1 : 0),\n            top: 0 + (bordered ? 1 : 0),\n            height: `calc(100% - ${bordered ? 2 : 0}px)`,\n            overflow: 'auto',\n          },\n        }\n      : {}\n);\n\nexport interface TabWrapperProps {\n  active: boolean;\n  render?: () => JSX.Element;\n  children?: ReactNode;\n}\n\nexport const TabWrapper: FC<TabWrapperProps> = ({ active, render, children }) => (\n  <VisuallyHidden active={active}>{render ? render() : children}</VisuallyHidden>\n);\n\nexport const panelProps = {};\n\nexport interface TabsProps {\n  children?: FuncChildren[] | ReactNode;\n  id?: string;\n  tools?: ReactNode;\n  selected?: string;\n  actions?: {\n    onSelect: (id: string) => void;\n  } & Record<string, any>;\n  backgroundColor?: string;\n  absolute?: boolean;\n  bordered?: boolean;\n  menuName?: string;\n}\n\nexport const Tabs: FC<TabsProps> = memo(\n  ({\n    children,\n    selected,\n    actions,\n    absolute,\n    bordered,\n    tools,\n    backgroundColor,\n    id: htmlId,\n    menuName,\n  }) => {\n    const list = useMemo<ChildrenList>(\n      () => childrenToList(children, selected),\n      [children, selected]\n    );\n\n    const { visibleList, tabBarRef, tabRefs, AddonTab } = useList(list);\n\n    return list.length ? (\n      <Wrapper absolute={absolute} bordered={bordered} id={htmlId}>\n        <FlexBar scrollable={false} border backgroundColor={backgroundColor}>\n          <TabBar style={{ whiteSpace: 'normal' }} ref={tabBarRef} role=\"tablist\">\n            {visibleList.map(({ title, id, active, color }, index) => {\n              const indexId = `index-${index}`;\n\n              return (\n                <TabButton\n                  id={`tabbutton-${sanitize(id) ?? indexId}`}\n                  ref={(ref: HTMLButtonElement) => {\n                    tabRefs.current.set(id, ref);\n                  }}\n                  className={`tabbutton ${active ? 'tabbutton-active' : ''}`}\n                  type=\"button\"\n                  key={id}\n                  active={active}\n                  textColor={color}\n                  onClick={(e: MouseEvent) => {\n                    e.preventDefault();\n                    actions.onSelect(id);\n                  }}\n                  role=\"tab\"\n                >\n                  {title}\n                </TabButton>\n              );\n            })}\n            <AddonTab menuName={menuName} actions={actions} />\n          </TabBar>\n          {tools}\n        </FlexBar>\n        <Content id=\"panel-tab-content\" bordered={bordered} absolute={absolute}>\n          {list.map(({ id, active, render }) => render({ key: id, active }))}\n        </Content>\n      </Wrapper>\n    ) : (\n      <Placeholder>\n        <Fragment key=\"title\">Nothing found</Fragment>\n      </Placeholder>\n    );\n  }\n);\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  id: null,\n  children: null,\n  tools: null,\n  selected: null,\n  absolute: false,\n  bordered: false,\n  menuName: 'Tabs',\n};\n\ntype FuncChildren = ({ active }: { active: boolean }) => JSX.Element;\n\nexport interface TabsStateProps {\n  children: FuncChildren[] | ReactNode;\n  initial: string;\n  absolute: boolean;\n  bordered: boolean;\n  backgroundColor: string;\n  menuName: string;\n}\n\nexport interface TabsStateState {\n  selected: string;\n}\n\nexport class TabsState extends Component<TabsStateProps, TabsStateState> {\n  static defaultProps: TabsStateProps = {\n    children: [],\n    initial: null,\n    absolute: false,\n    bordered: false,\n    backgroundColor: '',\n    menuName: undefined,\n  };\n\n  constructor(props: TabsStateProps) {\n    super(props);\n\n    this.state = {\n      selected: props.initial,\n    };\n  }\n\n  handlers = {\n    onSelect: (id: string) => this.setState({ selected: id }),\n  };\n\n  render() {\n    const { bordered = false, absolute = false, children, backgroundColor, menuName } = this.props;\n    const { selected } = this.state;\n    return (\n      <Tabs\n        bordered={bordered}\n        absolute={absolute}\n        selected={selected}\n        backgroundColor={backgroundColor}\n        menuName={menuName}\n        actions={this.handlers}\n      >\n        {children}\n      </Tabs>\n    );\n  }\n}\n"],"names":["Side","styled","scrollable","left","right","UnstyledBar","children","className","jsx","ScrollArea","Bar","theme","border","BarInner","bgColor","FlexBar","backgroundColor","rest","Children","jsxs","VisuallyHidden","active","childrenToList","selected","title","id","color","childrenOfChild","index","content","key","CollapseIcon","isActive","AddonButton","TabButton","preActive","useList","list","tabBarRef","useRef","addonsRef","tabRefs","tabBarWidth","useResizeObserver","visibleList","setVisibleList","useState","invisibleList","setInvisibleList","previousList","AddonTab","useCallback","menuName","actions","isAddonsActive","isTooltipVisible","setTooltipVisible","Fragment","WithTooltip","TooltipLinkList","e","indexId","sanitize","ref","setTabLists","x","width","widthAddonsTab","rightBorder","newVisibleList","widthSum","newInvisibleList","item","tabButton","tabWidth","crossBorder","useLayoutEffect","ignoreSsrWarning","Wrapper","bordered","absolute","TabBar","Content","TabWrapper","render","Tabs","memo","tools","htmlId","useMemo","Placeholder","TabsState","Component","props"],"mappings":"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"}