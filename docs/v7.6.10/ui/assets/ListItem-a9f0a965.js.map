{"version":3,"file":"ListItem-a9f0a965.js","sources":["../../ui/components/src/components/tooltip/ListItem.tsx"],"sourcesContent":["import type { FC, ReactNode, ComponentProps, ReactElement } from 'react';\nimport React from 'react';\nimport { styled } from '@storybook/theming';\nimport memoize from 'memoizerific';\nimport { transparentize } from 'polished';\nimport { Icons } from '../icon/icon';\nimport { icons } from '../icon/icons';\n\nexport interface TitleProps {\n  children?: ReactNode;\n  active?: boolean;\n  loading?: boolean;\n  disabled?: boolean;\n}\nconst Title = styled(({ active, loading, disabled, ...rest }: TitleProps) => <span {...rest} />)<{\n  active: boolean;\n  loading: boolean;\n  disabled: boolean;\n}>(\n  ({ theme }) => ({\n    color: theme.color.defaultText,\n    // Previously was theme.typography.weight.normal but this weight does not exists in Theme\n    fontWeight: theme.typography.weight.regular,\n  }),\n  ({ active, theme }) =>\n    active\n      ? {\n          color: theme.color.secondary,\n          fontWeight: theme.typography.weight.bold,\n        }\n      : {},\n  ({ loading, theme }) =>\n    loading\n      ? {\n          display: 'inline-block',\n          flex: 'none',\n          ...theme.animation.inlineGlow,\n        }\n      : {},\n  ({ disabled, theme }) =>\n    disabled\n      ? {\n          color: transparentize(0.7, theme.color.defaultText),\n        }\n      : {}\n);\n\nexport interface RightProps {\n  active?: boolean;\n}\n\nconst Right = styled.span<RightProps>({\n  display: 'flex',\n  '& svg': {\n    height: 12,\n    width: 12,\n    margin: '3px 0',\n    verticalAlign: 'top',\n  },\n  '& path': {\n    fill: 'inherit',\n  },\n});\n\nconst Center = styled.span<{ isIndented: boolean }>(\n  {\n    flex: 1,\n    textAlign: 'left',\n    display: 'flex',\n    flexDirection: 'column',\n  },\n  ({ isIndented }) => (isIndented ? { marginLeft: 24 } : {})\n);\n\nexport interface CenterTextProps {\n  active?: boolean;\n  disabled?: boolean;\n}\n\nconst CenterText = styled.span<CenterTextProps>(\n  ({ theme }) => ({\n    fontSize: '11px',\n    lineHeight: '14px',\n  }),\n  ({ active, theme }) =>\n    active\n      ? {\n          color: theme.color.secondary,\n        }\n      : {},\n  ({ theme, disabled }) =>\n    disabled\n      ? {\n          color: theme.textMutedColor,\n        }\n      : {}\n);\n\nexport interface LeftProps {\n  active?: boolean;\n}\n\nconst Left = styled.span<LeftProps>(\n  ({ active, theme }) =>\n    active\n      ? {\n          '& svg': {\n            opacity: 1,\n          },\n          '& svg path:not([fill])': {\n            fill: theme.color.secondary,\n          },\n        }\n      : {},\n  () => ({\n    display: 'flex',\n    maxWidth: 14,\n  })\n);\n\nexport interface ItemProps {\n  disabled?: boolean;\n}\n\nconst Item = styled.a<ItemProps>(\n  ({ theme }) => ({\n    fontSize: theme.typography.size.s1,\n    transition: 'all 150ms ease-out',\n    color: theme.color.dark,\n    textDecoration: 'none',\n    cursor: 'pointer',\n    justifyContent: 'space-between',\n\n    lineHeight: '18px',\n    padding: '7px 10px',\n    display: 'flex',\n    alignItems: 'center',\n\n    '& > * + *': {\n      paddingLeft: 10,\n    },\n\n    '&:hover': {\n      background: theme.background.hoverable,\n    },\n    '&:hover svg': {\n      opacity: 1,\n    },\n  }),\n  ({ disabled }) =>\n    disabled\n      ? {\n          cursor: 'not-allowed',\n        }\n      : {}\n);\n\nconst getItemProps = memoize(100)((onClick, href, LinkWrapper) => {\n  const result = {};\n\n  if (onClick) {\n    Object.assign(result, {\n      onClick,\n    });\n  }\n  if (href) {\n    Object.assign(result, {\n      href,\n    });\n  }\n  if (LinkWrapper && href) {\n    Object.assign(result, {\n      to: href,\n      as: LinkWrapper,\n    });\n  }\n  return result;\n});\n\nexport type LinkWrapperType = FC<any>;\n\nexport interface ListItemProps extends Omit<ComponentProps<typeof Item>, 'href' | 'title'> {\n  loading?: boolean;\n  /**\n   * @deprecated This property will be removed in SB 8.0\n   * Use `icon` property instead.\n   */\n  left?: ReactNode;\n  title?: ReactNode;\n  center?: ReactNode;\n  right?: ReactNode;\n  icon?: keyof typeof icons | ReactElement;\n  active?: boolean;\n  disabled?: boolean;\n  href?: string;\n  LinkWrapper?: LinkWrapperType;\n  isIndented?: boolean;\n}\n\nconst ListItem: FC<ListItemProps> = ({\n  loading,\n  left,\n  title,\n  center,\n  right,\n  icon,\n  active,\n  disabled,\n  isIndented,\n  href,\n  onClick,\n  LinkWrapper,\n  ...rest\n}) => {\n  const itemProps = getItemProps(onClick, href, LinkWrapper);\n  const commonProps = { active, disabled };\n\n  const isStorybookIcon = typeof icon === 'string' && icons[icon];\n\n  return (\n    <Item {...commonProps} {...rest} {...itemProps}>\n      {icon ? (\n        <Left {...commonProps}>{isStorybookIcon ? <Icons icon={icon} /> : icon}</Left>\n      ) : (\n        left && <Left {...commonProps}>{left}</Left>\n      )}\n      {title || center ? (\n        <Center isIndented={!left && !icon && isIndented}>\n          {title && (\n            <Title {...commonProps} loading={loading}>\n              {title}\n            </Title>\n          )}\n          {center && <CenterText {...commonProps}>{center}</CenterText>}\n        </Center>\n      ) : null}\n      {right && <Right {...commonProps}>{right}</Right>}\n    </Item>\n  );\n};\n\nListItem.defaultProps = {\n  loading: false,\n  left: null,\n  title: <span>Loading state</span>,\n  center: null,\n  right: null,\n  active: false,\n  disabled: false,\n  href: null,\n  LinkWrapper: null,\n  onClick: null,\n};\n\nexport default ListItem;\n"],"names":["Title","styled","active","loading","disabled","rest","jsx","theme","transparentize","Right","Center","isIndented","CenterText","Left","Item","getItemProps","memoize","onClick","href","LinkWrapper","result","ListItem","left","title","center","right","icon","itemProps","commonProps","isStorybookIcon","icons","jsxs","Icons","ListItem$1"],"mappings":"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"}