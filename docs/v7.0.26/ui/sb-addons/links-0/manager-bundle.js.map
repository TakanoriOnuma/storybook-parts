{
  "version": 3,
  "sources": ["../../../addons/links/dist/chunk-VMPRUIQZ.mjs", "global-externals:@storybook/manager-api", "../../../addons/links/dist/manager.mjs"],
  "sourcesContent": ["// src/constants.ts\nvar ADDON_ID = \"storybook/links\";\nvar PARAM_KEY = `links`;\nvar constants_default = {\n  NAVIGATE: `${ADDON_ID}/navigate`,\n  REQUEST: `${ADDON_ID}/request`,\n  RECEIVE: `${ADDON_ID}/receive`\n};\n\nexport { ADDON_ID, PARAM_KEY, constants_default };\n", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "import { ADDON_ID, constants_default } from './chunk-VMPRUIQZ.mjs';\nimport { addons } from '@storybook/manager-api';\n\naddons.register(ADDON_ID, (api) => {\n  const channel = addons.getChannel();\n  channel.on(constants_default.REQUEST, ({ kind, name }) => {\n    const id = api.storyId(kind, name);\n    api.emit(constants_default.RECEIVE, id);\n  });\n});\n"],
  "mappings": ";AACA,IAAIA,EAAW,kBAEf,IAAIC,EAAoB,CACtB,SAAU,GAAGC,aACb,QAAS,GAAGA,YACZ,QAAS,GAAGA,WACd,ECPA,IAAOC,EAAQ,iBACT,CAAE,WAAAC,EAAY,SAAAC,EAAU,eAAAC,EAAgB,SAAAC,EAAU,OAAAC,EAAQ,kBAAAC,EAAmB,iBAAAC,EAAkB,oBAAAC,EAAqB,qBAAAC,EAAsB,gBAAAC,EAAiB,UAAAC,EAAW,gBAAAC,EAAiB,YAAAC,EAAa,MAAAC,EAAO,YAAAC,EAAa,kBAAAC,EAAmB,wBAAAC,EAAyB,sBAAAC,EAAuB,MAAAC,EAAO,cAAAC,EAAe,YAAAC,EAAa,QAAAC,EAAS,WAAAC,EAAY,eAAAC,EAAgB,WAAAC,EAAY,aAAAC,EAAc,eAAAC,EAAgB,iBAAAC,EAAkB,gBAAAC,EAAiB,kBAAAC,CAAkB,EAAI,iBCE5cC,EAAO,SAASC,EAAWC,GAAQ,CACjBF,EAAO,WAAW,EAC1B,GAAGG,EAAkB,QAAS,CAAC,CAAE,KAAAC,EAAM,KAAAC,CAAK,IAAM,CACxD,IAAMC,EAAKJ,EAAI,QAAQE,EAAMC,CAAI,EACjCH,EAAI,KAAKC,EAAkB,QAASG,CAAE,CACxC,CAAC,CACH,CAAC",
  "names": ["ADDON_ID", "constants_default", "ADDON_ID", "manager_api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "addons", "ADDON_ID", "api", "constants_default", "kind", "name", "id"]
}
