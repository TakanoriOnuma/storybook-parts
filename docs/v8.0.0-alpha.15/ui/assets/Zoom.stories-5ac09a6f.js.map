{"version":3,"file":"Zoom.stories-5ac09a6f.js","sources":["../../ui/components/src/components/Zoom/ZoomElement.tsx","../../ui/components/src/components/Zoom/ZoomIFrame.tsx","../../ui/components/src/components/Zoom/Zoom.tsx"],"sourcesContent":["import type { ReactElement } from 'react';\nimport React, { useEffect, useRef, useState, useCallback } from 'react';\nimport type { ResizeHandler } from 'use-resize-observer';\nimport useResizeObserver from 'use-resize-observer';\nimport { styled } from '@storybook/theming';\n\nconst ZoomElementWrapper = styled.div<{ scale: number; elementHeight: number }>(\n  ({ scale = 1, elementHeight }) => ({\n    height: elementHeight || 'auto',\n    transformOrigin: 'top left',\n    transform: `scale(${1 / scale})`,\n  })\n);\n\ntype ZoomProps = {\n  scale: number;\n  children: ReactElement | ReactElement[];\n};\n\nexport function ZoomElement({ scale, children }: ZoomProps) {\n  const componentWrapperRef = useRef<HTMLDivElement>(null);\n  const [elementHeight, setElementHeight] = useState(0);\n\n  const onResize = useCallback<ResizeHandler>(\n    ({ height }) => {\n      if (height) {\n        setElementHeight(height / scale);\n      }\n    },\n    [scale]\n  );\n\n  useEffect(() => {\n    if (componentWrapperRef.current) {\n      setElementHeight(componentWrapperRef.current.getBoundingClientRect().height);\n    }\n  }, [scale]);\n\n  useResizeObserver({\n    ref: componentWrapperRef,\n    onResize,\n  });\n\n  return (\n    <ZoomElementWrapper scale={scale} elementHeight={elementHeight}>\n      <div ref={componentWrapperRef} className=\"innerZoomElementWrapper\">\n        {children}\n      </div>\n    </ZoomElementWrapper>\n  );\n}\n","import type { RefObject, ReactElement } from 'react';\nimport React, { Component } from 'react';\n\nexport type IZoomIFrameProps = {\n  scale: number;\n  children: ReactElement<HTMLIFrameElement>;\n  iFrameRef: RefObject<HTMLIFrameElement>;\n  active?: boolean;\n};\n\nexport class ZoomIFrame extends Component<IZoomIFrameProps> {\n  iframe: HTMLIFrameElement = null;\n\n  componentDidMount() {\n    const { iFrameRef } = this.props;\n    this.iframe = iFrameRef.current;\n  }\n\n  shouldComponentUpdate(nextProps: IZoomIFrameProps) {\n    const { scale, active } = this.props;\n\n    if (scale !== nextProps.scale) {\n      this.setIframeInnerZoom(nextProps.scale);\n    }\n\n    if (active !== nextProps.active) {\n      this.iframe.setAttribute('data-is-storybook', nextProps.active ? 'true' : 'false');\n    }\n\n    // this component renders an iframe, which gets updates via post-messages\n    // never update this component, it will cause the iframe to refresh\n    // the only exception is when the url changes, which happens when the version changes\n    return nextProps.children.props.src !== this.props.children.props.src;\n  }\n\n  setIframeInnerZoom(scale: number) {\n    try {\n      Object.assign(this.iframe.contentDocument.body.style, {\n        width: `${scale * 100}%`,\n        height: `${scale * 100}%`,\n        transform: `scale(${1 / scale})`,\n        transformOrigin: 'top left',\n      });\n    } catch (e) {\n      this.setIframeZoom(scale);\n    }\n  }\n\n  setIframeZoom(scale: number) {\n    Object.assign(this.iframe.style, {\n      width: `${scale * 100}%`,\n      height: `${scale * 100}%`,\n      transform: `scale(${1 / scale})`,\n      transformOrigin: 'top left',\n    });\n  }\n\n  render() {\n    const { children } = this.props;\n    return <>{children}</>;\n  }\n}\n","import { ZoomElement } from './ZoomElement';\nimport { ZoomIFrame } from './ZoomIFrame';\n\nexport const Zoom = {\n  Element: ZoomElement,\n  IFrame: ZoomIFrame,\n};\n"],"names":["ZoomElementWrapper","styled","scale","elementHeight","ZoomElement","children","componentWrapperRef","useRef","setElementHeight","useState","onResize","useCallback","height","useEffect","useResizeObserver","React","ZoomIFrame","Component","iFrameRef","nextProps","active","Zoom"],"mappings":"oIAMA,MAAAA,EAAAC,EAAA,IACA,CAAA,CAAA,MAAAC,EAAA,EAAA,cAAAC,MAAA,CACA,OAAAA,GAAA,OACA,gBAAA,WACA,UAAA,SAAA,EAAAD,CAAA,GAAA,EAEA,EAOA,SAAAE,EAAA,CAAA,MAAAF,EAAA,SAAAG,GAAA,CACA,MAAAC,EAAAC,SAAA,IAAA,EACA,CAAAJ,EAAAK,CAAA,EAAAC,WAAA,CAAA,EAEAC,EAAAC,EAAA,YACA,CAAA,CAAA,OAAAC,CAAA,IAAA,CACAA,GACAJ,EAAAI,EAAAV,CAAA,CAEA,EACA,CAAAA,CAAA,CAAA,EAGAW,OAAAA,EAAAA,UAAA,IAAA,CACAP,EAAA,SACAE,EAAAF,EAAA,QAAA,sBAAA,EAAA,MAAA,CACA,EACA,CAAAJ,CAAA,CAAA,EAEAY,EAAA,CACA,IAAAR,EACA,SAAAI,CAAA,CACA,EAGAK,EAAA,cAAAf,EAAA,CAAA,MAAAE,EAAA,cAAAC,CACA,EAAAY,EAAA,cAAA,MAAA,CAAA,IAAAT,EAAA,UAAA,yBACA,EAAAD,CACA,CACA,CAEA,8UCxCA,MAAAW,UAAAC,EAAAA,SAAA,CAAA,aAAA,CAAA,MAAA,GAAA,SAAA,EACA,KAAA,OAAA,IAAA,CAEA,mBAAA,CACA,KAAA,CAAA,UAAAC,CAAA,EAAA,KAAA,MACA,KAAA,OAAAA,EAAA,OACA,CAEA,sBAAAC,EAAA,CACA,KAAA,CAAA,MAAAjB,EAAA,OAAAkB,GAAA,KAAA,MAEA,OAAAlB,IAAAiB,EAAA,OACA,KAAA,mBAAAA,EAAA,KAAA,EAGAC,IAAAD,EAAA,QACA,KAAA,OAAA,aAAA,oBAAAA,EAAA,OAAA,OAAA,OAAA,EAMAA,EAAA,SAAA,MAAA,MAAA,KAAA,MAAA,SAAA,MAAA,GACA,CAEA,mBAAAjB,EAAA,CACA,GAAA,CACA,OAAA,OAAA,KAAA,OAAA,gBAAA,KAAA,MAAA,CACA,MAAA,GAAAA,EAAA,GAAA,IACA,OAAA,GAAAA,EAAA,GAAA,IACA,UAAA,SAAA,EAAAA,CAAA,IACA,gBAAA,UAAA,CACA,OACA,CACA,KAAA,cAAAA,CAAA,CACA,CACA,CAEA,cAAAA,EAAA,CACA,OAAA,OAAA,KAAA,OAAA,MAAA,CACA,MAAA,GAAAA,EAAA,GAAA,IACA,OAAA,GAAAA,EAAA,GAAA,IACA,UAAA,SAAA,EAAAA,CAAA,IACA,gBAAA,UAAA,CACA,CACA,CAEA,QAAA,CACA,KAAA,CAAA,SAAAG,CAAA,EAAA,KAAA,MACA,uCAAAA,CAAA,CACA,CACA,gtBC1DO,MAAMgB,EAAO,CAClB,QAASjB,EACT,OAAQY,CACV;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}