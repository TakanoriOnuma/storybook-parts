{"version":3,"file":"Source-d9d734f3.js","sources":["../../ui/blocks/src/components/Source.tsx"],"sourcesContent":["import type { ComponentProps, FunctionComponent } from 'react';\nimport React from 'react';\nimport { styled, ThemeProvider, convert, themes, ignoreSsrWarning } from '@storybook/theming';\nimport { SyntaxHighlighter } from '@storybook/components';\n\nimport { EmptyBlock } from './EmptyBlock';\n\nconst StyledSyntaxHighlighter: typeof SyntaxHighlighter = styled(SyntaxHighlighter)(\n  ({ theme }) => ({\n    // DocBlocks-specific styling and overrides\n    fontSize: `${theme.typography.size.s2 - 1}px`,\n    lineHeight: '19px',\n    margin: '25px 0 40px',\n    borderRadius: theme.appBorderRadius,\n    boxShadow:\n      theme.base === 'light'\n        ? 'rgba(0, 0, 0, 0.10) 0 1px 3px 0'\n        : 'rgba(0, 0, 0, 0.20) 0 2px 5px 0',\n    'pre.prismjs': {\n      padding: 20,\n      background: 'inherit',\n    },\n  })\n);\n\nexport enum SourceError {\n  NO_STORY = 'There\\u2019s no story here.',\n  SOURCE_UNAVAILABLE = 'Oh no! The source is not available.',\n}\n\nexport interface SourceCodeProps {\n  /**\n   * The language the syntax highlighter uses for your story’s code\n   */\n  language?: string;\n  /**\n   * Use this to override the content of the source block.\n   */\n  code?: string;\n  /**\n   * The (prettier) formatter the syntax highlighter uses for your story’s code.\n   */\n  format?: ComponentProps<typeof SyntaxHighlighter>['format'];\n  /**\n   * Display the source snippet in a dark mode.\n   */\n  dark?: boolean;\n}\n\nexport interface SourceProps extends SourceCodeProps {\n  isLoading?: boolean;\n  error?: SourceError;\n}\n\nconst SourceSkeletonWrapper = styled.div(({ theme }) => ({\n  background: theme.background.content,\n  borderRadius: theme.appBorderRadius,\n  border: `1px solid ${theme.appBorderColor}`,\n  boxShadow:\n    theme.base === 'light' ? 'rgba(0, 0, 0, 0.10) 0 1px 3px 0' : 'rgba(0, 0, 0, 0.20) 0 2px 5px 0',\n  margin: '25px 0 40px',\n  padding: '20px 20px 20px 22px',\n}));\n\nconst SourceSkeletonPlaceholder = styled.div(({ theme }) => ({\n  animation: `${theme.animation.glow} 1.5s ease-in-out infinite`,\n  background: theme.appBorderColor,\n  height: 17,\n  marginTop: 1,\n  width: '60%',\n\n  [`&:first-child${ignoreSsrWarning}`]: {\n    margin: 0,\n  },\n}));\n\nconst SourceSkeleton = () => (\n  <SourceSkeletonWrapper>\n    <SourceSkeletonPlaceholder />\n    <SourceSkeletonPlaceholder style={{ width: '80%' }} />\n    <SourceSkeletonPlaceholder style={{ width: '30%' }} />\n    <SourceSkeletonPlaceholder style={{ width: '80%' }} />\n  </SourceSkeletonWrapper>\n);\n\n/**\n * Syntax-highlighted source code for a component (or anything!)\n */\nconst Source: FunctionComponent<SourceProps> = ({\n  isLoading,\n  error,\n  language,\n  code,\n  dark,\n  format,\n  ...rest\n}) => {\n  if (isLoading) {\n    return <SourceSkeleton />;\n  }\n  if (error) {\n    return <EmptyBlock>{error}</EmptyBlock>;\n  }\n\n  const syntaxHighlighter = (\n    <StyledSyntaxHighlighter\n      bordered\n      copyable\n      format={format}\n      language={language}\n      className=\"docblock-source sb-unstyled\"\n      {...rest}\n    >\n      {code}\n    </StyledSyntaxHighlighter>\n  );\n  if (typeof dark === 'undefined') {\n    return syntaxHighlighter;\n  }\n  const overrideTheme = dark ? themes.dark : themes.light;\n  return <ThemeProvider theme={convert(overrideTheme)}>{syntaxHighlighter}</ThemeProvider>;\n};\n\nSource.defaultProps = {\n  format: false,\n};\nexport { Source, StyledSyntaxHighlighter };\n"],"names":["StyledSyntaxHighlighter","styled","SyntaxHighlighter","theme","SourceError","SourceError2","SourceSkeletonWrapper","SourceSkeletonPlaceholder","ignoreSsrWarning","SourceSkeleton","jsxs","jsx","Source","isLoading","error","language","code","dark","format","rest","EmptyBlock","syntaxHighlighter","overrideTheme","themes","ThemeProvider","convert"],"mappings":"8MAOA,MAAAA,EAAAC,EAAAC,CAAA,EAAkF,CAAA,CAAA,MAAAC,CAAA,KAAA,CAChE,SAAA,GAAAA,EAAA,WAAA,KAAA,GAAA,MAE0B,WAAA,OAC5B,OAAA,cACJ,aAAAA,EAAA,gBACY,UAAAA,EAAA,OAAA,QAAA,kCAAA,kCAId,cAAA,CACS,QAAA,GACJ,WAAA,SACG,CACd,EAEJ,EAEO,IAAAC,GAAAC,IACLA,EAAA,SAAA,yBACAA,EAAA,mBAAA,sCAFUA,IAAAD,GAAA,CAAA,CAAA,EA6BZ,MAAAE,EAAAL,EAAA,IAAA,CAAA,CAAA,MAAAE,CAAA,KAAA,CAAyD,WAAAA,EAAA,WAAA,QAC1B,aAAAA,EAAA,gBACT,OAAA,aAAAA,EAAA,iBACO,UAAAA,EAAA,OAAA,QAAA,kCAAA,kCAEoC,OAAA,cACvD,QAAA,qBAEV,EAAA,EAEAI,EAAAN,EAAA,IAAA,CAAA,CAAA,MAAAE,CAAA,KAAA,CAA6D,UAAA,GAAAA,EAAA,UAAA,iCAC7B,WAAAA,EAAA,eACZ,OAAA,GACV,UAAA,EACG,MAAA,MACJ,CAAA,gBAAAK,GAAA,EAAA,CAE+B,OAAA,CAC5B,CAEZ,EAAA,EAEAC,EAAA,IAAAC,EAAAJ,EAAA,CAAA,SAAA,CAEIK,EAAAJ,EAAA,EAAA,EAA2BI,EAAAJ,EAAA,CAAA,MAAA,CAAA,MAAA,KAAA,EAAA,EACyBI,EAAAJ,EAAA,CAAA,MAAA,CAAA,MAAA,KAAA,EAAA,EACAI,EAAAJ,EAAA,CAAA,MAAA,CAAA,MAAA,KAAA,EAAA,CACA,CAAA,CAAA,EAOxDK,EAAA,CAAA,CAAgD,UAAAC,EAC9C,MAAAC,EACA,SAAAC,EACA,KAAAC,EACA,KAAAC,EACA,OAAAC,EACA,GAAAC,CAEF,IAAA,CACE,GAAAN,EACE,OAAAF,EAAAF,EAAA,CAAA,CAAA,EAEF,GAAAK,EACE,OAAAH,EAAAS,EAAA,CAAA,SAAAN,CAAA,CAAA,EAGF,MAAAO,EAAAV,EACEX,EAAC,CAAA,SAAA,GACS,SAAA,GACA,OAAAkB,EACR,SAAAH,EACA,UAAA,8BACU,GAAAI,EACN,SAAAH,CAEH,CAAA,EAGL,GAAA,OAAAC,EAAA,IACE,OAAAI,EAEF,MAAAC,EAAAL,EAAAM,EAAA,KAAAA,EAAA,MACA,OAAAZ,EAAAa,EAAA,CAAA,MAAAC,EAAAH,CAAA,EAAA,SAAAD,CAAA,CAAA,CACF,EAEAT,EAAA,aAAA,CAAsB,OAAA,EAEtB"}