{"version":3,"file":"tabs.stories-7ceb9218.js","sources":["../../ui/components/src/components/bar/bar.tsx","../../ui/components/src/components/tabs/tabs.helpers.tsx","../../ui/components/src/components/tabs/tabs.hooks.tsx","../../ui/components/src/components/tabs/tabs.tsx"],"sourcesContent":["import type { ComponentProps, FC } from 'react';\nimport React, { Children } from 'react';\nimport { styled } from '@storybook/theming';\n\nimport { ScrollArea } from '../ScrollArea/ScrollArea';\n\nexport interface SideProps {\n  left?: boolean;\n  right?: boolean;\n  scrollable?: boolean;\n}\n\nexport const Side = styled.div<SideProps>(\n  {\n    display: 'flex',\n    whiteSpace: 'nowrap',\n    flexBasis: 'auto',\n    marginLeft: 3,\n    marginRight: 3,\n  },\n  ({ scrollable }) => (scrollable ? { flexShrink: 0 } : {}),\n  ({ left }) =>\n    left\n      ? {\n          '& > *': {\n            marginLeft: 4,\n          },\n        }\n      : {},\n  ({ right }) =>\n    right\n      ? {\n          marginLeft: 30,\n          '& > *': {\n            marginRight: 4,\n          },\n        }\n      : {}\n);\nSide.displayName = 'Side';\n\nconst UnstyledBar: FC<ComponentProps<typeof ScrollArea> & { scrollable?: boolean }> = ({\n  children,\n  className,\n  scrollable,\n}) =>\n  scrollable ? (\n    <ScrollArea vertical={false} className={className}>\n      {children}\n    </ScrollArea>\n  ) : (\n    <div className={className}>{children}</div>\n  );\nexport const Bar = styled(UnstyledBar)<{ border?: boolean; scrollable?: boolean }>(\n  ({ theme, scrollable = true }) => ({\n    color: theme.barTextColor,\n    width: '100%',\n    height: 40,\n    flexShrink: 0,\n    overflow: scrollable ? 'auto' : 'hidden',\n    overflowY: 'hidden',\n  }),\n  ({ theme, border = false }) =>\n    border\n      ? {\n          boxShadow: `${theme.appBorderColor}  0 -1px 0 0 inset`,\n          background: theme.barBg,\n        }\n      : {}\n);\nBar.displayName = 'Bar';\n\nconst BarInner = styled.div<{ bgColor: string }>(({ bgColor }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  position: 'relative',\n  flexWrap: 'nowrap',\n  flexShrink: 0,\n  height: 40,\n  backgroundColor: bgColor || '',\n}));\n\nexport interface FlexBarProps extends ComponentProps<typeof Bar> {\n  border?: boolean;\n  backgroundColor?: string;\n}\n\nexport const FlexBar: FC<FlexBarProps> = ({ children, backgroundColor, ...rest }) => {\n  const [left, right] = Children.toArray(children);\n  return (\n    <Bar {...rest}>\n      <BarInner bgColor={backgroundColor}>\n        <Side scrollable={rest.scrollable} left>\n          {left}\n        </Side>\n        {right ? <Side right>{right}</Side> : null}\n      </BarInner>\n    </Bar>\n  );\n};\nFlexBar.displayName = 'FlexBar';\n","import { styled } from '@storybook/theming';\nimport type { FC, ReactChild, ReactElement, ReactNode } from 'react';\nimport React, { Children } from 'react';\nimport type { Addon_RenderOptions } from '@storybook/types';\nimport type { TabsProps } from './tabs';\n\nexport interface VisuallyHiddenProps {\n  active?: boolean;\n}\n\nexport const VisuallyHidden = styled.div<VisuallyHiddenProps>(({ active }) =>\n  active ? { display: 'block' } : { display: 'none' }\n);\n\nexport const childrenToList = (children: TabsProps['children']) =>\n  Children.toArray(children).map(\n    ({\n      props: { title, id, color, children: childrenOfChild },\n    }: ReactElement<{\n      children: FC<Addon_RenderOptions> | ReactChild | null;\n      title: ReactChild | null | FC;\n      id: string;\n      color?: string;\n    }>) => {\n      const content: FC<Addon_RenderOptions> | ReactNode = Array.isArray(childrenOfChild)\n        ? childrenOfChild[0]\n        : childrenOfChild;\n\n      const render: FC<Addon_RenderOptions> = (\n        typeof content === 'function'\n          ? content\n          : ({ active }) => (\n              <VisuallyHidden active={active} role=\"tabpanel\">\n                {content}\n              </VisuallyHidden>\n            )\n      ) as FC<Addon_RenderOptions>;\n      return {\n        title,\n        id,\n        ...(color ? { color } : {}),\n        render,\n      };\n    }\n  );\n\nexport type ChildrenList = ReturnType<typeof childrenToList>;\nexport type ChildrenListComplete = Array<\n  ReturnType<typeof childrenToList>[0] & {\n    active: boolean;\n  }\n>;\n","import React, { useCallback, useLayoutEffect, useRef, useState } from 'react';\nimport { sanitize } from '@storybook/csf';\nimport { styled } from '@storybook/theming';\nimport useResizeObserver from 'use-resize-observer';\nimport { TabButton } from '../bar/button';\nimport { TooltipLinkList } from '../tooltip/TooltipLinkList';\nimport { WithTooltip } from '../tooltip/WithTooltip';\nimport type { ChildrenListComplete } from './tabs.helpers';\nimport type { Link } from '../tooltip/TooltipLinkList';\n\nconst CollapseIcon = styled.span<{ isActive: boolean }>(({ theme, isActive }) => ({\n  display: 'inline-block',\n  width: 0,\n  height: 0,\n  marginLeft: 8,\n  color: isActive ? theme.color.secondary : theme.color.mediumdark,\n  borderRight: '3px solid transparent',\n  borderLeft: `3px solid transparent`,\n  borderTop: '3px solid',\n  transition: 'transform .1s ease-out',\n}));\n\nconst AddonButton = styled(TabButton)<{ preActive: boolean }>(({ active, theme, preActive }) => {\n  return `\n    color: ${preActive || active ? theme.color.secondary : theme.color.mediumdark};\n    &:hover {\n      color: ${theme.color.secondary};\n      .addon-collapsible-icon {\n        color: ${theme.color.secondary};\n      }\n    }\n  `;\n});\n\nexport function useList(list: ChildrenListComplete) {\n  const tabBarRef = useRef<HTMLDivElement>();\n  const addonsRef = useRef<HTMLButtonElement>();\n  const tabRefs = useRef(new Map<string, HTMLButtonElement>());\n  const { width: tabBarWidth = 1 } = useResizeObserver<HTMLDivElement>({\n    ref: tabBarRef,\n  });\n\n  const [visibleList, setVisibleList] = useState(list);\n  const [invisibleList, setInvisibleList] = useState<ChildrenListComplete>([]);\n  const previousList = useRef<ChildrenListComplete>(list);\n\n  const AddonTab = useCallback(\n    ({\n      menuName,\n      actions,\n    }: {\n      menuName: string;\n      actions?: {\n        onSelect: (id: string) => void;\n      } & Record<string, any>;\n    }) => {\n      const isAddonsActive = invisibleList.some(({ active }) => active);\n      const [isTooltipVisible, setTooltipVisible] = useState(false);\n      return (\n        <>\n          <WithTooltip\n            interactive\n            visible={isTooltipVisible}\n            onVisibleChange={setTooltipVisible}\n            placement=\"bottom\"\n            delayHide={100}\n            tooltip={\n              <TooltipLinkList\n                links={invisibleList.map(({ title, id, color, active }) => {\n                  return {\n                    id,\n                    title,\n                    color,\n                    active,\n                    onClick: (e) => {\n                      e.preventDefault();\n                      actions.onSelect(id);\n                    },\n                  } as Link;\n                })}\n              />\n            }\n          >\n            <AddonButton\n              ref={addonsRef}\n              active={isAddonsActive}\n              preActive={isTooltipVisible}\n              style={{ visibility: invisibleList.length ? 'visible' : 'hidden' }}\n              aria-hidden={!invisibleList.length}\n              className=\"tabbutton\"\n              type=\"button\"\n              role=\"tab\"\n            >\n              {menuName}\n              <CollapseIcon\n                className=\"addon-collapsible-icon\"\n                isActive={isAddonsActive || isTooltipVisible}\n              />\n            </AddonButton>\n          </WithTooltip>\n          {invisibleList.map(({ title, id, color }, index) => {\n            const indexId = `index-${index}`;\n            return (\n              <TabButton\n                id={`tabbutton-${sanitize(id) ?? indexId}`}\n                style={{ visibility: 'hidden' }}\n                aria-hidden\n                tabIndex={-1}\n                ref={(ref: HTMLButtonElement) => {\n                  tabRefs.current.set(id, ref);\n                }}\n                className=\"tabbutton\"\n                type=\"button\"\n                key={id}\n                textColor={color}\n                role=\"tab\"\n              >\n                {title}\n              </TabButton>\n            );\n          })}\n        </>\n      );\n    },\n    [invisibleList]\n  );\n\n  const setTabLists = useCallback(() => {\n    // get x and width from tabBarRef div\n    if (!tabBarRef.current || !addonsRef.current) {\n      return;\n    }\n    const { x, width } = tabBarRef.current.getBoundingClientRect();\n    const { width: widthAddonsTab } = addonsRef.current.getBoundingClientRect();\n    const rightBorder = invisibleList.length ? x + width - widthAddonsTab : x + width;\n\n    const newVisibleList: ChildrenListComplete = [];\n\n    let widthSum = 0;\n\n    const newInvisibleList = list.filter((item) => {\n      const { id } = item;\n      const tabButton = tabRefs.current.get(id);\n      const { width: tabWidth = 0 } = tabButton?.getBoundingClientRect() || {};\n\n      const crossBorder = x + widthSum + tabWidth > rightBorder;\n\n      //  `!tabButton` happens when new tab has just been added\n      if (!crossBorder || !tabButton) {\n        newVisibleList.push(item);\n      }\n\n      widthSum += tabWidth;\n\n      return crossBorder;\n    });\n\n    if (newVisibleList.length !== visibleList.length || previousList.current !== list) {\n      setVisibleList(newVisibleList);\n      setInvisibleList(newInvisibleList);\n      previousList.current = list;\n    }\n  }, [invisibleList.length, list, visibleList]);\n\n  useLayoutEffect(setTabLists, [setTabLists, tabBarWidth]);\n\n  return {\n    tabRefs,\n    addonsRef,\n    tabBarRef,\n    visibleList,\n    invisibleList,\n    AddonTab,\n  };\n}\n","import type { FC, MouseEvent, ReactElement, ReactNode } from 'react';\nimport React, { useMemo, Component, Fragment, memo } from 'react';\nimport { styled } from '@storybook/theming';\nimport { sanitize } from '@storybook/csf';\n\nimport type { Addon_RenderOptions } from '@storybook/types';\nimport { Placeholder } from '../placeholder/placeholder';\nimport { TabButton } from '../bar/button';\nimport { FlexBar } from '../bar/bar';\nimport { childrenToList, VisuallyHidden } from './tabs.helpers';\nimport { useList } from './tabs.hooks';\n\nconst ignoreSsrWarning =\n  '/* emotion-disable-server-rendering-unsafe-selector-warning-please-do-not-use-this-the-warning-exists-for-a-reason */';\n\nexport interface WrapperProps {\n  bordered?: boolean;\n  absolute?: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>(\n  ({ theme, bordered }) =>\n    bordered\n      ? {\n          backgroundClip: 'padding-box',\n          border: `1px solid ${theme.appBorderColor}`,\n          borderRadius: theme.appBorderRadius,\n          overflow: 'hidden',\n          boxSizing: 'border-box',\n        }\n      : {},\n  ({ absolute }) =>\n    absolute\n      ? {\n          width: '100%',\n          height: '100%',\n          boxSizing: 'border-box',\n          display: 'flex',\n          flexDirection: 'column',\n        }\n      : {\n          display: 'block',\n        }\n);\n\nexport const TabBar = styled.div({\n  overflow: 'hidden',\n\n  '&:first-of-type': {\n    marginLeft: -3,\n  },\n\n  whiteSpace: 'nowrap',\n  flexGrow: 1,\n});\n\nTabBar.displayName = 'TabBar';\n\nexport interface ContentProps {\n  absolute?: boolean;\n  bordered?: boolean;\n}\n\nconst Content = styled.div<ContentProps>(\n  {\n    display: 'block',\n    position: 'relative',\n  },\n  ({ theme }) => ({\n    fontSize: theme.typography.size.s2 - 1,\n    background: theme.background.content,\n  }),\n  ({ bordered, theme }) =>\n    bordered\n      ? {\n          borderRadius: `0 0 ${theme.appBorderRadius - 1}px ${theme.appBorderRadius - 1}px`,\n        }\n      : {},\n  ({ absolute, bordered }) =>\n    absolute\n      ? {\n          height: `calc(100% - ${bordered ? 42 : 40}px)`,\n\n          position: 'absolute',\n          left: 0 + (bordered ? 1 : 0),\n          right: 0 + (bordered ? 1 : 0),\n          bottom: 0 + (bordered ? 1 : 0),\n          top: 40 + (bordered ? 1 : 0),\n          overflow: 'auto',\n          [`& > *:first-child${ignoreSsrWarning}`]: {\n            position: 'absolute',\n            left: 0 + (bordered ? 1 : 0),\n            right: 0 + (bordered ? 1 : 0),\n            bottom: 0 + (bordered ? 1 : 0),\n            top: 0 + (bordered ? 1 : 0),\n            height: `calc(100% - ${bordered ? 2 : 0}px)`,\n            overflow: 'auto',\n          },\n        }\n      : {}\n);\n\nexport interface TabWrapperProps {\n  active: boolean;\n  render?: () => JSX.Element;\n  children?: ReactNode;\n}\n\nexport const TabWrapper: FC<TabWrapperProps> = ({ active, render, children }) => (\n  <VisuallyHidden active={active}>{render ? render() : children}</VisuallyHidden>\n);\n\nexport const panelProps = {};\n\nexport interface TabsProps {\n  children?: ReactElement<{\n    children: FC<Addon_RenderOptions>;\n    title: ReactNode | FC;\n  }>[];\n  id?: string;\n  tools?: ReactNode;\n  selected?: string;\n  actions?: {\n    onSelect: (id: string) => void;\n  } & Record<string, any>;\n  backgroundColor?: string;\n  absolute?: boolean;\n  bordered?: boolean;\n  menuName?: string;\n}\n\nexport const Tabs: FC<TabsProps> = memo(\n  ({\n    children,\n    selected,\n    actions,\n    absolute,\n    bordered,\n    tools,\n    backgroundColor,\n    id: htmlId,\n    menuName,\n  }) => {\n    const idList = childrenToList(children).map((i) => i.id);\n    const list = useMemo(\n      () =>\n        childrenToList(children).map((i, index) => ({\n          ...i,\n          active: selected ? i.id === selected : index === 0,\n        })),\n      [selected, ...idList]\n    );\n\n    const { visibleList, tabBarRef, tabRefs, AddonTab } = useList(list);\n\n    return list.length ? (\n      <Wrapper absolute={absolute} bordered={bordered} id={htmlId}>\n        <FlexBar scrollable={false} border backgroundColor={backgroundColor}>\n          <TabBar style={{ whiteSpace: 'normal' }} ref={tabBarRef} role=\"tablist\">\n            {visibleList.map(({ title, id, active, color }, index) => {\n              const indexId = `index-${index}`;\n\n              return (\n                <TabButton\n                  id={`tabbutton-${sanitize(id) ?? indexId}`}\n                  ref={(ref: HTMLButtonElement) => {\n                    tabRefs.current.set(id, ref);\n                  }}\n                  className={`tabbutton ${active ? 'tabbutton-active' : ''}`}\n                  type=\"button\"\n                  key={id}\n                  active={active}\n                  textColor={color}\n                  onClick={(e: MouseEvent) => {\n                    e.preventDefault();\n                    actions.onSelect(id);\n                  }}\n                  role=\"tab\"\n                >\n                  {typeof title === 'function' ? <title /> : title}\n                </TabButton>\n              );\n            })}\n            <AddonTab menuName={menuName} actions={actions} />\n          </TabBar>\n          {tools}\n        </FlexBar>\n        <Content id=\"panel-tab-content\" bordered={bordered} absolute={absolute}>\n          {list.map(({ id, active, render }) => {\n            return React.createElement(render, { key: id, active }, null);\n          })}\n        </Content>\n      </Wrapper>\n    ) : (\n      <Placeholder>\n        <Fragment key=\"title\">Nothing found</Fragment>\n      </Placeholder>\n    );\n  }\n);\nTabs.displayName = 'Tabs';\nTabs.defaultProps = {\n  id: null,\n  children: null,\n  tools: null,\n  selected: null,\n  absolute: false,\n  bordered: false,\n  menuName: 'Tabs',\n};\n\nexport interface TabsStateProps {\n  children: TabsProps['children'];\n  initial: string;\n  absolute: boolean;\n  bordered: boolean;\n  backgroundColor: string;\n  menuName: string;\n}\n\nexport interface TabsStateState {\n  selected: string;\n}\n\nexport class TabsState extends Component<TabsStateProps, TabsStateState> {\n  static defaultProps: TabsStateProps = {\n    children: [],\n    initial: null,\n    absolute: false,\n    bordered: false,\n    backgroundColor: '',\n    menuName: undefined,\n  };\n\n  constructor(props: TabsStateProps) {\n    super(props);\n\n    this.state = {\n      selected: props.initial,\n    };\n  }\n\n  handlers = {\n    onSelect: (id: string) => this.setState({ selected: id }),\n  };\n\n  render() {\n    const { bordered = false, absolute = false, children, backgroundColor, menuName } = this.props;\n    const { selected } = this.state;\n    return (\n      <Tabs\n        bordered={bordered}\n        absolute={absolute}\n        selected={selected}\n        backgroundColor={backgroundColor}\n        menuName={menuName}\n        actions={this.handlers}\n      >\n        {children}\n      </Tabs>\n    );\n  }\n}\n"],"names":["Side","styled","scrollable","left","right","UnstyledBar","children","className","jsx","ScrollArea","Bar","theme","border","BarInner","bgColor","FlexBar","backgroundColor","rest","Children","jsxs","VisuallyHidden","active","childrenToList","title","id","color","childrenOfChild","content","CollapseIcon","isActive","AddonButton","TabButton","preActive","useList","list","tabBarRef","useRef","addonsRef","tabRefs","tabBarWidth","useResizeObserver","visibleList","setVisibleList","useState","invisibleList","setInvisibleList","previousList","AddonTab","useCallback","menuName","actions","isAddonsActive","isTooltipVisible","setTooltipVisible","Fragment","WithTooltip","TooltipLinkList","e","index","indexId","sanitize","ref","setTabLists","x","width","widthAddonsTab","rightBorder","newVisibleList","widthSum","newInvisibleList","item","tabButton","tabWidth","crossBorder","useLayoutEffect","ignoreSsrWarning","Wrapper","bordered","absolute","TabBar","Content","TabWrapper","render","Tabs","memo","selected","tools","htmlId","idList","i","useMemo","React","Placeholder","TabsState","Component","props"],"mappings":"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"}