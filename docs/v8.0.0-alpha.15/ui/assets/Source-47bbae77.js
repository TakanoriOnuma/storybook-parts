import{r as p,R as C}from"./index-f1f2c4b1.js";import{S as f}from"./index-3d029e08.js";import{S as T,a as A}from"./Source-7fb69933.js";import{D as k}from"./DocsContext-d4de082c.js";import{s as _}from"./index-9cc128d5.js";function P(e){return _(e,{allowFunction:!1})}const b=p.createContext({sources:{}}),q="--unknown--",v=(e,t,n)=>{const{sources:r}=n,o=r==null?void 0:r[e];return(o==null?void 0:o[P(t)])||(o==null?void 0:o[q])||{code:""}},I=({snippet:e,storyContext:t,typeFromProps:n,transformFromProps:r})=>{var c;const{__isArgsStory:o}=t.parameters,s=((c=t.parameters.docs)==null?void 0:c.source)||{},a=n||s.type||f.AUTO;if(s.code!==void 0)return s.code;const u=a===f.DYNAMIC||a===f.AUTO&&e&&o?e:s.originalSource||"",i=r??s.transform;return(i==null?void 0:i(u,t))||u},F=(e,t,n)=>{var l,g,S,h;let r;const{of:o}=e;if("of"in e&&o===void 0)throw new Error("Unexpected `of={undefined}`, did you mistype a CSF file reference?");if(o)r=t.resolveOf(o,["story"]).story;else try{r=t.storyById()}catch{}const s=((g=(l=r==null?void 0:r.parameters)==null?void 0:l.docs)==null?void 0:g.source)||{},{code:a}=e;let d=e.format??s.format;const u=e.language??s.language??"jsx",i=e.dark??s.dark??!1;if(!a&&!r)return{error:A.SOURCE_UNAVAILABLE};if(a)return{code:a,format:d,language:u,dark:i};const c=t.getStoryContext(r),m=e.__forceInitialArgs?c.initialArgs:c.unmappedArgs,y=v(r.id,m,n);return d=y.format??((h=(S=r.parameters.docs)==null?void 0:S.source)==null?void 0:h.format)??!1,{code:I({snippet:y.code,storyContext:{...c,args:m},typeFromProps:e.type,transformFromProps:e.transform}),format:d,language:u,dark:i}},E=e=>{const t=p.useContext(b),n=p.useContext(k),r=F(e,n,t);return C.createElement(T,{...r})};E.__docgenInfo={description:"Story source doc block renders source code if provided,\nor the source for a story if `storyId` is provided, or\nthe source for the current story if nothing is provided.",methods:[],displayName:"Source",props:{language:{required:!1,tsType:{name:"SupportedLanguage"},description:"The language the syntax highlighter uses for your story’s code"},code:{required:!1,tsType:{name:"string"},description:"Use this to override the content of the source block."},format:{required:!1,tsType:{name:"ComponentProps['format']",raw:"ComponentProps<typeof SyntaxHighlighter>['format']"},description:"The (prettier) formatter the syntax highlighter uses for your story’s code."},dark:{required:!1,tsType:{name:"boolean"},description:"Display the source snippet in a dark mode."},type:{required:!1,tsType:{name:"SourceType"},description:"Where to read the source code from, see `SourceType`"},transform:{required:!1,tsType:{name:"signature",type:"function",raw:"(code: string, storyContext: StoryContextForLoaders) => string",signature:{arguments:[{type:{name:"string"},name:"code"},{type:{name:"StoryContextForLoaders"},name:"storyContext"}],return:{name:"string"}}},description:"Transform the detected source for display"},originalSource:{required:!1,tsType:{name:"string"},description:"Internal: set by our CSF loader (`enrichCsf` in `@storybook/csf-tools`)."},of:{required:!1,tsType:{name:"ModuleExport"},description:`Pass the export defining a story to render its source

\`\`\`jsx
import { Source } from '@storybook/blocks';
import * as ButtonStories from './Button.stories';

<Source of={ButtonStories.Primary} />
\`\`\``},__forceInitialArgs:{required:!1,tsType:{name:"boolean"},description:"Internal prop to control if a story re-renders on args updates"}}};export{E as S,P as a,b,F as u};
//# sourceMappingURL=Source-47bbae77.js.map
